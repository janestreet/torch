(* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT BY HAND! *)

open Ctypes

module C0 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs___and__ = foreign "atg___and__" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs___and__tensor_ =
    foreign "atg___and__tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs___iand__ =
    foreign "atg___iand__" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs___iand__tensor_ =
    foreign "atg___iand__tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs___ilshift__ =
    foreign "atg___ilshift__" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs___ilshift__tensor_ =
    foreign "atg___ilshift__tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs___ior__ = foreign "atg___ior__" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs___ior__tensor_ =
    foreign "atg___ior__tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs___irshift__ =
    foreign "atg___irshift__" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs___irshift__tensor_ =
    foreign "atg___irshift__tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs___ixor__ =
    foreign "atg___ixor__" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs___ixor__tensor_ =
    foreign "atg___ixor__tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs___lshift__ =
    foreign "atg___lshift__" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs___lshift__scalar_out_ =
    foreign
      "atg___lshift__scalar_out_"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs___lshift__tensor_ =
    foreign "atg___lshift__tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs___lshift__tensor_out_ =
    foreign
      "atg___lshift__tensor_out_"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs___or__ = foreign "atg___or__" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs___or__tensor_ =
    foreign "atg___or__tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs___rshift__ =
    foreign "atg___rshift__" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs___rshift__scalar_out_ =
    foreign
      "atg___rshift__scalar_out_"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs___rshift__tensor_ =
    foreign "atg___rshift__tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs___rshift__tensor_out_ =
    foreign
      "atg___rshift__tensor_out_"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs___xor__ = foreign "atg___xor__" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs___xor__tensor_ =
    foreign "atg___xor__tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__adaptive_avg_pool2d =
    foreign
      "atg__adaptive_avg_pool2d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__adaptive_avg_pool2d_backward =
    foreign
      "atg__adaptive_avg_pool2d_backward"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__adaptive_avg_pool2d_backward_out =
    foreign
      "atg__adaptive_avg_pool2d_backward_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__adaptive_avg_pool2d_out =
    foreign
      "atg__adaptive_avg_pool2d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__adaptive_avg_pool3d =
    foreign
      "atg__adaptive_avg_pool3d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__adaptive_avg_pool3d_backward =
    foreign
      "atg__adaptive_avg_pool3d_backward"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__adaptive_avg_pool3d_backward_out =
    foreign
      "atg__adaptive_avg_pool3d_backward_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__adaptive_avg_pool3d_out =
    foreign
      "atg__adaptive_avg_pool3d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__add_batch_dim =
    foreign
      "atg__add_batch_dim"
      (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__add_relu =
    foreign "atg__add_relu" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs__add_relu_ =
    foreign "atg__add_relu_" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs__add_relu_out =
    foreign
      "atg__add_relu_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs__add_relu_scalar =
    foreign
      "atg__add_relu_scalar"
      (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs__add_relu_scalar_ =
    foreign
      "atg__add_relu_scalar_"
      (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs__add_relu_scalar_out =
    foreign
      "atg__add_relu_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs__addmm_activation =
    foreign
      "atg__addmm_activation"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__addmm_activation_out =
    foreign
      "atg__addmm_activation_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__aminmax =
    foreign "atg__aminmax" (ptr raw_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs__aminmax_dim =
    foreign
      "atg__aminmax_dim"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> int @-> returning void)
  ;;

  let stubs__aminmax_dim_out =
    foreign
      "atg__aminmax_dim_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs__aminmax_out =
    foreign
      "atg__aminmax_out"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs__amp_update_scale =
    foreign
      "atg__amp_update_scale"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__amp_update_scale_ =
    foreign
      "atg__amp_update_scale_"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__amp_update_scale_out =
    foreign
      "atg__amp_update_scale_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__assert_scalar =
    foreign "atg__assert_scalar" (scalar @-> string @-> returning void)
  ;;

  let stubs__assert_tensor_metadata =
    foreign
      "atg__assert_tensor_metadata"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__autocast_to_full_precision =
    foreign
      "atg__autocast_to_full_precision"
      (gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__autocast_to_reduced_precision =
    foreign
      "atg__autocast_to_reduced_precision"
      (gc_tensor @-> int @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__batch_norm_no_update =
    foreign
      "atg__batch_norm_no_update"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__batch_norm_no_update_out =
    foreign
      "atg__batch_norm_no_update_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__batch_norm_with_update =
    foreign
      "atg__batch_norm_with_update"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__batch_norm_with_update_functional =
    foreign
      "atg__batch_norm_with_update_functional"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__batch_norm_with_update_out =
    foreign
      "atg__batch_norm_with_update_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__cast_byte =
    foreign "atg__cast_byte" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__cast_char =
    foreign "atg__cast_char" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__cast_double =
    foreign "atg__cast_double" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__cast_float =
    foreign "atg__cast_float" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__cast_half =
    foreign "atg__cast_half" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__cast_int =
    foreign "atg__cast_int" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__cast_long =
    foreign "atg__cast_long" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__cast_short =
    foreign "atg__cast_short" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__cdist_backward =
    foreign
      "atg__cdist_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__cdist_backward_out =
    foreign
      "atg__cdist_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__cholesky_solve_helper =
    foreign
      "atg__cholesky_solve_helper"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__cholesky_solve_helper_out =
    foreign
      "atg__cholesky_solve_helper_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__chunk_cat =
    foreign
      "atg__chunk_cat"
      (ptr gc_tensor @-> int @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__chunk_cat_out =
    foreign
      "atg__chunk_cat_out"
      (gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__coalesce = foreign "atg__coalesce" (gc_tensor @-> returning raw_tensor)

  let stubs__coalesce_out =
    foreign "atg__coalesce_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__coalesced =
    foreign "atg__coalesced" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__coalesced_ =
    foreign "atg__coalesced_" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__coalesced_out =
    foreign "atg__coalesced_out" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__compute_linear_combination =
    foreign
      "atg__compute_linear_combination"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__compute_linear_combination_out =
    foreign
      "atg__compute_linear_combination_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__conj = foreign "atg__conj" (gc_tensor @-> returning raw_tensor)
  let stubs__conj_copy = foreign "atg__conj_copy" (gc_tensor @-> returning raw_tensor)

  let stubs__conj_copy_out =
    foreign "atg__conj_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__conj_physical =
    foreign "atg__conj_physical" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__conj_physical_out =
    foreign "atg__conj_physical_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__conv_depthwise2d =
    foreign
      "atg__conv_depthwise2d"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__conv_depthwise2d_out =
    foreign
      "atg__conv_depthwise2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__convert_indices_from_coo_to_csr =
    foreign
      "atg__convert_indices_from_coo_to_csr"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__convert_indices_from_coo_to_csr_out =
    foreign
      "atg__convert_indices_from_coo_to_csr_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__convert_indices_from_csr_to_coo =
    foreign
      "atg__convert_indices_from_csr_to_coo"
      (gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__convert_indices_from_csr_to_coo_out =
    foreign
      "atg__convert_indices_from_csr_to_coo_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__convert_weight_to_int4pack =
    foreign
      "atg__convert_weight_to_int4pack"
      (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__convert_weight_to_int4pack_for_cpu =
    foreign
      "atg__convert_weight_to_int4pack_for_cpu"
      (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__convolution =
    foreign
      "atg__convolution"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__convolution_deprecated =
    foreign
      "atg__convolution_deprecated"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__convolution_mode =
    foreign
      "atg__convolution_mode"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> string
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__convolution_out =
    foreign
      "atg__convolution_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__copy_from =
    foreign "atg__copy_from" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__copy_from_and_resize =
    foreign "atg__copy_from_and_resize" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__copy_from_and_resize_out =
    foreign
      "atg__copy_from_and_resize_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__copy_from_out =
    foreign
      "atg__copy_from_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__cslt_compress =
    foreign "atg__cslt_compress" (gc_tensor @-> returning raw_tensor)
  ;;
end

module C1 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs__cslt_sparse_mm =
    foreign
      "atg__cslt_sparse_mm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__cslt_sparse_mm_search =
    foreign
      "atg__cslt_sparse_mm_search"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning int64_t)
  ;;

  let stubs__ctc_loss =
    foreign
      "atg__ctc_loss"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs__ctc_loss_backward =
    foreign
      "atg__ctc_loss_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__ctc_loss_backward_out =
    foreign
      "atg__ctc_loss_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__ctc_loss_backward_tensor =
    foreign
      "atg__ctc_loss_backward_tensor"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__ctc_loss_out =
    foreign
      "atg__ctc_loss_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs__ctc_loss_tensor =
    foreign
      "atg__ctc_loss_tensor"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs__ctc_loss_tensor_out =
    foreign
      "atg__ctc_loss_tensor_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs__cudnn_ctc_loss =
    foreign
      "atg__cudnn_ctc_loss"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__cudnn_ctc_loss_out =
    foreign
      "atg__cudnn_ctc_loss_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__cudnn_ctc_loss_tensor =
    foreign
      "atg__cudnn_ctc_loss_tensor"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__cudnn_init_dropout_state =
    foreign
      "atg__cudnn_init_dropout_state"
      (double @-> int @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__cudnn_init_dropout_state_out =
    foreign
      "atg__cudnn_init_dropout_state_out"
      (gc_tensor @-> double @-> int @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__cudnn_rnn =
    foreign
      "atg__cudnn_rnn"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> double
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__cudnn_rnn_flatten_weight =
    foreign
      "atg__cudnn_rnn_flatten_weight"
      (ptr gc_tensor
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__cudnn_rnn_flatten_weight_out =
    foreign
      "atg__cudnn_rnn_flatten_weight_out"
      (gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__cudnn_rnn_out =
    foreign
      "atg__cudnn_rnn_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> double
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__debug_has_internal_overlap =
    foreign "atg__debug_has_internal_overlap" (gc_tensor @-> returning int64_t)
  ;;

  let stubs__dim_arange =
    foreign "atg__dim_arange" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__dimi = foreign "atg__dimi" (gc_tensor @-> returning int64_t)
  let stubs__dimv = foreign "atg__dimv" (gc_tensor @-> returning int64_t)

  let stubs__dirichlet_grad =
    foreign
      "atg__dirichlet_grad"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__dirichlet_grad_out =
    foreign
      "atg__dirichlet_grad_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__dyn_quant_matmul_4bit =
    foreign
      "atg__dyn_quant_matmul_4bit"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__dyn_quant_pack_4bit_weight =
    foreign
      "atg__dyn_quant_pack_4bit_weight"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__efficient_attention_backward =
    foreign
      "atg__efficient_attention_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> double
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> double
       @-> int
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__efficientzerotensor =
    foreign
      "atg__efficientzerotensor"
      (ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__efficientzerotensor_out =
    foreign
      "atg__efficientzerotensor_out"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__embedding_bag =
    foreign
      "atg__embedding_bag"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__embedding_bag_backward =
    foreign
      "atg__embedding_bag_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__embedding_bag_dense_backward =
    foreign
      "atg__embedding_bag_dense_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__embedding_bag_dense_backward_out =
    foreign
      "atg__embedding_bag_dense_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__embedding_bag_forward_only =
    foreign
      "atg__embedding_bag_forward_only"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__embedding_bag_forward_only_out =
    foreign
      "atg__embedding_bag_forward_only_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__embedding_bag_out =
    foreign
      "atg__embedding_bag_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__embedding_bag_per_sample_weights_backward =
    foreign
      "atg__embedding_bag_per_sample_weights_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__embedding_bag_per_sample_weights_backward_out =
    foreign
      "atg__embedding_bag_per_sample_weights_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__embedding_bag_sparse_backward =
    foreign
      "atg__embedding_bag_sparse_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__empty_affine_quantized =
    foreign
      "atg__empty_affine_quantized"
      (ptr int64_t @-> int @-> int @-> int @-> double @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__empty_affine_quantized_out =
    foreign
      "atg__empty_affine_quantized_out"
      (gc_tensor @-> ptr int64_t @-> int @-> double @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__empty_per_channel_affine_quantized =
    foreign
      "atg__empty_per_channel_affine_quantized"
      (ptr int64_t
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__empty_per_channel_affine_quantized_out =
    foreign
      "atg__empty_per_channel_affine_quantized_out"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__euclidean_dist =
    foreign "atg__euclidean_dist" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__euclidean_dist_out =
    foreign
      "atg__euclidean_dist_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__fake_quantize_learnable_per_channel_affine =
    foreign
      "atg__fake_quantize_learnable_per_channel_affine"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs__fake_quantize_learnable_per_channel_affine_backward =
    foreign
      "atg__fake_quantize_learnable_per_channel_affine_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> double
       @-> returning void)
  ;;

  let stubs__fake_quantize_learnable_per_channel_affine_out =
    foreign
      "atg__fake_quantize_learnable_per_channel_affine_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs__fake_quantize_learnable_per_tensor_affine =
    foreign
      "atg__fake_quantize_learnable_per_tensor_affine"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs__fake_quantize_learnable_per_tensor_affine_backward =
    foreign
      "atg__fake_quantize_learnable_per_tensor_affine_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> double
       @-> returning void)
  ;;

  let stubs__fake_quantize_learnable_per_tensor_affine_out =
    foreign
      "atg__fake_quantize_learnable_per_tensor_affine_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs__fake_quantize_per_tensor_affine_cachemask_tensor_qparams =
    foreign
      "atg__fake_quantize_per_tensor_affine_cachemask_tensor_qparams"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__fake_quantize_per_tensor_affine_cachemask_tensor_qparams_out =
    foreign
      "atg__fake_quantize_per_tensor_affine_cachemask_tensor_qparams_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__fft_c2c =
    foreign
      "atg__fft_c2c"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__fft_c2c_out =
    foreign
      "atg__fft_c2c_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__fft_c2r =
    foreign
      "atg__fft_c2r"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__fft_c2r_out =
    foreign
      "atg__fft_c2r_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__fft_r2c =
    foreign
      "atg__fft_r2c"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__fft_r2c_out =
    foreign
      "atg__fft_r2c_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__fill_mem_eff_dropout_mask_ =
    foreign
      "atg__fill_mem_eff_dropout_mask_"
      (gc_tensor @-> double @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__flash_attention_backward =
    foreign
      "atg__flash_attention_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> double
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs__foobar =
    foreign "atg__foobar" (gc_tensor @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__foobar_out =
    foreign
      "atg__foobar_out"
      (gc_tensor @-> gc_tensor @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__functional_assert_async =
    foreign
      "atg__functional_assert_async"
      (gc_tensor @-> string @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__functional_assert_scalar =
    foreign
      "atg__functional_assert_scalar"
      (scalar @-> string @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__functional_sym_constrain_range =
    foreign
      "atg__functional_sym_constrain_range"
      (scalar
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__functional_sym_constrain_range_for_size =
    foreign
      "atg__functional_sym_constrain_range_for_size"
      (scalar
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__fused_adagrad =
    foreign
      "atg__fused_adagrad"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_adagrad_ =
    foreign
      "atg__fused_adagrad_"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_adam =
    foreign
      "atg__fused_adam"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> double
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_adam_ =
    foreign
      "atg__fused_adam_"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> double
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_adam_tensor_lr_ =
    foreign
      "atg__fused_adam_tensor_lr_"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_adam_tensor_lr_out =
    foreign
      "atg__fused_adam_tensor_lr_out"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_adamw =
    foreign
      "atg__fused_adamw"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> double
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_adamw_ =
    foreign
      "atg__fused_adamw_"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> double
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_adamw_tensor_lr_ =
    foreign
      "atg__fused_adamw_tensor_lr_"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_adamw_tensor_lr_out =
    foreign
      "atg__fused_adamw_tensor_lr_out"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_dropout =
    foreign
      "atg__fused_dropout"
      (ptr raw_tensor @-> gc_tensor @-> double @-> returning void)
  ;;

  let stubs__fused_dropout_out =
    foreign
      "atg__fused_dropout_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> returning void)
  ;;

  let stubs__fused_moving_avg_obs_fq_helper =
    foreign
      "atg__fused_moving_avg_obs_fq_helper"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__fused_moving_avg_obs_fq_helper_functional =
    foreign
      "atg__fused_moving_avg_obs_fq_helper_functional"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__fused_moving_avg_obs_fq_helper_out =
    foreign
      "atg__fused_moving_avg_obs_fq_helper_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__fused_sdp_choice =
    foreign
      "atg__fused_sdp_choice"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> double
       @-> int
       @-> int
       @-> returning int64_t)
  ;;

  let stubs__fused_sgd =
    foreign
      "atg__fused_sgd"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_sgd_ =
    foreign
      "atg__fused_sgd_"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> double
       @-> double
       @-> double
       @-> double
       @-> int
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_sgd_tensor_lr_ =
    foreign
      "atg__fused_sgd_tensor_lr_"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> double
       @-> double
       @-> gc_tensor
       @-> double
       @-> int
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fused_sgd_tensor_lr_out =
    foreign
      "atg__fused_sgd_tensor_lr_out"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> double
       @-> double
       @-> gc_tensor
       @-> double
       @-> int
       @-> int
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__fw_primal =
    foreign "atg__fw_primal" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__fw_primal_copy =
    foreign "atg__fw_primal_copy" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__fw_primal_copy_out =
    foreign
      "atg__fw_primal_copy_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__gather_sparse_backward =
    foreign
      "atg__gather_sparse_backward"
      (gc_tensor @-> int64_t @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__grid_sampler_2d_cpu_fallback =
    foreign
      "atg__grid_sampler_2d_cpu_fallback"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__grid_sampler_2d_cpu_fallback_backward =
    foreign
      "atg__grid_sampler_2d_cpu_fallback_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs__grid_sampler_2d_cpu_fallback_out =
    foreign
      "atg__grid_sampler_2d_cpu_fallback_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__has_compatible_shallow_copy_type =
    foreign
      "atg__has_compatible_shallow_copy_type"
      (gc_tensor @-> gc_tensor @-> returning bool)
  ;;

  let stubs__has_same_storage_numel =
    foreign "atg__has_same_storage_numel" (gc_tensor @-> gc_tensor @-> returning bool)
  ;;

  let stubs__histogramdd_bin_edges =
    foreign
      "atg__histogramdd_bin_edges"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr double
       @-> int
       @-> gc_tensor
       @-> int
       @-> returning (ptr raw_tensor))
  ;;

  let stubs__histogramdd_bin_edges_out =
    foreign
      "atg__histogramdd_bin_edges_out"
      (ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr double
       @-> int
       @-> gc_tensor
       @-> int
       @-> returning void)
  ;;

  let stubs__histogramdd_from_bin_cts =
    foreign
      "atg__histogramdd_from_bin_cts"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr double
       @-> int
       @-> gc_tensor
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__histogramdd_from_bin_cts_out =
    foreign
      "atg__histogramdd_from_bin_cts_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr double
       @-> int
       @-> gc_tensor
       @-> int
       @-> returning raw_tensor)
  ;;
end

module C2 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs__histogramdd_from_bin_tensors =
    foreign
      "atg__histogramdd_from_bin_tensors"
      (gc_tensor @-> ptr gc_tensor @-> int @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__histogramdd_from_bin_tensors_out =
    foreign
      "atg__histogramdd_from_bin_tensors_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__indices = foreign "atg__indices" (gc_tensor @-> returning raw_tensor)

  let stubs__indices_copy =
    foreign "atg__indices_copy" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__indices_copy_out =
    foreign "atg__indices_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__int_mm =
    foreign "atg__int_mm" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__int_mm_out =
    foreign
      "atg__int_mm_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__is_all_true = foreign "atg__is_all_true" (gc_tensor @-> returning raw_tensor)
  let stubs__is_any_true = foreign "atg__is_any_true" (gc_tensor @-> returning raw_tensor)
  let stubs__is_zerotensor = foreign "atg__is_zerotensor" (gc_tensor @-> returning bool)
  let stubs__lazy_clone = foreign "atg__lazy_clone" (gc_tensor @-> returning raw_tensor)

  let stubs__linalg_check_errors =
    foreign "atg__linalg_check_errors" (gc_tensor @-> string @-> int @-> returning void)
  ;;

  let stubs__linalg_det =
    foreign "atg__linalg_det" (ptr raw_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs__linalg_det_result =
    foreign
      "atg__linalg_det_result"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__linalg_eigh =
    foreign
      "atg__linalg_eigh"
      (ptr raw_tensor @-> gc_tensor @-> string @-> int @-> returning void)
  ;;

  let stubs__linalg_eigh_eigenvalues =
    foreign
      "atg__linalg_eigh_eigenvalues"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> int
       @-> returning void)
  ;;

  let stubs__linalg_eigvals =
    foreign "atg__linalg_eigvals" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__linalg_slogdet =
    foreign "atg__linalg_slogdet" (ptr raw_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs__linalg_slogdet_sign =
    foreign
      "atg__linalg_slogdet_sign"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__linalg_solve_ex =
    foreign
      "atg__linalg_solve_ex"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning void)
  ;;

  let stubs__linalg_solve_ex_result =
    foreign
      "atg__linalg_solve_ex_result"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__linalg_svd =
    foreign
      "atg__linalg_svd"
      (ptr raw_tensor @-> gc_tensor @-> int @-> int @-> string @-> int @-> returning void)
  ;;

  let stubs__linalg_svd_u =
    foreign
      "atg__linalg_svd_u"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> string
       @-> int
       @-> returning void)
  ;;

  let stubs__log_softmax =
    foreign "atg__log_softmax" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__log_softmax_backward_data =
    foreign
      "atg__log_softmax_backward_data"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__log_softmax_backward_data_out =
    foreign
      "atg__log_softmax_backward_data_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__log_softmax_out =
    foreign
      "atg__log_softmax_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__logcumsumexp =
    foreign "atg__logcumsumexp" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__logcumsumexp_out =
    foreign
      "atg__logcumsumexp_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__lstm_mps =
    foreign
      "atg__lstm_mps"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__lstm_mps_out =
    foreign
      "atg__lstm_mps_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__lu_with_info =
    foreign
      "atg__lu_with_info"
      (ptr raw_tensor @-> gc_tensor @-> int @-> int @-> returning void)
  ;;

  let stubs__make_dep_token =
    foreign "atg__make_dep_token" (int @-> int @-> returning raw_tensor)
  ;;

  let stubs__make_dual =
    foreign "atg__make_dual" (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__make_dual_copy =
    foreign
      "atg__make_dual_copy"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__make_dual_copy_out =
    foreign
      "atg__make_dual_copy_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__make_per_channel_quantized_tensor =
    foreign
      "atg__make_per_channel_quantized_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__make_per_channel_quantized_tensor_out =
    foreign
      "atg__make_per_channel_quantized_tensor_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__make_per_tensor_quantized_tensor =
    foreign
      "atg__make_per_tensor_quantized_tensor"
      (gc_tensor @-> double @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__make_per_tensor_quantized_tensor_out =
    foreign
      "atg__make_per_tensor_quantized_tensor_out"
      (gc_tensor @-> gc_tensor @-> double @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__masked_scale =
    foreign
      "atg__masked_scale"
      (gc_tensor @-> gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs__masked_scale_out =
    foreign
      "atg__masked_scale_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs__masked_softmax =
    foreign
      "atg__masked_softmax"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__masked_softmax_backward =
    foreign
      "atg__masked_softmax_backward"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__masked_softmax_backward_out =
    foreign
      "atg__masked_softmax_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__masked_softmax_out =
    foreign
      "atg__masked_softmax_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__mixed_dtypes_linear =
    foreign
      "atg__mixed_dtypes_linear"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__mkldnn_reshape =
    foreign
      "atg__mkldnn_reshape"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__mkldnn_reshape_out =
    foreign
      "atg__mkldnn_reshape_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__mkldnn_transpose =
    foreign
      "atg__mkldnn_transpose"
      (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__mkldnn_transpose_ =
    foreign
      "atg__mkldnn_transpose_"
      (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__mkldnn_transpose_out =
    foreign
      "atg__mkldnn_transpose_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__mps_convolution =
    foreign
      "atg__mps_convolution"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__mps_convolution_out =
    foreign
      "atg__mps_convolution_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__mps_convolution_transpose =
    foreign
      "atg__mps_convolution_transpose"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__mps_convolution_transpose_out =
    foreign
      "atg__mps_convolution_transpose_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__native_batch_norm_legit =
    foreign
      "atg__native_batch_norm_legit"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__native_batch_norm_legit_functional =
    foreign
      "atg__native_batch_norm_legit_functional"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__native_batch_norm_legit_no_stats =
    foreign
      "atg__native_batch_norm_legit_no_stats"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__native_batch_norm_legit_no_stats_out =
    foreign
      "atg__native_batch_norm_legit_no_stats_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__native_batch_norm_legit_no_training =
    foreign
      "atg__native_batch_norm_legit_no_training"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__native_batch_norm_legit_no_training_out =
    foreign
      "atg__native_batch_norm_legit_no_training_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__native_batch_norm_legit_out =
    foreign
      "atg__native_batch_norm_legit_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs__native_multi_head_attention =
    foreign
      "atg__native_multi_head_attention"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs__native_multi_head_attention_out =
    foreign
      "atg__native_multi_head_attention_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs__neg_view = foreign "atg__neg_view" (gc_tensor @-> returning raw_tensor)

  let stubs__neg_view_copy =
    foreign "atg__neg_view_copy" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__neg_view_copy_out =
    foreign "atg__neg_view_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_compute_contiguous_strides_offsets =
    foreign
      "atg__nested_compute_contiguous_strides_offsets"
      (ptr raw_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs__nested_from_padded =
    foreign
      "atg__nested_from_padded"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__nested_from_padded_and_nested_example =
    foreign
      "atg__nested_from_padded_and_nested_example"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_from_padded_and_nested_example_out =
    foreign
      "atg__nested_from_padded_and_nested_example_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_from_padded_out =
    foreign
      "atg__nested_from_padded_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__nested_from_padded_tensor =
    foreign
      "atg__nested_from_padded_tensor"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__nested_get_jagged_dummy =
    foreign "atg__nested_get_jagged_dummy" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_get_lengths =
    foreign "atg__nested_get_lengths" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_get_max_seqlen =
    foreign "atg__nested_get_max_seqlen" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_get_min_seqlen =
    foreign "atg__nested_get_min_seqlen" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_get_offsets =
    foreign "atg__nested_get_offsets" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_get_ragged_idx =
    foreign "atg__nested_get_ragged_idx" (gc_tensor @-> returning int64_t)
  ;;

  let stubs__nested_get_values =
    foreign "atg__nested_get_values" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_get_values_copy =
    foreign "atg__nested_get_values_copy" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_get_values_copy_out =
    foreign
      "atg__nested_get_values_copy_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_select_backward =
    foreign
      "atg__nested_select_backward"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__nested_sum_backward =
    foreign
      "atg__nested_sum_backward"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__nested_view_from_buffer =
    foreign
      "atg__nested_view_from_buffer"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_view_from_buffer_copy =
    foreign
      "atg__nested_view_from_buffer_copy"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__nested_view_from_buffer_copy_out =
    foreign
      "atg__nested_view_from_buffer_copy_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__nested_view_from_jagged =
    foreign
      "atg__nested_view_from_jagged"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__nested_view_from_jagged_copy =
    foreign
      "atg__nested_view_from_jagged_copy"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__nested_view_from_jagged_copy_out =
    foreign
      "atg__nested_view_from_jagged_copy_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__new_zeros_with_same_feature_meta =
    foreign
      "atg__new_zeros_with_same_feature_meta"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__new_zeros_with_same_feature_meta_out =
    foreign
      "atg__new_zeros_with_same_feature_meta_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__nnpack_available = foreign "atg__nnpack_available" (void @-> returning bool)

  let stubs__nnpack_spatial_convolution =
    foreign
      "atg__nnpack_spatial_convolution"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__nnpack_spatial_convolution_out =
    foreign
      "atg__nnpack_spatial_convolution_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__nnz = foreign "atg__nnz" (gc_tensor @-> returning int64_t)

  let stubs__pack_padded_sequence =
    foreign
      "atg__pack_padded_sequence"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs__pack_padded_sequence_backward =
    foreign
      "atg__pack_padded_sequence_backward"
      (gc_tensor @-> ptr int64_t @-> int @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__pack_padded_sequence_out =
    foreign
      "atg__pack_padded_sequence_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning void)
  ;;
end

module C3 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs__pad_circular =
    foreign
      "atg__pad_circular"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__pad_enum =
    foreign
      "atg__pad_enum"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__pad_packed_sequence =
    foreign
      "atg__pad_packed_sequence"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> scalar
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__pdist_backward =
    foreign
      "atg__pdist_backward"
      (gc_tensor @-> gc_tensor @-> double @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__pdist_backward_out =
    foreign
      "atg__pdist_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__pin_memory =
    foreign "atg__pin_memory" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__pin_memory_out =
    foreign
      "atg__pin_memory_out"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__prelu_kernel =
    foreign "atg__prelu_kernel" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__prelu_kernel_backward =
    foreign
      "atg__prelu_kernel_backward"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs__print = foreign "atg__print" (string @-> returning void)

  let stubs__propagate_xla_data =
    foreign "atg__propagate_xla_data" (gc_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs__remove_batch_dim =
    foreign
      "atg__remove_batch_dim"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__reshape_alias =
    foreign
      "atg__reshape_alias"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__reshape_alias_copy =
    foreign
      "atg__reshape_alias_copy"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__reshape_alias_copy_out =
    foreign
      "atg__reshape_alias_copy_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__reshape_copy =
    foreign
      "atg__reshape_copy"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__reshape_from_tensor =
    foreign "atg__reshape_from_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__resize_output =
    foreign
      "atg__resize_output"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__resize_output_ =
    foreign
      "atg__resize_output_"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__resize_output_out =
    foreign
      "atg__resize_output_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__rowwise_prune =
    foreign
      "atg__rowwise_prune"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs__safe_softmax =
    foreign "atg__safe_softmax" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sample_dirichlet =
    foreign "atg__sample_dirichlet" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__sample_dirichlet_out =
    foreign "atg__sample_dirichlet_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__saturate_weight_to_fp16 =
    foreign "atg__saturate_weight_to_fp16" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__scaled_dot_product_attention_math =
    foreign
      "atg__scaled_dot_product_attention_math"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> gc_tensor
       @-> double
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__scaled_dot_product_attention_math_for_mps =
    foreign
      "atg__scaled_dot_product_attention_math_for_mps"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> gc_tensor
       @-> double
       @-> int
       @-> returning void)
  ;;

  let stubs__scaled_dot_product_cudnn_attention_backward =
    foreign
      "atg__scaled_dot_product_cudnn_attention_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning void)
  ;;

  let stubs__scaled_dot_product_efficient_attention =
    foreign
      "atg__scaled_dot_product_efficient_attention"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning void)
  ;;

  let stubs__scaled_dot_product_flash_attention_backward =
    foreign
      "atg__scaled_dot_product_flash_attention_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> double
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> returning void)
  ;;

  let stubs__scaled_dot_product_flash_attention_for_cpu =
    foreign
      "atg__scaled_dot_product_flash_attention_for_cpu"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> gc_tensor
       @-> double
       @-> int
       @-> returning void)
  ;;

  let stubs__scaled_dot_product_flash_attention_for_cpu_backward =
    foreign
      "atg__scaled_dot_product_flash_attention_for_cpu_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> gc_tensor
       @-> double
       @-> int
       @-> returning void)
  ;;

  let stubs__scaled_grouped_mm =
    foreign
      "atg__scaled_grouped_mm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__scaled_mm =
    foreign
      "atg__scaled_mm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__scaled_mm_out =
    foreign
      "atg__scaled_mm_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__scatter_reduce =
    foreign
      "atg__scatter_reduce"
      (gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__scatter_reduce_ =
    foreign
      "atg__scatter_reduce_"
      (gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__scatter_reduce_two_out =
    foreign
      "atg__scatter_reduce_two_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__segment_reduce_backward =
    foreign
      "atg__segment_reduce_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs__segment_reduce_backward_out =
    foreign
      "atg__segment_reduce_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs__shape_as_tensor =
    foreign "atg__shape_as_tensor" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__slow_conv2d_backward =
    foreign
      "atg__slow_conv2d_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs__sobol_engine_draw =
    foreign
      "atg__sobol_engine_draw"
      (ptr raw_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs__sobol_engine_ff_ =
    foreign
      "atg__sobol_engine_ff_"
      (gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__sobol_engine_initialize_state_ =
    foreign
      "atg__sobol_engine_initialize_state_"
      (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__sobol_engine_scramble_ =
    foreign
      "atg__sobol_engine_scramble_"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__softmax =
    foreign "atg__softmax" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__softmax_backward_data =
    foreign
      "atg__softmax_backward_data"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__softmax_backward_data_out =
    foreign
      "atg__softmax_backward_data_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__softmax_out =
    foreign
      "atg__softmax_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_addmm =
    foreign
      "atg__sparse_addmm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_addmm_out =
    foreign
      "atg__sparse_addmm_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_broadcast_to =
    foreign
      "atg__sparse_broadcast_to"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_broadcast_to_copy =
    foreign
      "atg__sparse_broadcast_to_copy"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_broadcast_to_copy_out =
    foreign
      "atg__sparse_broadcast_to_copy_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_bsc_tensor_unsafe =
    foreign
      "atg__sparse_bsc_tensor_unsafe"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_bsr_tensor_unsafe =
    foreign
      "atg__sparse_bsr_tensor_unsafe"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_compressed_tensor_unsafe =
    foreign
      "atg__sparse_compressed_tensor_unsafe"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_compressed_tensor_with_dims =
    foreign
      "atg__sparse_compressed_tensor_with_dims"
      (int64_t
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_coo_tensor_unsafe =
    foreign
      "atg__sparse_coo_tensor_unsafe"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_coo_tensor_with_dims =
    foreign
      "atg__sparse_coo_tensor_with_dims"
      (int64_t
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_coo_tensor_with_dims_and_tensors =
    foreign
      "atg__sparse_coo_tensor_with_dims_and_tensors"
      (int64_t
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_coo_tensor_with_dims_and_tensors_out =
    foreign
      "atg__sparse_coo_tensor_with_dims_and_tensors_out"
      (gc_tensor
       @-> int64_t
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_coo_tensor_with_dims_out =
    foreign
      "atg__sparse_coo_tensor_with_dims_out"
      (gc_tensor @-> int64_t @-> int64_t @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_csc_tensor_unsafe =
    foreign
      "atg__sparse_csc_tensor_unsafe"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_csr_prod =
    foreign
      "atg__sparse_csr_prod"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_csr_prod_dim_dtype_out =
    foreign
      "atg__sparse_csr_prod_dim_dtype_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_csr_sum =
    foreign
      "atg__sparse_csr_sum"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_csr_sum_dim_dtype_out =
    foreign
      "atg__sparse_csr_sum_dim_dtype_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_csr_tensor_unsafe =
    foreign
      "atg__sparse_csr_tensor_unsafe"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_log_softmax =
    foreign
      "atg__sparse_log_softmax"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_log_softmax_backward_data =
    foreign
      "atg__sparse_log_softmax_backward_data"
      (gc_tensor @-> gc_tensor @-> int64_t @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__sparse_log_softmax_backward_data_out =
    foreign
      "atg__sparse_log_softmax_backward_data_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_log_softmax_int =
    foreign
      "atg__sparse_log_softmax_int"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_log_softmax_out =
    foreign
      "atg__sparse_log_softmax_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_mask_projection =
    foreign
      "atg__sparse_mask_projection"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_mask_projection_out =
    foreign
      "atg__sparse_mask_projection_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_mm =
    foreign "atg__sparse_mm" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__sparse_mm_reduce =
    foreign
      "atg__sparse_mm_reduce"
      (gc_tensor @-> gc_tensor @-> string @-> returning raw_tensor)
  ;;

  let stubs__sparse_mm_reduce_impl =
    foreign
      "atg__sparse_mm_reduce_impl"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> string @-> returning void)
  ;;

  let stubs__sparse_semi_structured_apply =
    foreign
      "atg__sparse_semi_structured_apply"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs__sparse_semi_structured_apply_dense =
    foreign
      "atg__sparse_semi_structured_apply_dense"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__sparse_semi_structured_linear =
    foreign
      "atg__sparse_semi_structured_linear"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_semi_structured_mm =
    foreign
      "atg__sparse_semi_structured_mm"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_semi_structured_tile =
    foreign
      "atg__sparse_semi_structured_tile"
      (ptr raw_tensor @-> gc_tensor @-> string @-> int @-> returning void)
  ;;

  let stubs__sparse_softmax =
    foreign "atg__sparse_softmax" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_softmax_backward_data =
    foreign
      "atg__sparse_softmax_backward_data"
      (gc_tensor @-> gc_tensor @-> int64_t @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__sparse_softmax_backward_data_out =
    foreign
      "atg__sparse_softmax_backward_data_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_softmax_int =
    foreign
      "atg__sparse_softmax_int"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_softmax_out =
    foreign
      "atg__sparse_softmax_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_sparse_matmul =
    foreign "atg__sparse_sparse_matmul" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__sparse_sparse_matmul_out =
    foreign
      "atg__sparse_sparse_matmul_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__sparse_sum = foreign "atg__sparse_sum" (gc_tensor @-> returning raw_tensor)

  let stubs__sparse_sum_backward =
    foreign
      "atg__sparse_sum_backward"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_sum_backward_out =
    foreign
      "atg__sparse_sum_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__sparse_sum_dim =
    foreign
      "atg__sparse_sum_dim"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_sum_dim_dtype =
    foreign
      "atg__sparse_sum_dim_dtype"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_sum_dim_out =
    foreign
      "atg__sparse_sum_dim_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__sparse_sum_dtype =
    foreign "atg__sparse_sum_dtype" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__spdiags =
    foreign
      "atg__spdiags"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;
end

module C4 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs__spdiags_out =
    foreign
      "atg__spdiags_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__spsolve =
    foreign "atg__spsolve" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__stack =
    foreign "atg__stack" (ptr gc_tensor @-> int @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__stack_out =
    foreign
      "atg__stack_out"
      (gc_tensor @-> ptr gc_tensor @-> int @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__standard_gamma =
    foreign "atg__standard_gamma" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__standard_gamma_grad =
    foreign "atg__standard_gamma_grad" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__standard_gamma_grad_out =
    foreign
      "atg__standard_gamma_grad_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__standard_gamma_out =
    foreign "atg__standard_gamma_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__test_ambiguous_defaults =
    foreign
      "atg__test_ambiguous_defaults"
      (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__test_ambiguous_defaults_b =
    foreign
      "atg__test_ambiguous_defaults_b"
      (gc_tensor @-> int64_t @-> string @-> returning raw_tensor)
  ;;

  let stubs__test_autograd_multiple_dispatch =
    foreign "atg__test_autograd_multiple_dispatch" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__test_autograd_multiple_dispatch_fullcoverage_out =
    foreign
      "atg__test_autograd_multiple_dispatch_fullcoverage_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__test_autograd_multiple_dispatch_ntonly =
    foreign
      "atg__test_autograd_multiple_dispatch_ntonly"
      (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__test_autograd_multiple_dispatch_view =
    foreign
      "atg__test_autograd_multiple_dispatch_view"
      (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__test_autograd_multiple_dispatch_view_copy =
    foreign
      "atg__test_autograd_multiple_dispatch_view_copy"
      (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__test_autograd_multiple_dispatch_view_copy_out =
    foreign
      "atg__test_autograd_multiple_dispatch_view_copy_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__test_check_tensor =
    foreign "atg__test_check_tensor" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__test_functorch_fallback =
    foreign
      "atg__test_functorch_fallback"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__test_functorch_fallback_out =
    foreign
      "atg__test_functorch_fallback_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__test_optional_filled_intlist =
    foreign
      "atg__test_optional_filled_intlist"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__test_optional_filled_intlist_out =
    foreign
      "atg__test_optional_filled_intlist_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__test_optional_floatlist =
    foreign
      "atg__test_optional_floatlist"
      (gc_tensor @-> ptr double @-> int @-> returning raw_tensor)
  ;;

  let stubs__test_optional_floatlist_out =
    foreign
      "atg__test_optional_floatlist_out"
      (gc_tensor @-> gc_tensor @-> ptr double @-> int @-> returning raw_tensor)
  ;;

  let stubs__test_optional_intlist =
    foreign
      "atg__test_optional_intlist"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__test_optional_intlist_out =
    foreign
      "atg__test_optional_intlist_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__test_parallel_materialize =
    foreign
      "atg__test_parallel_materialize"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__test_serialization_subcmul =
    foreign
      "atg__test_serialization_subcmul"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs__test_string_default =
    foreign
      "atg__test_string_default"
      (gc_tensor @-> string @-> string @-> returning raw_tensor)
  ;;

  let stubs__test_warn_in_autograd =
    foreign "atg__test_warn_in_autograd" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__test_warn_in_autograd_out =
    foreign
      "atg__test_warn_in_autograd_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__thnn_differentiable_gru_cell_backward =
    foreign
      "atg__thnn_differentiable_gru_cell_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__thnn_differentiable_lstm_cell_backward =
    foreign
      "atg__thnn_differentiable_lstm_cell_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__thnn_fused_gru_cell =
    foreign
      "atg__thnn_fused_gru_cell"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__thnn_fused_gru_cell_backward =
    foreign
      "atg__thnn_fused_gru_cell_backward"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs__thnn_fused_gru_cell_backward_out =
    foreign
      "atg__thnn_fused_gru_cell_backward_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning void)
  ;;

  let stubs__thnn_fused_gru_cell_out =
    foreign
      "atg__thnn_fused_gru_cell_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__thnn_fused_lstm_cell =
    foreign
      "atg__thnn_fused_lstm_cell"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__thnn_fused_lstm_cell_backward =
    foreign
      "atg__thnn_fused_lstm_cell_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning void)
  ;;

  let stubs__thnn_fused_lstm_cell_backward_impl =
    foreign
      "atg__thnn_fused_lstm_cell_backward_impl"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning void)
  ;;

  let stubs__thnn_fused_lstm_cell_backward_impl_out =
    foreign
      "atg__thnn_fused_lstm_cell_backward_impl_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning void)
  ;;

  let stubs__thnn_fused_lstm_cell_out =
    foreign
      "atg__thnn_fused_lstm_cell_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs__to_copy =
    foreign "atg__to_copy" (gc_tensor @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__to_copy_out =
    foreign "atg__to_copy_out" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs__to_cpu =
    foreign "atg__to_cpu" (ptr gc_tensor @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs__to_dense =
    foreign "atg__to_dense" (gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__to_dense_out =
    foreign
      "atg__to_dense_out"
      (gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs__to_sparse_bsc =
    foreign
      "atg__to_sparse_bsc"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__to_sparse_bsc_out =
    foreign
      "atg__to_sparse_bsc_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__to_sparse_bsr =
    foreign
      "atg__to_sparse_bsr"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__to_sparse_bsr_out =
    foreign
      "atg__to_sparse_bsr_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__to_sparse_csc =
    foreign "atg__to_sparse_csc" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__to_sparse_csc_out =
    foreign
      "atg__to_sparse_csc_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__to_sparse_csr =
    foreign "atg__to_sparse_csr" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__to_sparse_csr_out =
    foreign
      "atg__to_sparse_csr_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__to_sparse_semi_structured =
    foreign
      "atg__to_sparse_semi_structured"
      (ptr raw_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs__transform_bias_rescale_qkv =
    foreign
      "atg__transform_bias_rescale_qkv"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning void)
  ;;

  let stubs__transform_bias_rescale_qkv_out =
    foreign
      "atg__transform_bias_rescale_qkv_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__transformer_encoder_layer_fwd =
    foreign
      "atg__transformer_encoder_layer_fwd"
      (gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> double
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__transformer_encoder_layer_fwd_out =
    foreign
      "atg__transformer_encoder_layer_fwd_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> double
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__trilinear =
    foreign
      "atg__trilinear"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__trilinear_out =
    foreign
      "atg__trilinear_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs__triton_multi_head_attention =
    foreign
      "atg__triton_multi_head_attention"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__triton_multi_head_attention_out =
    foreign
      "atg__triton_multi_head_attention_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs__triton_scaled_dot_attention =
    foreign
      "atg__triton_scaled_dot_attention"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs__triton_scaled_dot_attention_out =
    foreign
      "atg__triton_scaled_dot_attention_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs__unique =
    foreign "atg__unique" (ptr raw_tensor @-> gc_tensor @-> int @-> int @-> returning void)
  ;;

  let stubs__unique2 =
    foreign
      "atg__unique2"
      (ptr raw_tensor @-> gc_tensor @-> int @-> int @-> int @-> returning void)
  ;;

  let stubs__unique2_out =
    foreign
      "atg__unique2_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__unique_out =
    foreign
      "atg__unique_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs__unpack_dual =
    foreign
      "atg__unpack_dual"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> returning void)
  ;;

  let stubs__unsafe_view =
    foreign "atg__unsafe_view" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__unsafe_view_out =
    foreign
      "atg__unsafe_view_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs__upsample_bicubic2d_aa =
    foreign
      "atg__upsample_bicubic2d_aa"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_bicubic2d_aa_backward =
    foreign
      "atg__upsample_bicubic2d_aa_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_bicubic2d_aa_backward_grad_input =
    foreign
      "atg__upsample_bicubic2d_aa_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_bicubic2d_aa_out =
    foreign
      "atg__upsample_bicubic2d_aa_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_bicubic2d_aa_vec =
    foreign
      "atg__upsample_bicubic2d_aa_vec"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_bilinear2d_aa =
    foreign
      "atg__upsample_bilinear2d_aa"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_bilinear2d_aa_backward =
    foreign
      "atg__upsample_bilinear2d_aa_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_bilinear2d_aa_backward_grad_input =
    foreign
      "atg__upsample_bilinear2d_aa_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_bilinear2d_aa_out =
    foreign
      "atg__upsample_bilinear2d_aa_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_bilinear2d_aa_vec =
    foreign
      "atg__upsample_bilinear2d_aa_vec"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact1d =
    foreign
      "atg__upsample_nearest_exact1d"
      (gc_tensor @-> ptr int64_t @-> int @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact1d_backward =
    foreign
      "atg__upsample_nearest_exact1d_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact1d_backward_grad_input =
    foreign
      "atg__upsample_nearest_exact1d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact1d_out =
    foreign
      "atg__upsample_nearest_exact1d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact1d_vec =
    foreign
      "atg__upsample_nearest_exact1d_vec"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact2d =
    foreign
      "atg__upsample_nearest_exact2d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact2d_backward =
    foreign
      "atg__upsample_nearest_exact2d_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact2d_backward_grad_input =
    foreign
      "atg__upsample_nearest_exact2d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact2d_out =
    foreign
      "atg__upsample_nearest_exact2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact2d_vec =
    foreign
      "atg__upsample_nearest_exact2d_vec"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact3d =
    foreign
      "atg__upsample_nearest_exact3d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact3d_backward =
    foreign
      "atg__upsample_nearest_exact3d_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact3d_backward_grad_input =
    foreign
      "atg__upsample_nearest_exact3d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact3d_out =
    foreign
      "atg__upsample_nearest_exact3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs__upsample_nearest_exact3d_vec =
    foreign
      "atg__upsample_nearest_exact3d_vec"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning raw_tensor)
  ;;

  let stubs__use_cudnn_ctc_loss =
    foreign
      "atg__use_cudnn_ctc_loss"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning bool)
  ;;

  let stubs__use_cudnn_ctc_loss_tensor =
    foreign
      "atg__use_cudnn_ctc_loss_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning bool)
  ;;

  let stubs__use_cudnn_rnn_flatten_weight =
    foreign "atg__use_cudnn_rnn_flatten_weight" (void @-> returning bool)
  ;;
end

module C5 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs__validate_compressed_sparse_indices =
    foreign
      "atg__validate_compressed_sparse_indices"
      (int
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__validate_sparse_bsc_tensor_args =
    foreign
      "atg__validate_sparse_bsc_tensor_args"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning void)
  ;;

  let stubs__validate_sparse_bsr_tensor_args =
    foreign
      "atg__validate_sparse_bsr_tensor_args"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning void)
  ;;

  let stubs__validate_sparse_csc_tensor_args =
    foreign
      "atg__validate_sparse_csc_tensor_args"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning void)
  ;;

  let stubs__values = foreign "atg__values" (gc_tensor @-> returning raw_tensor)
  let stubs__values_copy = foreign "atg__values_copy" (gc_tensor @-> returning raw_tensor)

  let stubs__values_copy_out =
    foreign "atg__values_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__version = foreign "atg__version" (gc_tensor @-> returning int64_t)

  let stubs__weight_int4pack_mm =
    foreign
      "atg__weight_int4pack_mm"
      (gc_tensor @-> gc_tensor @-> int64_t @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__weight_int4pack_mm_for_cpu =
    foreign
      "atg__weight_int4pack_mm_for_cpu"
      (gc_tensor @-> gc_tensor @-> int64_t @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__weight_int8pack_mm =
    foreign
      "atg__weight_int8pack_mm"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__weight_norm =
    foreign
      "atg__weight_norm"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs__weight_norm_differentiable_backward =
    foreign
      "atg__weight_norm_differentiable_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__weight_norm_interface =
    foreign
      "atg__weight_norm_interface"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning void)
  ;;

  let stubs__weight_norm_interface_backward =
    foreign
      "atg__weight_norm_interface_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__weight_norm_interface_backward_out =
    foreign
      "atg__weight_norm_interface_backward_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__weight_norm_interface_out =
    foreign
      "atg__weight_norm_interface_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning void)
  ;;

  let stubs__wrapped_linear_prepack =
    foreign
      "atg__wrapped_linear_prepack"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs__wrapped_quantized_linear_prepacked =
    foreign
      "atg__wrapped_quantized_linear_prepacked"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_abs = foreign "atg_abs" (gc_tensor @-> returning raw_tensor)
  let stubs_abs_ = foreign "atg_abs_" (gc_tensor @-> returning raw_tensor)

  let stubs_abs_out =
    foreign "atg_abs_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_absolute = foreign "atg_absolute" (gc_tensor @-> returning raw_tensor)
  let stubs_absolute_ = foreign "atg_absolute_" (gc_tensor @-> returning raw_tensor)

  let stubs_absolute_out =
    foreign "atg_absolute_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_acos = foreign "atg_acos" (gc_tensor @-> returning raw_tensor)
  let stubs_acos_ = foreign "atg_acos_" (gc_tensor @-> returning raw_tensor)

  let stubs_acos_out =
    foreign "atg_acos_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_acosh = foreign "atg_acosh" (gc_tensor @-> returning raw_tensor)
  let stubs_acosh_ = foreign "atg_acosh_" (gc_tensor @-> returning raw_tensor)

  let stubs_acosh_out =
    foreign "atg_acosh_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_adaptive_avg_pool1d =
    foreign
      "atg_adaptive_avg_pool1d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_adaptive_avg_pool1d_out =
    foreign
      "atg_adaptive_avg_pool1d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_adaptive_avg_pool2d =
    foreign
      "atg_adaptive_avg_pool2d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_adaptive_avg_pool2d_out =
    foreign
      "atg_adaptive_avg_pool2d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_adaptive_avg_pool3d =
    foreign
      "atg_adaptive_avg_pool3d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_adaptive_avg_pool3d_backward =
    foreign
      "atg_adaptive_avg_pool3d_backward"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_adaptive_avg_pool3d_out =
    foreign
      "atg_adaptive_avg_pool3d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_adaptive_max_pool1d =
    foreign
      "atg_adaptive_max_pool1d"
      (ptr raw_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning void)
  ;;

  let stubs_adaptive_max_pool2d =
    foreign
      "atg_adaptive_max_pool2d"
      (ptr raw_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning void)
  ;;

  let stubs_adaptive_max_pool2d_backward =
    foreign
      "atg_adaptive_max_pool2d_backward"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_adaptive_max_pool2d_backward_grad_input =
    foreign
      "atg_adaptive_max_pool2d_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_adaptive_max_pool2d_out =
    foreign
      "atg_adaptive_max_pool2d_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_adaptive_max_pool3d =
    foreign
      "atg_adaptive_max_pool3d"
      (ptr raw_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning void)
  ;;

  let stubs_adaptive_max_pool3d_backward =
    foreign
      "atg_adaptive_max_pool3d_backward"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_adaptive_max_pool3d_backward_grad_input =
    foreign
      "atg_adaptive_max_pool3d_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_adaptive_max_pool3d_out =
    foreign
      "atg_adaptive_max_pool3d_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_add =
    foreign "atg_add" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_add_ =
    foreign "atg_add_" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_add_out =
    foreign
      "atg_add_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_add_scalar =
    foreign "atg_add_scalar" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_add_scalar_ =
    foreign "atg_add_scalar_" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_add_scalar_out =
    foreign
      "atg_add_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_addbmm =
    foreign
      "atg_addbmm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addbmm_ =
    foreign
      "atg_addbmm_"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addbmm_out =
    foreign
      "atg_addbmm_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addcdiv =
    foreign
      "atg_addcdiv"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_addcdiv_ =
    foreign
      "atg_addcdiv_"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_addcdiv_out =
    foreign
      "atg_addcdiv_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addcmul =
    foreign
      "atg_addcmul"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_addcmul_ =
    foreign
      "atg_addcmul_"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_addcmul_out =
    foreign
      "atg_addcmul_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addmm =
    foreign
      "atg_addmm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addmm_ =
    foreign
      "atg_addmm_"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addmm_out =
    foreign
      "atg_addmm_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addmv =
    foreign
      "atg_addmv"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addmv_ =
    foreign
      "atg_addmv_"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addmv_out =
    foreign
      "atg_addmv_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addr =
    foreign
      "atg_addr"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addr_ =
    foreign
      "atg_addr_"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_addr_out =
    foreign
      "atg_addr_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_adjoint = foreign "atg_adjoint" (gc_tensor @-> returning raw_tensor)

  let stubs_affine_grid_generator =
    foreign
      "atg_affine_grid_generator"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_affine_grid_generator_backward =
    foreign
      "atg_affine_grid_generator_backward"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_affine_grid_generator_out =
    foreign
      "atg_affine_grid_generator_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_alias = foreign "atg_alias" (gc_tensor @-> returning raw_tensor)
  let stubs_alias_copy = foreign "atg_alias_copy" (gc_tensor @-> returning raw_tensor)

  let stubs_alias_copy_out =
    foreign "atg_alias_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_align_as =
    foreign "atg_align_as" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_align_tensors =
    foreign "atg_align_tensors" (ptr gc_tensor @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs_all = foreign "atg_all" (gc_tensor @-> returning raw_tensor)

  let stubs_all_all_out =
    foreign "atg_all_all_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_all_dim =
    foreign "atg_all_dim" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_all_dims =
    foreign
      "atg_all_dims"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_all_dims_out =
    foreign
      "atg_all_dims_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_all_out =
    foreign
      "atg_all_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_allclose =
    foreign
      "atg_allclose"
      (gc_tensor @-> gc_tensor @-> double @-> double @-> int @-> returning bool)
  ;;

  let stubs_alpha_dropout =
    foreign "atg_alpha_dropout" (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_alpha_dropout_ =
    foreign "atg_alpha_dropout_" (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_amax =
    foreign "atg_amax" (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_amax_out =
    foreign
      "atg_amax_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_amin =
    foreign "atg_amin" (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_amin_out =
    foreign
      "atg_amin_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_aminmax =
    foreign
      "atg_aminmax"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> int @-> int @-> returning void)
  ;;

  let stubs_aminmax_out =
    foreign
      "atg_aminmax_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_angle = foreign "atg_angle" (gc_tensor @-> returning raw_tensor)

  let stubs_angle_out =
    foreign "atg_angle_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_any = foreign "atg_any" (gc_tensor @-> returning raw_tensor)

  let stubs_any_all_out =
    foreign "atg_any_all_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_any_dim =
    foreign "atg_any_dim" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;
end

module C6 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_any_dims =
    foreign
      "atg_any_dims"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_any_dims_out =
    foreign
      "atg_any_dims_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_any_out =
    foreign
      "atg_any_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_arange = foreign "atg_arange" (scalar @-> int @-> int @-> returning raw_tensor)

  let stubs_arange_start =
    foreign "atg_arange_start" (scalar @-> scalar @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_arange_start_step =
    foreign
      "atg_arange_start_step"
      (scalar @-> scalar @-> scalar @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_arccos = foreign "atg_arccos" (gc_tensor @-> returning raw_tensor)
  let stubs_arccos_ = foreign "atg_arccos_" (gc_tensor @-> returning raw_tensor)

  let stubs_arccos_out =
    foreign "atg_arccos_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_arccosh = foreign "atg_arccosh" (gc_tensor @-> returning raw_tensor)
  let stubs_arccosh_ = foreign "atg_arccosh_" (gc_tensor @-> returning raw_tensor)

  let stubs_arccosh_out =
    foreign "atg_arccosh_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_arcsin = foreign "atg_arcsin" (gc_tensor @-> returning raw_tensor)
  let stubs_arcsin_ = foreign "atg_arcsin_" (gc_tensor @-> returning raw_tensor)

  let stubs_arcsin_out =
    foreign "atg_arcsin_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_arcsinh = foreign "atg_arcsinh" (gc_tensor @-> returning raw_tensor)
  let stubs_arcsinh_ = foreign "atg_arcsinh_" (gc_tensor @-> returning raw_tensor)

  let stubs_arcsinh_out =
    foreign "atg_arcsinh_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_arctan = foreign "atg_arctan" (gc_tensor @-> returning raw_tensor)

  let stubs_arctan2 =
    foreign "atg_arctan2" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_arctan2_ =
    foreign "atg_arctan2_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_arctan2_out =
    foreign
      "atg_arctan2_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_arctan_ = foreign "atg_arctan_" (gc_tensor @-> returning raw_tensor)

  let stubs_arctan_out =
    foreign "atg_arctan_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_arctanh = foreign "atg_arctanh" (gc_tensor @-> returning raw_tensor)
  let stubs_arctanh_ = foreign "atg_arctanh_" (gc_tensor @-> returning raw_tensor)

  let stubs_arctanh_out =
    foreign "atg_arctanh_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_argmax =
    foreign "atg_argmax" (gc_tensor @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_argmax_out =
    foreign
      "atg_argmax_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_argmin =
    foreign "atg_argmin" (gc_tensor @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_argmin_out =
    foreign
      "atg_argmin_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_argsort =
    foreign "atg_argsort" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_argsort_stable =
    foreign
      "atg_argsort_stable"
      (gc_tensor @-> int @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_argsort_stable_out =
    foreign
      "atg_argsort_stable_out"
      (gc_tensor @-> gc_tensor @-> int @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_argwhere = foreign "atg_argwhere" (gc_tensor @-> returning raw_tensor)

  let stubs_as_strided =
    foreign
      "atg_as_strided"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_as_strided_ =
    foreign
      "atg_as_strided_"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_as_strided_copy =
    foreign
      "atg_as_strided_copy"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_as_strided_copy_out =
    foreign
      "atg_as_strided_copy_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_as_strided_scatter =
    foreign
      "atg_as_strided_scatter"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_as_strided_scatter_out =
    foreign
      "atg_as_strided_scatter_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_asin = foreign "atg_asin" (gc_tensor @-> returning raw_tensor)
  let stubs_asin_ = foreign "atg_asin_" (gc_tensor @-> returning raw_tensor)

  let stubs_asin_out =
    foreign "atg_asin_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_asinh = foreign "atg_asinh" (gc_tensor @-> returning raw_tensor)
  let stubs_asinh_ = foreign "atg_asinh_" (gc_tensor @-> returning raw_tensor)

  let stubs_asinh_out =
    foreign "atg_asinh_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_atan = foreign "atg_atan" (gc_tensor @-> returning raw_tensor)
  let stubs_atan2 = foreign "atg_atan2" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_atan2_ =
    foreign "atg_atan2_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_atan2_out =
    foreign
      "atg_atan2_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_atan_ = foreign "atg_atan_" (gc_tensor @-> returning raw_tensor)

  let stubs_atan_out =
    foreign "atg_atan_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_atanh = foreign "atg_atanh" (gc_tensor @-> returning raw_tensor)
  let stubs_atanh_ = foreign "atg_atanh_" (gc_tensor @-> returning raw_tensor)

  let stubs_atanh_out =
    foreign "atg_atanh_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_atleast_1d = foreign "atg_atleast_1d" (gc_tensor @-> returning raw_tensor)

  let stubs_atleast_1d_sequence =
    foreign
      "atg_atleast_1d_sequence"
      (ptr gc_tensor @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs_atleast_2d = foreign "atg_atleast_2d" (gc_tensor @-> returning raw_tensor)

  let stubs_atleast_2d_sequence =
    foreign
      "atg_atleast_2d_sequence"
      (ptr gc_tensor @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs_atleast_3d = foreign "atg_atleast_3d" (gc_tensor @-> returning raw_tensor)

  let stubs_atleast_3d_sequence =
    foreign
      "atg_atleast_3d_sequence"
      (ptr gc_tensor @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs_avg_pool1d =
    foreign
      "atg_avg_pool1d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_avg_pool1d_out =
    foreign
      "atg_avg_pool1d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_avg_pool2d =
    foreign
      "atg_avg_pool2d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_avg_pool2d_backward =
    foreign
      "atg_avg_pool2d_backward"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_avg_pool2d_backward_grad_input =
    foreign
      "atg_avg_pool2d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_avg_pool2d_out =
    foreign
      "atg_avg_pool2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_avg_pool3d =
    foreign
      "atg_avg_pool3d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_avg_pool3d_backward =
    foreign
      "atg_avg_pool3d_backward"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_avg_pool3d_backward_grad_input =
    foreign
      "atg_avg_pool3d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_avg_pool3d_out =
    foreign
      "atg_avg_pool3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_baddbmm =
    foreign
      "atg_baddbmm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_baddbmm_ =
    foreign
      "atg_baddbmm_"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_baddbmm_out =
    foreign
      "atg_baddbmm_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_bartlett_window =
    foreign "atg_bartlett_window" (int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_bartlett_window_out =
    foreign "atg_bartlett_window_out" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_bartlett_window_periodic =
    foreign
      "atg_bartlett_window_periodic"
      (int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_bartlett_window_periodic_out =
    foreign
      "atg_bartlett_window_periodic_out"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_batch_norm =
    foreign
      "atg_batch_norm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_batch_norm_backward_elemt =
    foreign
      "atg_batch_norm_backward_elemt"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_batch_norm_backward_elemt_out =
    foreign
      "atg_batch_norm_backward_elemt_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_batch_norm_backward_reduce =
    foreign
      "atg_batch_norm_backward_reduce"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_batch_norm_backward_reduce_out =
    foreign
      "atg_batch_norm_backward_reduce_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_batch_norm_elemt =
    foreign
      "atg_batch_norm_elemt"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs_batch_norm_elemt_out =
    foreign
      "atg_batch_norm_elemt_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs_batch_norm_gather_stats =
    foreign
      "atg_batch_norm_gather_stats"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_batch_norm_gather_stats_out =
    foreign
      "atg_batch_norm_gather_stats_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_batch_norm_gather_stats_with_counts =
    foreign
      "atg_batch_norm_gather_stats_with_counts"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_batch_norm_gather_stats_with_counts_out =
    foreign
      "atg_batch_norm_gather_stats_with_counts_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_batch_norm_stats =
    foreign
      "atg_batch_norm_stats"
      (ptr raw_tensor @-> gc_tensor @-> double @-> returning void)
  ;;

  let stubs_batch_norm_stats_out =
    foreign
      "atg_batch_norm_stats_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> returning void)
  ;;

  let stubs_batch_norm_update_stats =
    foreign
      "atg_batch_norm_update_stats"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> returning void)
  ;;

  let stubs_batch_norm_update_stats_out =
    foreign
      "atg_batch_norm_update_stats_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> returning void)
  ;;

  let stubs_bernoulli = foreign "atg_bernoulli" (gc_tensor @-> returning raw_tensor)

  let stubs_bernoulli_ =
    foreign "atg_bernoulli_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bernoulli_float_ =
    foreign "atg_bernoulli_float_" (gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs_bernoulli_p =
    foreign "atg_bernoulli_p" (gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs_bernoulli_tensor =
    foreign "atg_bernoulli_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bilinear =
    foreign
      "atg_bilinear"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;
end

module C7 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_binary_cross_entropy =
    foreign
      "atg_binary_cross_entropy"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_binary_cross_entropy_backward =
    foreign
      "atg_binary_cross_entropy_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_binary_cross_entropy_backward_grad_input =
    foreign
      "atg_binary_cross_entropy_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_binary_cross_entropy_out =
    foreign
      "atg_binary_cross_entropy_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_binary_cross_entropy_with_logits =
    foreign
      "atg_binary_cross_entropy_with_logits"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_binary_cross_entropy_with_logits_out =
    foreign
      "atg_binary_cross_entropy_with_logits_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_bincount =
    foreign "atg_bincount" (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_bincount_out =
    foreign
      "atg_bincount_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_binomial =
    foreign "atg_binomial" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_binomial_out =
    foreign
      "atg_binomial_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_and =
    foreign "atg_bitwise_and" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_and_ =
    foreign "atg_bitwise_and_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_and_scalar_out =
    foreign
      "atg_bitwise_and_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_and_scalar_tensor =
    foreign "atg_bitwise_and_scalar_tensor" (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_and_scalar_tensor_out =
    foreign
      "atg_bitwise_and_scalar_tensor_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_and_tensor =
    foreign "atg_bitwise_and_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_and_tensor_ =
    foreign "atg_bitwise_and_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_and_tensor_out =
    foreign
      "atg_bitwise_and_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_left_shift =
    foreign "atg_bitwise_left_shift" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_left_shift_ =
    foreign "atg_bitwise_left_shift_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_left_shift_scalar_tensor =
    foreign
      "atg_bitwise_left_shift_scalar_tensor"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_left_shift_scalar_tensor_out =
    foreign
      "atg_bitwise_left_shift_scalar_tensor_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_left_shift_tensor_out =
    foreign
      "atg_bitwise_left_shift_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_left_shift_tensor_scalar =
    foreign
      "atg_bitwise_left_shift_tensor_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_left_shift_tensor_scalar_ =
    foreign
      "atg_bitwise_left_shift_tensor_scalar_"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_left_shift_tensor_scalar_out =
    foreign
      "atg_bitwise_left_shift_tensor_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_not = foreign "atg_bitwise_not" (gc_tensor @-> returning raw_tensor)
  let stubs_bitwise_not_ = foreign "atg_bitwise_not_" (gc_tensor @-> returning raw_tensor)

  let stubs_bitwise_not_out =
    foreign "atg_bitwise_not_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_or =
    foreign "atg_bitwise_or" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_or_ =
    foreign "atg_bitwise_or_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_or_scalar_out =
    foreign
      "atg_bitwise_or_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_or_scalar_tensor =
    foreign "atg_bitwise_or_scalar_tensor" (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_or_scalar_tensor_out =
    foreign
      "atg_bitwise_or_scalar_tensor_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_or_tensor =
    foreign "atg_bitwise_or_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_or_tensor_ =
    foreign "atg_bitwise_or_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_or_tensor_out =
    foreign
      "atg_bitwise_or_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_right_shift =
    foreign "atg_bitwise_right_shift" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_right_shift_ =
    foreign "atg_bitwise_right_shift_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_right_shift_scalar_tensor =
    foreign
      "atg_bitwise_right_shift_scalar_tensor"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_right_shift_scalar_tensor_out =
    foreign
      "atg_bitwise_right_shift_scalar_tensor_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_right_shift_tensor_out =
    foreign
      "atg_bitwise_right_shift_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_right_shift_tensor_scalar =
    foreign
      "atg_bitwise_right_shift_tensor_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_right_shift_tensor_scalar_ =
    foreign
      "atg_bitwise_right_shift_tensor_scalar_"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_right_shift_tensor_scalar_out =
    foreign
      "atg_bitwise_right_shift_tensor_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_xor =
    foreign "atg_bitwise_xor" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_xor_ =
    foreign "atg_bitwise_xor_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_xor_scalar_out =
    foreign
      "atg_bitwise_xor_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_bitwise_xor_scalar_tensor =
    foreign "atg_bitwise_xor_scalar_tensor" (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_xor_scalar_tensor_out =
    foreign
      "atg_bitwise_xor_scalar_tensor_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_xor_tensor =
    foreign "atg_bitwise_xor_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_xor_tensor_ =
    foreign "atg_bitwise_xor_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_bitwise_xor_tensor_out =
    foreign
      "atg_bitwise_xor_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_blackman_window =
    foreign "atg_blackman_window" (int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_blackman_window_out =
    foreign "atg_blackman_window_out" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_blackman_window_periodic =
    foreign
      "atg_blackman_window_periodic"
      (int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_blackman_window_periodic_out =
    foreign
      "atg_blackman_window_periodic_out"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_block_diag =
    foreign "atg_block_diag" (ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_block_diag_out =
    foreign
      "atg_block_diag_out"
      (gc_tensor @-> ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_bmm = foreign "atg_bmm" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_bmm_out =
    foreign "atg_bmm_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_broadcast_tensors =
    foreign "atg_broadcast_tensors" (ptr gc_tensor @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs_broadcast_to =
    foreign "atg_broadcast_to" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_bucketize =
    foreign
      "atg_bucketize"
      (gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_bucketize_scalar =
    foreign
      "atg_bucketize_scalar"
      (scalar @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_bucketize_scalar_out =
    foreign
      "atg_bucketize_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_bucketize_tensor_out =
    foreign
      "atg_bucketize_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_can_cast = foreign "atg_can_cast" (int @-> int @-> returning bool)

  let stubs_cartesian_prod =
    foreign "atg_cartesian_prod" (ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_cat =
    foreign "atg_cat" (ptr gc_tensor @-> int @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_cat_out =
    foreign
      "atg_cat_out"
      (gc_tensor @-> ptr gc_tensor @-> int @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_cauchy =
    foreign "atg_cauchy" (gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_cauchy_ =
    foreign "atg_cauchy_" (gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_cauchy_out =
    foreign
      "atg_cauchy_out"
      (gc_tensor @-> gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_ccol_indices = foreign "atg_ccol_indices" (gc_tensor @-> returning raw_tensor)

  let stubs_ccol_indices_copy =
    foreign "atg_ccol_indices_copy" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_ccol_indices_copy_out =
    foreign "atg_ccol_indices_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_cdist =
    foreign
      "atg_cdist"
      (gc_tensor @-> gc_tensor @-> double @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_ceil = foreign "atg_ceil" (gc_tensor @-> returning raw_tensor)
  let stubs_ceil_ = foreign "atg_ceil_" (gc_tensor @-> returning raw_tensor)

  let stubs_ceil_out =
    foreign "atg_ceil_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_celu = foreign "atg_celu" (gc_tensor @-> scalar @-> returning raw_tensor)
  let stubs_celu_ = foreign "atg_celu_" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_celu_out =
    foreign "atg_celu_out" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_chain_matmul =
    foreign "atg_chain_matmul" (ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_chain_matmul_out =
    foreign
      "atg_chain_matmul_out"
      (gc_tensor @-> ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_chalf = foreign "atg_chalf" (gc_tensor @-> returning raw_tensor)

  let stubs_channel_shuffle =
    foreign "atg_channel_shuffle" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_channel_shuffle_out =
    foreign
      "atg_channel_shuffle_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_cholesky = foreign "atg_cholesky" (gc_tensor @-> int @-> returning raw_tensor)

  let stubs_cholesky_inverse =
    foreign "atg_cholesky_inverse" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_cholesky_inverse_out =
    foreign
      "atg_cholesky_inverse_out"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_cholesky_out =
    foreign "atg_cholesky_out" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_cholesky_solve =
    foreign "atg_cholesky_solve" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_cholesky_solve_out =
    foreign
      "atg_cholesky_solve_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_choose_qparams_optimized =
    foreign
      "atg_choose_qparams_optimized"
      (ptr raw_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> double
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_chunk =
    foreign "atg_chunk" (gc_tensor @-> int64_t @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_clamp =
    foreign "atg_clamp" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_clamp_ =
    foreign "atg_clamp_" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_clamp_max =
    foreign "atg_clamp_max" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;
end

module C8 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_clamp_max_ =
    foreign "atg_clamp_max_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_clamp_max_out =
    foreign
      "atg_clamp_max_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_clamp_max_tensor =
    foreign "atg_clamp_max_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clamp_max_tensor_ =
    foreign "atg_clamp_max_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clamp_max_tensor_out =
    foreign
      "atg_clamp_max_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clamp_min =
    foreign "atg_clamp_min" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_clamp_min_ =
    foreign "atg_clamp_min_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_clamp_min_out =
    foreign
      "atg_clamp_min_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_clamp_min_tensor =
    foreign "atg_clamp_min_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clamp_min_tensor_ =
    foreign "atg_clamp_min_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clamp_min_tensor_out =
    foreign
      "atg_clamp_min_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clamp_out =
    foreign
      "atg_clamp_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_clamp_tensor =
    foreign
      "atg_clamp_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clamp_tensor_ =
    foreign
      "atg_clamp_tensor_"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clamp_tensor_out =
    foreign
      "atg_clamp_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clip =
    foreign "atg_clip" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_clip_ =
    foreign "atg_clip_" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_clip_out =
    foreign
      "atg_clip_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_clip_tensor =
    foreign
      "atg_clip_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clip_tensor_ =
    foreign
      "atg_clip_tensor_"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clip_tensor_out =
    foreign
      "atg_clip_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_clone = foreign "atg_clone" (gc_tensor @-> returning raw_tensor)

  let stubs_clone_out =
    foreign "atg_clone_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_coalesce = foreign "atg_coalesce" (gc_tensor @-> returning raw_tensor)

  let stubs_col2im =
    foreign
      "atg_col2im"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_col2im_out =
    foreign
      "atg_col2im_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_col_indices = foreign "atg_col_indices" (gc_tensor @-> returning raw_tensor)

  let stubs_col_indices_copy =
    foreign "atg_col_indices_copy" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_col_indices_copy_out =
    foreign "atg_col_indices_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_column_stack =
    foreign "atg_column_stack" (ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_column_stack_out =
    foreign
      "atg_column_stack_out"
      (gc_tensor @-> ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_combinations =
    foreign "atg_combinations" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_complex =
    foreign "atg_complex" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_complex_out =
    foreign
      "atg_complex_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_concat =
    foreign "atg_concat" (ptr gc_tensor @-> int @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_concat_out =
    foreign
      "atg_concat_out"
      (gc_tensor @-> ptr gc_tensor @-> int @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_concatenate =
    foreign "atg_concatenate" (ptr gc_tensor @-> int @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_concatenate_out =
    foreign
      "atg_concatenate_out"
      (gc_tensor @-> ptr gc_tensor @-> int @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_conj = foreign "atg_conj" (gc_tensor @-> returning raw_tensor)

  let stubs_conj_physical =
    foreign "atg_conj_physical" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_conj_physical_ =
    foreign "atg_conj_physical_" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_conj_physical_out =
    foreign "atg_conj_physical_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_constant_pad_nd =
    foreign
      "atg_constant_pad_nd"
      (gc_tensor @-> ptr int64_t @-> int @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_constant_pad_nd_out =
    foreign
      "atg_constant_pad_nd_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_contiguous = foreign "atg_contiguous" (gc_tensor @-> returning raw_tensor)

  let stubs_conv1d =
    foreign
      "atg_conv1d"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_conv1d_padding =
    foreign
      "atg_conv1d_padding"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> string
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_conv2d =
    foreign
      "atg_conv2d"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_conv2d_padding =
    foreign
      "atg_conv2d_padding"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> string
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_conv3d =
    foreign
      "atg_conv3d"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_conv3d_padding =
    foreign
      "atg_conv3d_padding"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> string
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_conv_depthwise3d =
    foreign
      "atg_conv_depthwise3d"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_conv_depthwise3d_out =
    foreign
      "atg_conv_depthwise3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_conv_tbc =
    foreign
      "atg_conv_tbc"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_conv_tbc_backward =
    foreign
      "atg_conv_tbc_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_conv_tbc_out =
    foreign
      "atg_conv_tbc_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_conv_transpose1d =
    foreign
      "atg_conv_transpose1d"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_conv_transpose2d =
    foreign
      "atg_conv_transpose2d"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_conv_transpose3d =
    foreign
      "atg_conv_transpose3d"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_convolution =
    foreign
      "atg_convolution"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_convolution_out =
    foreign
      "atg_convolution_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_convolution_overrideable =
    foreign
      "atg_convolution_overrideable"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_convolution_overrideable_out =
    foreign
      "atg_convolution_overrideable_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_copy =
    foreign "atg_copy" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_copy_out =
    foreign
      "atg_copy_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_copy_sparse_to_sparse =
    foreign
      "atg_copy_sparse_to_sparse"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_copy_sparse_to_sparse_ =
    foreign
      "atg_copy_sparse_to_sparse_"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_copy_sparse_to_sparse_out =
    foreign
      "atg_copy_sparse_to_sparse_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_copysign =
    foreign "atg_copysign" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_copysign_ =
    foreign "atg_copysign_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_copysign_out =
    foreign
      "atg_copysign_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_copysign_scalar =
    foreign "atg_copysign_scalar" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_copysign_scalar_ =
    foreign "atg_copysign_scalar_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_copysign_scalar_out =
    foreign
      "atg_copysign_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_corrcoef = foreign "atg_corrcoef" (gc_tensor @-> returning raw_tensor)
  let stubs_cos = foreign "atg_cos" (gc_tensor @-> returning raw_tensor)
  let stubs_cos_ = foreign "atg_cos_" (gc_tensor @-> returning raw_tensor)

  let stubs_cos_out =
    foreign "atg_cos_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_cosh = foreign "atg_cosh" (gc_tensor @-> returning raw_tensor)
  let stubs_cosh_ = foreign "atg_cosh_" (gc_tensor @-> returning raw_tensor)

  let stubs_cosh_out =
    foreign "atg_cosh_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_cosine_embedding_loss =
    foreign
      "atg_cosine_embedding_loss"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_cosine_similarity =
    foreign
      "atg_cosine_similarity"
      (gc_tensor @-> gc_tensor @-> int64_t @-> double @-> returning raw_tensor)
  ;;

  let stubs_count_nonzero =
    foreign
      "atg_count_nonzero"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_count_nonzero_out =
    foreign
      "atg_count_nonzero_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_cov =
    foreign
      "atg_cov"
      (gc_tensor @-> int64_t @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_cross =
    foreign
      "atg_cross"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_cross_entropy_loss =
    foreign
      "atg_cross_entropy_loss"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs_cross_out =
    foreign
      "atg_cross_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_crow_indices = foreign "atg_crow_indices" (gc_tensor @-> returning raw_tensor)

  let stubs_crow_indices_copy =
    foreign "atg_crow_indices_copy" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_crow_indices_copy_out =
    foreign "atg_crow_indices_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_ctc_loss =
    foreign
      "atg_ctc_loss"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_ctc_loss_tensor =
    foreign
      "atg_ctc_loss_tensor"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_cudnn_affine_grid_generator =
    foreign
      "atg_cudnn_affine_grid_generator"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_cudnn_affine_grid_generator_backward =
    foreign
      "atg_cudnn_affine_grid_generator_backward"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_cudnn_affine_grid_generator_backward_out =
    foreign
      "atg_cudnn_affine_grid_generator_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_cudnn_affine_grid_generator_out =
    foreign
      "atg_cudnn_affine_grid_generator_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_cudnn_batch_norm =
    foreign
      "atg_cudnn_batch_norm"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs_cudnn_batch_norm_backward =
    foreign
      "atg_cudnn_batch_norm_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> gc_tensor
       @-> returning void)
  ;;
end

module C9 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_cudnn_batch_norm_backward_out =
    foreign
      "atg_cudnn_batch_norm_backward_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_cudnn_batch_norm_out =
    foreign
      "atg_cudnn_batch_norm_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs_cudnn_convolution =
    foreign
      "atg_cudnn_convolution"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_cudnn_convolution_add_relu =
    foreign
      "atg_cudnn_convolution_add_relu"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_cudnn_convolution_add_relu_out =
    foreign
      "atg_cudnn_convolution_add_relu_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_cudnn_convolution_out =
    foreign
      "atg_cudnn_convolution_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_cudnn_convolution_relu =
    foreign
      "atg_cudnn_convolution_relu"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_cudnn_convolution_relu_out =
    foreign
      "atg_cudnn_convolution_relu_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_cudnn_convolution_transpose =
    foreign
      "atg_cudnn_convolution_transpose"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_cudnn_convolution_transpose_out =
    foreign
      "atg_cudnn_convolution_transpose_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_cudnn_grid_sampler =
    foreign "atg_cudnn_grid_sampler" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_cudnn_grid_sampler_backward =
    foreign
      "atg_cudnn_grid_sampler_backward"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs_cudnn_grid_sampler_backward_out =
    foreign
      "atg_cudnn_grid_sampler_backward_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_cudnn_grid_sampler_out =
    foreign
      "atg_cudnn_grid_sampler_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_cudnn_is_acceptable =
    foreign "atg_cudnn_is_acceptable" (gc_tensor @-> returning bool)
  ;;

  let stubs_cummax =
    foreign "atg_cummax" (ptr raw_tensor @-> gc_tensor @-> int64_t @-> returning void)
  ;;

  let stubs_cummax_out =
    foreign
      "atg_cummax_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_cummaxmin_backward =
    foreign
      "atg_cummaxmin_backward"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_cummin =
    foreign "atg_cummin" (ptr raw_tensor @-> gc_tensor @-> int64_t @-> returning void)
  ;;

  let stubs_cummin_out =
    foreign
      "atg_cummin_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_cumprod =
    foreign "atg_cumprod" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_cumprod_ =
    foreign "atg_cumprod_" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_cumprod_backward =
    foreign
      "atg_cumprod_backward"
      (gc_tensor @-> gc_tensor @-> int64_t @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_cumprod_out =
    foreign
      "atg_cumprod_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_cumsum =
    foreign "atg_cumsum" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_cumsum_ =
    foreign "atg_cumsum_" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_cumsum_out =
    foreign
      "atg_cumsum_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_cumulative_trapezoid =
    foreign
      "atg_cumulative_trapezoid"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_cumulative_trapezoid_dx =
    foreign
      "atg_cumulative_trapezoid_dx"
      (gc_tensor @-> scalar @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_data = foreign "atg_data" (gc_tensor @-> returning raw_tensor)
  let stubs_deg2rad = foreign "atg_deg2rad" (gc_tensor @-> returning raw_tensor)
  let stubs_deg2rad_ = foreign "atg_deg2rad_" (gc_tensor @-> returning raw_tensor)

  let stubs_deg2rad_out =
    foreign "atg_deg2rad_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_dense_dim = foreign "atg_dense_dim" (gc_tensor @-> returning int64_t)
  let stubs_dequantize = foreign "atg_dequantize" (gc_tensor @-> returning raw_tensor)

  let stubs_dequantize_self_out =
    foreign "atg_dequantize_self_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_dequantize_tensors =
    foreign "atg_dequantize_tensors" (ptr gc_tensor @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs_dequantize_tensors_out =
    foreign
      "atg_dequantize_tensors_out"
      (ptr gc_tensor @-> int @-> ptr gc_tensor @-> int @-> returning void)
  ;;

  let stubs_det = foreign "atg_det" (gc_tensor @-> returning raw_tensor)
  let stubs_detach = foreign "atg_detach" (gc_tensor @-> returning raw_tensor)
  let stubs_detach_ = foreign "atg_detach_" (gc_tensor @-> returning raw_tensor)
  let stubs_detach_copy = foreign "atg_detach_copy" (gc_tensor @-> returning raw_tensor)

  let stubs_detach_copy_out =
    foreign "atg_detach_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_diag = foreign "atg_diag" (gc_tensor @-> int64_t @-> returning raw_tensor)

  let stubs_diag_embed =
    foreign
      "atg_diag_embed"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_diag_embed_out =
    foreign
      "atg_diag_embed_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_diag_out =
    foreign "atg_diag_out" (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_diagflat =
    foreign "atg_diagflat" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_diagonal =
    foreign
      "atg_diagonal"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_diagonal_backward =
    foreign
      "atg_diagonal_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_diagonal_backward_out =
    foreign
      "atg_diagonal_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_diagonal_copy =
    foreign
      "atg_diagonal_copy"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_diagonal_copy_out =
    foreign
      "atg_diagonal_copy_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_diagonal_scatter =
    foreign
      "atg_diagonal_scatter"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_diagonal_scatter_out =
    foreign
      "atg_diagonal_scatter_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_diff =
    foreign
      "atg_diff"
      (gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_diff_out =
    foreign
      "atg_diff_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_digamma = foreign "atg_digamma" (gc_tensor @-> returning raw_tensor)
  let stubs_digamma_ = foreign "atg_digamma_" (gc_tensor @-> returning raw_tensor)

  let stubs_digamma_out =
    foreign "atg_digamma_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_dist =
    foreign "atg_dist" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_dist_out =
    foreign
      "atg_dist_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_div = foreign "atg_div" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  let stubs_div_ = foreign "atg_div_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_div_out =
    foreign "atg_div_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_div_out_mode =
    foreign
      "atg_div_out_mode"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_div_scalar =
    foreign "atg_div_scalar" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_div_scalar_ =
    foreign "atg_div_scalar_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_div_scalar_mode =
    foreign
      "atg_div_scalar_mode"
      (gc_tensor @-> scalar @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_div_scalar_mode_ =
    foreign
      "atg_div_scalar_mode_"
      (gc_tensor @-> scalar @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_div_scalar_mode_out =
    foreign
      "atg_div_scalar_mode_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_div_scalar_out =
    foreign
      "atg_div_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_div_tensor_mode =
    foreign
      "atg_div_tensor_mode"
      (gc_tensor @-> gc_tensor @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_div_tensor_mode_ =
    foreign
      "atg_div_tensor_mode_"
      (gc_tensor @-> gc_tensor @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_divide =
    foreign "atg_divide" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_divide_ =
    foreign "atg_divide_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_divide_out =
    foreign
      "atg_divide_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_divide_out_mode =
    foreign
      "atg_divide_out_mode"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_divide_scalar =
    foreign "atg_divide_scalar" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_divide_scalar_ =
    foreign "atg_divide_scalar_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_divide_scalar_mode =
    foreign
      "atg_divide_scalar_mode"
      (gc_tensor @-> scalar @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_divide_scalar_mode_ =
    foreign
      "atg_divide_scalar_mode_"
      (gc_tensor @-> scalar @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_divide_tensor_mode =
    foreign
      "atg_divide_tensor_mode"
      (gc_tensor @-> gc_tensor @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_divide_tensor_mode_ =
    foreign
      "atg_divide_tensor_mode_"
      (gc_tensor @-> gc_tensor @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_dot = foreign "atg_dot" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_dot_out =
    foreign "atg_dot_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_dropout =
    foreign "atg_dropout" (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_dropout_ =
    foreign "atg_dropout_" (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_dsplit =
    foreign "atg_dsplit" (gc_tensor @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_dsplit_array =
    foreign
      "atg_dsplit_array"
      (gc_tensor @-> ptr int64_t @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs_dstack = foreign "atg_dstack" (ptr gc_tensor @-> int @-> returning raw_tensor)

  let stubs_dstack_out =
    foreign "atg_dstack_out" (gc_tensor @-> ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_einsum =
    foreign
      "atg_einsum"
      (string @-> ptr gc_tensor @-> int @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_elu =
    foreign "atg_elu" (gc_tensor @-> scalar @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_elu_ =
    foreign
      "atg_elu_"
      (gc_tensor @-> scalar @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_elu_backward =
    foreign
      "atg_elu_backward"
      (gc_tensor
       @-> scalar
       @-> scalar
       @-> scalar
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_elu_backward_grad_input =
    foreign
      "atg_elu_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> scalar
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_elu_out =
    foreign
      "atg_elu_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_embedding =
    foreign
      "atg_embedding"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_embedding_backward =
    foreign
      "atg_embedding_backward"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;
end

module C10 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_embedding_bag =
    foreign
      "atg_embedding_bag"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> int
       @-> returning void)
  ;;

  let stubs_embedding_bag_padding_idx =
    foreign
      "atg_embedding_bag_padding_idx"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_embedding_dense_backward =
    foreign
      "atg_embedding_dense_backward"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_embedding_dense_backward_out =
    foreign
      "atg_embedding_dense_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_embedding_out =
    foreign
      "atg_embedding_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_embedding_renorm =
    foreign
      "atg_embedding_renorm"
      (gc_tensor @-> gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_embedding_renorm_ =
    foreign
      "atg_embedding_renorm_"
      (gc_tensor @-> gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_embedding_renorm_out =
    foreign
      "atg_embedding_renorm_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs_embedding_sparse_backward =
    foreign
      "atg_embedding_sparse_backward"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_empty =
    foreign "atg_empty" (ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_empty_like = foreign "atg_empty_like" (gc_tensor @-> returning raw_tensor)

  let stubs_empty_like_out =
    foreign "atg_empty_like_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_empty_out =
    foreign "atg_empty_out" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_empty_permuted =
    foreign
      "atg_empty_permuted"
      (ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_empty_permuted_out =
    foreign
      "atg_empty_permuted_out"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_empty_quantized =
    foreign
      "atg_empty_quantized"
      (ptr int64_t @-> int @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_empty_quantized_out =
    foreign
      "atg_empty_quantized_out"
      (gc_tensor @-> ptr int64_t @-> int @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_empty_strided =
    foreign
      "atg_empty_strided"
      (ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_empty_strided_out =
    foreign
      "atg_empty_strided_out"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_eq = foreign "atg_eq" (gc_tensor @-> scalar @-> returning raw_tensor)
  let stubs_eq_ = foreign "atg_eq_" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_eq_scalar_out =
    foreign
      "atg_eq_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_eq_tensor =
    foreign "atg_eq_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_eq_tensor_ =
    foreign "atg_eq_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_eq_tensor_out =
    foreign
      "atg_eq_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_equal = foreign "atg_equal" (gc_tensor @-> gc_tensor @-> returning bool)
  let stubs_erf = foreign "atg_erf" (gc_tensor @-> returning raw_tensor)
  let stubs_erf_ = foreign "atg_erf_" (gc_tensor @-> returning raw_tensor)

  let stubs_erf_out =
    foreign "atg_erf_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_erfc = foreign "atg_erfc" (gc_tensor @-> returning raw_tensor)
  let stubs_erfc_ = foreign "atg_erfc_" (gc_tensor @-> returning raw_tensor)

  let stubs_erfc_out =
    foreign "atg_erfc_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_erfinv = foreign "atg_erfinv" (gc_tensor @-> returning raw_tensor)
  let stubs_erfinv_ = foreign "atg_erfinv_" (gc_tensor @-> returning raw_tensor)

  let stubs_erfinv_out =
    foreign "atg_erfinv_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_exp = foreign "atg_exp" (gc_tensor @-> returning raw_tensor)
  let stubs_exp2 = foreign "atg_exp2" (gc_tensor @-> returning raw_tensor)
  let stubs_exp2_ = foreign "atg_exp2_" (gc_tensor @-> returning raw_tensor)

  let stubs_exp2_out =
    foreign "atg_exp2_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_exp_ = foreign "atg_exp_" (gc_tensor @-> returning raw_tensor)

  let stubs_exp_out =
    foreign "atg_exp_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_expand =
    foreign
      "atg_expand"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_expand_as =
    foreign "atg_expand_as" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_expand_copy =
    foreign
      "atg_expand_copy"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_expand_copy_out =
    foreign
      "atg_expand_copy_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_expm1 = foreign "atg_expm1" (gc_tensor @-> returning raw_tensor)
  let stubs_expm1_ = foreign "atg_expm1_" (gc_tensor @-> returning raw_tensor)

  let stubs_expm1_out =
    foreign "atg_expm1_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_exponential =
    foreign "atg_exponential" (gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs_exponential_ =
    foreign "atg_exponential_" (gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs_exponential_out =
    foreign
      "atg_exponential_out"
      (gc_tensor @-> gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs_eye = foreign "atg_eye" (int64_t @-> int @-> int @-> returning raw_tensor)

  let stubs_eye_m =
    foreign "atg_eye_m" (int64_t @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_eye_m_out =
    foreign "atg_eye_m_out" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_eye_out =
    foreign "atg_eye_out" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_fake_quantize_per_channel_affine =
    foreign
      "atg_fake_quantize_per_channel_affine"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_fake_quantize_per_channel_affine_cachemask =
    foreign
      "atg_fake_quantize_per_channel_affine_cachemask"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_fake_quantize_per_channel_affine_cachemask_backward =
    foreign
      "atg_fake_quantize_per_channel_affine_cachemask_backward"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fake_quantize_per_channel_affine_cachemask_out =
    foreign
      "atg_fake_quantize_per_channel_affine_cachemask_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_fake_quantize_per_tensor_affine =
    foreign
      "atg_fake_quantize_per_tensor_affine"
      (gc_tensor @-> double @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_fake_quantize_per_tensor_affine_cachemask =
    foreign
      "atg_fake_quantize_per_tensor_affine_cachemask"
      (ptr raw_tensor
       @-> gc_tensor
       @-> double
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_fake_quantize_per_tensor_affine_cachemask_backward =
    foreign
      "atg_fake_quantize_per_tensor_affine_cachemask_backward"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fake_quantize_per_tensor_affine_cachemask_out =
    foreign
      "atg_fake_quantize_per_tensor_affine_cachemask_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_fake_quantize_per_tensor_affine_tensor_qparams =
    foreign
      "atg_fake_quantize_per_tensor_affine_tensor_qparams"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_fbgemm_linear_fp16_weight =
    foreign
      "atg_fbgemm_linear_fp16_weight"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fbgemm_linear_fp16_weight_fp32_activation =
    foreign
      "atg_fbgemm_linear_fp16_weight_fp32_activation"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fbgemm_linear_int8_weight =
    foreign
      "atg_fbgemm_linear_int8_weight"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_fbgemm_linear_int8_weight_fp32_activation =
    foreign
      "atg_fbgemm_linear_int8_weight_fp32_activation"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_fbgemm_pack_gemm_matrix_fp16 =
    foreign "atg_fbgemm_pack_gemm_matrix_fp16" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fbgemm_pack_quantized_matrix =
    foreign "atg_fbgemm_pack_quantized_matrix" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fbgemm_pack_quantized_matrix_kn =
    foreign
      "atg_fbgemm_pack_quantized_matrix_kn"
      (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_feature_alpha_dropout =
    foreign
      "atg_feature_alpha_dropout"
      (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_feature_alpha_dropout_ =
    foreign
      "atg_feature_alpha_dropout_"
      (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_feature_dropout =
    foreign "atg_feature_dropout" (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_feature_dropout_ =
    foreign "atg_feature_dropout_" (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_fft_fft =
    foreign
      "atg_fft_fft"
      (gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_fft2 =
    foreign
      "atg_fft_fft2"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_fft2_out =
    foreign
      "atg_fft_fft2_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_fft_out =
    foreign
      "atg_fft_fft_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_fftfreq =
    foreign "atg_fft_fftfreq" (int64_t @-> double @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_fft_fftfreq_out =
    foreign
      "atg_fft_fftfreq_out"
      (gc_tensor @-> int64_t @-> double @-> returning raw_tensor)
  ;;

  let stubs_fft_fftn =
    foreign
      "atg_fft_fftn"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_fftn_out =
    foreign
      "atg_fft_fftn_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_fftshift =
    foreign "atg_fft_fftshift" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_fft_hfft =
    foreign
      "atg_fft_hfft"
      (gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_hfft2 =
    foreign
      "atg_fft_hfft2"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_hfft2_out =
    foreign
      "atg_fft_hfft2_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_hfft_out =
    foreign
      "atg_fft_hfft_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_hfftn =
    foreign
      "atg_fft_hfftn"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_hfftn_out =
    foreign
      "atg_fft_hfftn_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_ifft =
    foreign
      "atg_fft_ifft"
      (gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_ifft2 =
    foreign
      "atg_fft_ifft2"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_ifft2_out =
    foreign
      "atg_fft_ifft2_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_ifft_out =
    foreign
      "atg_fft_ifft_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_ifftn =
    foreign
      "atg_fft_ifftn"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_ifftn_out =
    foreign
      "atg_fft_ifftn_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_ifftshift =
    foreign
      "atg_fft_ifftshift"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_fft_ihfft =
    foreign
      "atg_fft_ihfft"
      (gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_ihfft2 =
    foreign
      "atg_fft_ihfft2"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_ihfft2_out =
    foreign
      "atg_fft_ihfft2_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;
end

module C11 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_fft_ihfft_out =
    foreign
      "atg_fft_ihfft_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_ihfftn =
    foreign
      "atg_fft_ihfftn"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_ihfftn_out =
    foreign
      "atg_fft_ihfftn_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_irfft =
    foreign
      "atg_fft_irfft"
      (gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_irfft2 =
    foreign
      "atg_fft_irfft2"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_irfft2_out =
    foreign
      "atg_fft_irfft2_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_irfft_out =
    foreign
      "atg_fft_irfft_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_irfftn =
    foreign
      "atg_fft_irfftn"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_irfftn_out =
    foreign
      "atg_fft_irfftn_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_rfft =
    foreign
      "atg_fft_rfft"
      (gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_rfft2 =
    foreign
      "atg_fft_rfft2"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_rfft2_out =
    foreign
      "atg_fft_rfft2_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_rfft_out =
    foreign
      "atg_fft_rfft_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_rfftfreq =
    foreign
      "atg_fft_rfftfreq"
      (int64_t @-> double @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_fft_rfftfreq_out =
    foreign
      "atg_fft_rfftfreq_out"
      (gc_tensor @-> int64_t @-> double @-> returning raw_tensor)
  ;;

  let stubs_fft_rfftn =
    foreign
      "atg_fft_rfftn"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fft_rfftn_out =
    foreign
      "atg_fft_rfftn_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_fill = foreign "atg_fill" (gc_tensor @-> scalar @-> returning raw_tensor)
  let stubs_fill_ = foreign "atg_fill_" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_fill_diagonal_ =
    foreign "atg_fill_diagonal_" (gc_tensor @-> scalar @-> int @-> returning raw_tensor)
  ;;

  let stubs_fill_scalar_out =
    foreign
      "atg_fill_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_fill_tensor =
    foreign "atg_fill_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fill_tensor_ =
    foreign "atg_fill_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fill_tensor_out =
    foreign
      "atg_fill_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fix = foreign "atg_fix" (gc_tensor @-> returning raw_tensor)
  let stubs_fix_ = foreign "atg_fix_" (gc_tensor @-> returning raw_tensor)

  let stubs_fix_out =
    foreign "atg_fix_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_flatten =
    foreign "atg_flatten" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_flatten_dense_tensors =
    foreign "atg_flatten_dense_tensors" (ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_flip =
    foreign "atg_flip" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_flip_out =
    foreign
      "atg_flip_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_fliplr = foreign "atg_fliplr" (gc_tensor @-> returning raw_tensor)
  let stubs_flipud = foreign "atg_flipud" (gc_tensor @-> returning raw_tensor)

  let stubs_float_power =
    foreign "atg_float_power" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_float_power_ =
    foreign "atg_float_power_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_float_power_scalar =
    foreign "atg_float_power_scalar" (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_float_power_scalar_out =
    foreign
      "atg_float_power_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_float_power_tensor_ =
    foreign "atg_float_power_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_float_power_tensor_scalar =
    foreign "atg_float_power_tensor_scalar" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_float_power_tensor_scalar_out =
    foreign
      "atg_float_power_tensor_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_float_power_tensor_tensor_out =
    foreign
      "atg_float_power_tensor_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_floor = foreign "atg_floor" (gc_tensor @-> returning raw_tensor)
  let stubs_floor_ = foreign "atg_floor_" (gc_tensor @-> returning raw_tensor)

  let stubs_floor_divide =
    foreign "atg_floor_divide" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_floor_divide_ =
    foreign "atg_floor_divide_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_floor_divide_out =
    foreign
      "atg_floor_divide_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_floor_divide_scalar =
    foreign "atg_floor_divide_scalar" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_floor_divide_scalar_ =
    foreign "atg_floor_divide_scalar_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_floor_divide_scalar_out =
    foreign
      "atg_floor_divide_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_floor_out =
    foreign "atg_floor_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fmax = foreign "atg_fmax" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_fmax_out =
    foreign "atg_fmax_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fmin = foreign "atg_fmin" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_fmin_out =
    foreign "atg_fmin_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fmod = foreign "atg_fmod" (gc_tensor @-> scalar @-> returning raw_tensor)
  let stubs_fmod_ = foreign "atg_fmod_" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_fmod_scalar_out =
    foreign
      "atg_fmod_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_fmod_tensor =
    foreign "atg_fmod_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fmod_tensor_ =
    foreign "atg_fmod_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fmod_tensor_out =
    foreign
      "atg_fmod_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_frac = foreign "atg_frac" (gc_tensor @-> returning raw_tensor)
  let stubs_frac_ = foreign "atg_frac_" (gc_tensor @-> returning raw_tensor)

  let stubs_frac_out =
    foreign "atg_frac_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_fractional_max_pool2d =
    foreign
      "atg_fractional_max_pool2d"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_fractional_max_pool2d_backward =
    foreign
      "atg_fractional_max_pool2d_backward"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_fractional_max_pool2d_backward_grad_input =
    foreign
      "atg_fractional_max_pool2d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_fractional_max_pool2d_output =
    foreign
      "atg_fractional_max_pool2d_output"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_fractional_max_pool3d =
    foreign
      "atg_fractional_max_pool3d"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_fractional_max_pool3d_backward =
    foreign
      "atg_fractional_max_pool3d_backward"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_fractional_max_pool3d_backward_grad_input =
    foreign
      "atg_fractional_max_pool3d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_fractional_max_pool3d_output =
    foreign
      "atg_fractional_max_pool3d_output"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_frexp = foreign "atg_frexp" (ptr raw_tensor @-> gc_tensor @-> returning void)

  let stubs_frexp_tensor_out =
    foreign
      "atg_frexp_tensor_out"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs_frobenius_norm =
    foreign
      "atg_frobenius_norm"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_frobenius_norm_out =
    foreign
      "atg_frobenius_norm_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_from_file =
    foreign
      "atg_from_file"
      (string @-> int @-> int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_from_file_out =
    foreign
      "atg_from_file_out"
      (gc_tensor @-> string @-> int @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_full =
    foreign
      "atg_full"
      (ptr int64_t @-> int @-> scalar @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_full_like =
    foreign "atg_full_like" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_full_like_out =
    foreign
      "atg_full_like_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_full_out =
    foreign
      "atg_full_out"
      (gc_tensor @-> ptr int64_t @-> int @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_fused_moving_avg_obs_fake_quant =
    foreign
      "atg_fused_moving_avg_obs_fake_quant"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_gather =
    foreign
      "atg_gather"
      (gc_tensor @-> int64_t @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_gather_backward =
    foreign
      "atg_gather_backward"
      (gc_tensor @-> gc_tensor @-> int64_t @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_gather_out =
    foreign
      "atg_gather_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_gcd = foreign "atg_gcd" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  let stubs_gcd_ = foreign "atg_gcd_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_gcd_out =
    foreign "atg_gcd_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_ge = foreign "atg_ge" (gc_tensor @-> scalar @-> returning raw_tensor)
  let stubs_ge_ = foreign "atg_ge_" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_ge_scalar_out =
    foreign
      "atg_ge_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_ge_tensor =
    foreign "atg_ge_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_ge_tensor_ =
    foreign "atg_ge_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_ge_tensor_out =
    foreign
      "atg_ge_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_gelu = foreign "atg_gelu" (gc_tensor @-> string @-> returning raw_tensor)
  let stubs_gelu_ = foreign "atg_gelu_" (gc_tensor @-> string @-> returning raw_tensor)

  let stubs_gelu_backward =
    foreign
      "atg_gelu_backward"
      (gc_tensor @-> gc_tensor @-> string @-> returning raw_tensor)
  ;;

  let stubs_gelu_backward_grad_input =
    foreign
      "atg_gelu_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> string @-> returning raw_tensor)
  ;;

  let stubs_gelu_out =
    foreign "atg_gelu_out" (gc_tensor @-> gc_tensor @-> string @-> returning raw_tensor)
  ;;

  let stubs_geometric =
    foreign "atg_geometric" (gc_tensor @-> double @-> returning raw_tensor)
  ;;
end

module C12 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_geometric_ =
    foreign "atg_geometric_" (gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs_geometric_out =
    foreign
      "atg_geometric_out"
      (gc_tensor @-> gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs_geqrf = foreign "atg_geqrf" (ptr raw_tensor @-> gc_tensor @-> returning void)

  let stubs_geqrf_a =
    foreign
      "atg_geqrf_a"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs_ger = foreign "atg_ger" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_ger_out =
    foreign "atg_ger_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_glu = foreign "atg_glu" (gc_tensor @-> int64_t @-> returning raw_tensor)

  let stubs_glu_backward =
    foreign
      "atg_glu_backward"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_glu_backward_grad_input =
    foreign
      "atg_glu_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_glu_backward_jvp =
    foreign
      "atg_glu_backward_jvp"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_glu_backward_jvp_out =
    foreign
      "atg_glu_backward_jvp_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_glu_jvp =
    foreign
      "atg_glu_jvp"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_glu_jvp_out =
    foreign
      "atg_glu_jvp_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_glu_out =
    foreign "atg_glu_out" (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_grad = foreign "atg_grad" (gc_tensor @-> returning raw_tensor)
  let stubs_greater = foreign "atg_greater" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_greater_ =
    foreign "atg_greater_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_greater_equal =
    foreign "atg_greater_equal" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_greater_equal_ =
    foreign "atg_greater_equal_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_greater_equal_scalar_out =
    foreign
      "atg_greater_equal_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_greater_equal_tensor =
    foreign "atg_greater_equal_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_greater_equal_tensor_ =
    foreign "atg_greater_equal_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_greater_equal_tensor_out =
    foreign
      "atg_greater_equal_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_greater_scalar_out =
    foreign
      "atg_greater_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_greater_tensor =
    foreign "atg_greater_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_greater_tensor_ =
    foreign "atg_greater_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_greater_tensor_out =
    foreign
      "atg_greater_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_grid_sampler =
    foreign
      "atg_grid_sampler"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_grid_sampler_2d =
    foreign
      "atg_grid_sampler_2d"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_grid_sampler_2d_out =
    foreign
      "atg_grid_sampler_2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_grid_sampler_3d =
    foreign
      "atg_grid_sampler_3d"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_grid_sampler_3d_out =
    foreign
      "atg_grid_sampler_3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_group_norm =
    foreign
      "atg_group_norm"
      (gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_gru =
    foreign
      "atg_gru"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_gru_cell =
    foreign
      "atg_gru_cell"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_gru_data =
    foreign
      "atg_gru_data"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_gt = foreign "atg_gt" (gc_tensor @-> scalar @-> returning raw_tensor)
  let stubs_gt_ = foreign "atg_gt_" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_gt_scalar_out =
    foreign
      "atg_gt_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_gt_tensor =
    foreign "atg_gt_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_gt_tensor_ =
    foreign "atg_gt_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_gt_tensor_out =
    foreign
      "atg_gt_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_hamming_window =
    foreign "atg_hamming_window" (int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_hamming_window_out =
    foreign "atg_hamming_window_out" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_hamming_window_periodic =
    foreign
      "atg_hamming_window_periodic"
      (int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_hamming_window_periodic_alpha =
    foreign
      "atg_hamming_window_periodic_alpha"
      (int64_t @-> int @-> double @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_hamming_window_periodic_alpha_beta =
    foreign
      "atg_hamming_window_periodic_alpha_beta"
      (int64_t @-> int @-> double @-> double @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_hamming_window_periodic_alpha_beta_out =
    foreign
      "atg_hamming_window_periodic_alpha_beta_out"
      (gc_tensor @-> int64_t @-> int @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_hamming_window_periodic_alpha_out =
    foreign
      "atg_hamming_window_periodic_alpha_out"
      (gc_tensor @-> int64_t @-> int @-> double @-> returning raw_tensor)
  ;;

  let stubs_hamming_window_periodic_out =
    foreign
      "atg_hamming_window_periodic_out"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_hann_window =
    foreign "atg_hann_window" (int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_hann_window_out =
    foreign "atg_hann_window_out" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_hann_window_periodic =
    foreign
      "atg_hann_window_periodic"
      (int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_hann_window_periodic_out =
    foreign
      "atg_hann_window_periodic_out"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_hardshrink =
    foreign "atg_hardshrink" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_hardshrink_backward =
    foreign
      "atg_hardshrink_backward"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_hardshrink_backward_grad_input =
    foreign
      "atg_hardshrink_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_hardshrink_out =
    foreign
      "atg_hardshrink_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_hardsigmoid = foreign "atg_hardsigmoid" (gc_tensor @-> returning raw_tensor)
  let stubs_hardsigmoid_ = foreign "atg_hardsigmoid_" (gc_tensor @-> returning raw_tensor)

  let stubs_hardsigmoid_backward =
    foreign "atg_hardsigmoid_backward" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_hardsigmoid_backward_grad_input =
    foreign
      "atg_hardsigmoid_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_hardsigmoid_out =
    foreign "atg_hardsigmoid_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_hardswish = foreign "atg_hardswish" (gc_tensor @-> returning raw_tensor)
  let stubs_hardswish_ = foreign "atg_hardswish_" (gc_tensor @-> returning raw_tensor)

  let stubs_hardswish_backward =
    foreign "atg_hardswish_backward" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_hardswish_backward_out =
    foreign
      "atg_hardswish_backward_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_hardswish_out =
    foreign "atg_hardswish_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_hardtanh =
    foreign "atg_hardtanh" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_hardtanh_ =
    foreign "atg_hardtanh_" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_hardtanh_backward =
    foreign
      "atg_hardtanh_backward"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_hardtanh_backward_grad_input =
    foreign
      "atg_hardtanh_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_hardtanh_out =
    foreign
      "atg_hardtanh_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_heaviside =
    foreign "atg_heaviside" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_heaviside_ =
    foreign "atg_heaviside_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_heaviside_out =
    foreign
      "atg_heaviside_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_hinge_embedding_loss =
    foreign
      "atg_hinge_embedding_loss"
      (gc_tensor @-> gc_tensor @-> double @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_histc =
    foreign
      "atg_histc"
      (gc_tensor @-> int64_t @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_histc_out =
    foreign
      "atg_histc_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_hsplit =
    foreign "atg_hsplit" (gc_tensor @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_hsplit_array =
    foreign
      "atg_hsplit_array"
      (gc_tensor @-> ptr int64_t @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs_hspmm = foreign "atg_hspmm" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_hspmm_out =
    foreign
      "atg_hspmm_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_hstack = foreign "atg_hstack" (ptr gc_tensor @-> int @-> returning raw_tensor)

  let stubs_hstack_out =
    foreign "atg_hstack_out" (gc_tensor @-> ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_huber_loss =
    foreign
      "atg_huber_loss"
      (gc_tensor @-> gc_tensor @-> int64_t @-> double @-> returning raw_tensor)
  ;;

  let stubs_huber_loss_backward =
    foreign
      "atg_huber_loss_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs_huber_loss_backward_out =
    foreign
      "atg_huber_loss_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs_huber_loss_out =
    foreign
      "atg_huber_loss_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs_hypot = foreign "atg_hypot" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_hypot_ =
    foreign "atg_hypot_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_hypot_out =
    foreign
      "atg_hypot_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_i0 = foreign "atg_i0" (gc_tensor @-> returning raw_tensor)
  let stubs_i0_ = foreign "atg_i0_" (gc_tensor @-> returning raw_tensor)

  let stubs_i0_out =
    foreign "atg_i0_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_igamma =
    foreign "atg_igamma" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_igamma_ =
    foreign "atg_igamma_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_igamma_out =
    foreign
      "atg_igamma_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_igammac =
    foreign "atg_igammac" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_igammac_ =
    foreign "atg_igammac_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;
end

module C13 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_igammac_out =
    foreign
      "atg_igammac_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_im2col =
    foreign
      "atg_im2col"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_im2col_out =
    foreign
      "atg_im2col_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_imag = foreign "atg_imag" (gc_tensor @-> returning raw_tensor)

  let stubs_index_add =
    foreign
      "atg_index_add"
      (gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_index_add_ =
    foreign
      "atg_index_add_"
      (gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_index_add_out =
    foreign
      "atg_index_add_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_index_copy =
    foreign
      "atg_index_copy"
      (gc_tensor @-> int64_t @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_index_copy_ =
    foreign
      "atg_index_copy_"
      (gc_tensor @-> int64_t @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_index_copy_out =
    foreign
      "atg_index_copy_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_index_fill =
    foreign
      "atg_index_fill"
      (gc_tensor @-> int64_t @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_index_fill_ =
    foreign
      "atg_index_fill_"
      (gc_tensor @-> int64_t @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_index_fill_int_scalar_out =
    foreign
      "atg_index_fill_int_scalar_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_index_fill_int_tensor =
    foreign
      "atg_index_fill_int_tensor"
      (gc_tensor @-> int64_t @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_index_fill_int_tensor_ =
    foreign
      "atg_index_fill_int_tensor_"
      (gc_tensor @-> int64_t @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_index_fill_int_tensor_out =
    foreign
      "atg_index_fill_int_tensor_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_index_reduce =
    foreign
      "atg_index_reduce"
      (gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_index_reduce_ =
    foreign
      "atg_index_reduce_"
      (gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_index_reduce_out =
    foreign
      "atg_index_reduce_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_index_select =
    foreign
      "atg_index_select"
      (gc_tensor @-> int64_t @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_index_select_backward =
    foreign
      "atg_index_select_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_index_select_out =
    foreign
      "atg_index_select_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_indices = foreign "atg_indices" (gc_tensor @-> returning raw_tensor)
  let stubs_indices_copy = foreign "atg_indices_copy" (gc_tensor @-> returning raw_tensor)

  let stubs_indices_copy_out =
    foreign "atg_indices_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_infinitely_differentiable_gelu_backward =
    foreign
      "atg_infinitely_differentiable_gelu_backward"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_inner = foreign "atg_inner" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_inner_out =
    foreign
      "atg_inner_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_instance_norm =
    foreign
      "atg_instance_norm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_int_repr = foreign "atg_int_repr" (gc_tensor @-> returning raw_tensor)

  let stubs_int_repr_out =
    foreign "atg_int_repr_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_inverse = foreign "atg_inverse" (gc_tensor @-> returning raw_tensor)

  let stubs_inverse_out =
    foreign "atg_inverse_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_is_coalesced = foreign "atg_is_coalesced" (gc_tensor @-> returning bool)
  let stubs_is_complex = foreign "atg_is_complex" (gc_tensor @-> returning bool)
  let stubs_is_conj = foreign "atg_is_conj" (gc_tensor @-> returning bool)
  let stubs_is_distributed = foreign "atg_is_distributed" (gc_tensor @-> returning bool)

  let stubs_is_floating_point =
    foreign "atg_is_floating_point" (gc_tensor @-> returning bool)
  ;;

  let stubs_is_inference = foreign "atg_is_inference" (gc_tensor @-> returning bool)
  let stubs_is_leaf = foreign "atg_is_leaf" (gc_tensor @-> returning bool)
  let stubs_is_neg = foreign "atg_is_neg" (gc_tensor @-> returning bool)
  let stubs_is_nonzero = foreign "atg_is_nonzero" (gc_tensor @-> returning bool)
  let stubs_is_pinned = foreign "atg_is_pinned" (gc_tensor @-> int @-> returning bool)

  let stubs_is_same_size =
    foreign "atg_is_same_size" (gc_tensor @-> gc_tensor @-> returning bool)
  ;;

  let stubs_is_set_to =
    foreign "atg_is_set_to" (gc_tensor @-> gc_tensor @-> returning bool)
  ;;

  let stubs_is_signed = foreign "atg_is_signed" (gc_tensor @-> returning bool)

  let stubs_is_vulkan_available =
    foreign "atg_is_vulkan_available" (void @-> returning bool)
  ;;

  let stubs_isclose =
    foreign
      "atg_isclose"
      (gc_tensor @-> gc_tensor @-> double @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_isfinite = foreign "atg_isfinite" (gc_tensor @-> returning raw_tensor)

  let stubs_isin =
    foreign "atg_isin" (gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_isin_scalar_tensor =
    foreign
      "atg_isin_scalar_tensor"
      (scalar @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_isin_scalar_tensor_out =
    foreign
      "atg_isin_scalar_tensor_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_isin_tensor_scalar =
    foreign
      "atg_isin_tensor_scalar"
      (gc_tensor @-> scalar @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_isin_tensor_scalar_out =
    foreign
      "atg_isin_tensor_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_isin_tensor_tensor_out =
    foreign
      "atg_isin_tensor_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_isinf = foreign "atg_isinf" (gc_tensor @-> returning raw_tensor)

  let stubs_isinf_out =
    foreign "atg_isinf_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_isnan = foreign "atg_isnan" (gc_tensor @-> returning raw_tensor)

  let stubs_isnan_out =
    foreign "atg_isnan_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_isneginf = foreign "atg_isneginf" (gc_tensor @-> returning raw_tensor)

  let stubs_isneginf_out =
    foreign "atg_isneginf_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_isposinf = foreign "atg_isposinf" (gc_tensor @-> returning raw_tensor)

  let stubs_isposinf_out =
    foreign "atg_isposinf_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_isreal = foreign "atg_isreal" (gc_tensor @-> returning raw_tensor)

  let stubs_istft =
    foreign
      "atg_istft"
      (gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> int
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_kaiser_window =
    foreign "atg_kaiser_window" (int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_kaiser_window_beta =
    foreign
      "atg_kaiser_window_beta"
      (int64_t @-> int @-> double @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_kaiser_window_beta_out =
    foreign
      "atg_kaiser_window_beta_out"
      (gc_tensor @-> int64_t @-> int @-> double @-> returning raw_tensor)
  ;;

  let stubs_kaiser_window_out =
    foreign "atg_kaiser_window_out" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_kaiser_window_periodic =
    foreign
      "atg_kaiser_window_periodic"
      (int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_kaiser_window_periodic_out =
    foreign
      "atg_kaiser_window_periodic_out"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_kl_div =
    foreign
      "atg_kl_div"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_kron = foreign "atg_kron" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_kron_out =
    foreign "atg_kron_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_kthvalue =
    foreign
      "atg_kthvalue"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> int @-> returning void)
  ;;

  let stubs_kthvalue_values =
    foreign
      "atg_kthvalue_values"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_l1_loss =
    foreign "atg_l1_loss" (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_layer_norm =
    foreign
      "atg_layer_norm"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_lcm = foreign "atg_lcm" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  let stubs_lcm_ = foreign "atg_lcm_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_lcm_out =
    foreign "atg_lcm_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_ldexp = foreign "atg_ldexp" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_ldexp_ =
    foreign "atg_ldexp_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_ldexp_out =
    foreign
      "atg_ldexp_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_le = foreign "atg_le" (gc_tensor @-> scalar @-> returning raw_tensor)
  let stubs_le_ = foreign "atg_le_" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_le_scalar_out =
    foreign
      "atg_le_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_le_tensor =
    foreign "atg_le_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_le_tensor_ =
    foreign "atg_le_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_le_tensor_out =
    foreign
      "atg_le_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_leaky_relu =
    foreign "atg_leaky_relu" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_leaky_relu_ =
    foreign "atg_leaky_relu_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_leaky_relu_backward =
    foreign
      "atg_leaky_relu_backward"
      (gc_tensor @-> gc_tensor @-> scalar @-> int @-> returning raw_tensor)
  ;;

  let stubs_leaky_relu_backward_grad_input =
    foreign
      "atg_leaky_relu_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> int @-> returning raw_tensor)
  ;;

  let stubs_leaky_relu_out =
    foreign
      "atg_leaky_relu_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_lerp =
    foreign "atg_lerp" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_lerp_ =
    foreign "atg_lerp_" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_lerp_scalar_out =
    foreign
      "atg_lerp_scalar_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_lerp_tensor =
    foreign
      "atg_lerp_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_lerp_tensor_ =
    foreign
      "atg_lerp_tensor_"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;
end

module C14 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_lerp_tensor_out =
    foreign
      "atg_lerp_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_less = foreign "atg_less" (gc_tensor @-> scalar @-> returning raw_tensor)
  let stubs_less_ = foreign "atg_less_" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_less_equal =
    foreign "atg_less_equal" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_less_equal_ =
    foreign "atg_less_equal_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_less_equal_scalar_out =
    foreign
      "atg_less_equal_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_less_equal_tensor =
    foreign "atg_less_equal_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_less_equal_tensor_ =
    foreign "atg_less_equal_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_less_equal_tensor_out =
    foreign
      "atg_less_equal_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_less_scalar_out =
    foreign
      "atg_less_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_less_tensor =
    foreign "atg_less_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_less_tensor_ =
    foreign "atg_less_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_less_tensor_out =
    foreign
      "atg_less_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_lgamma = foreign "atg_lgamma" (gc_tensor @-> returning raw_tensor)
  let stubs_lgamma_ = foreign "atg_lgamma_" (gc_tensor @-> returning raw_tensor)

  let stubs_lgamma_out =
    foreign "atg_lgamma_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_lift = foreign "atg_lift" (gc_tensor @-> returning raw_tensor)
  let stubs_lift_fresh = foreign "atg_lift_fresh" (gc_tensor @-> returning raw_tensor)

  let stubs_lift_fresh_copy =
    foreign "atg_lift_fresh_copy" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_lift_fresh_copy_out =
    foreign "atg_lift_fresh_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_lift_out =
    foreign "atg_lift_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linalg_cholesky =
    foreign "atg_linalg_cholesky" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_cholesky_ex =
    foreign
      "atg_linalg_cholesky_ex"
      (ptr raw_tensor @-> gc_tensor @-> int @-> int @-> returning void)
  ;;

  let stubs_linalg_cholesky_ex_l =
    foreign
      "atg_linalg_cholesky_ex_l"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_linalg_cholesky_out =
    foreign
      "atg_linalg_cholesky_out"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_cond =
    foreign "atg_linalg_cond" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_linalg_cond_out =
    foreign
      "atg_linalg_cond_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_linalg_cond_p_str =
    foreign "atg_linalg_cond_p_str" (gc_tensor @-> string @-> returning raw_tensor)
  ;;

  let stubs_linalg_cond_p_str_out =
    foreign
      "atg_linalg_cond_p_str_out"
      (gc_tensor @-> gc_tensor @-> string @-> returning raw_tensor)
  ;;

  let stubs_linalg_cross =
    foreign
      "atg_linalg_cross"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linalg_cross_out =
    foreign
      "atg_linalg_cross_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linalg_det = foreign "atg_linalg_det" (gc_tensor @-> returning raw_tensor)

  let stubs_linalg_det_out =
    foreign "atg_linalg_det_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linalg_diagonal =
    foreign
      "atg_linalg_diagonal"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linalg_eig =
    foreign "atg_linalg_eig" (ptr raw_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs_linalg_eig_out =
    foreign
      "atg_linalg_eig_out"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs_linalg_eigh =
    foreign "atg_linalg_eigh" (ptr raw_tensor @-> gc_tensor @-> string @-> returning void)
  ;;

  let stubs_linalg_eigh_eigvals =
    foreign
      "atg_linalg_eigh_eigvals"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> returning void)
  ;;

  let stubs_linalg_eigvals =
    foreign "atg_linalg_eigvals" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linalg_eigvals_out =
    foreign "atg_linalg_eigvals_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linalg_eigvalsh =
    foreign "atg_linalg_eigvalsh" (gc_tensor @-> string @-> returning raw_tensor)
  ;;

  let stubs_linalg_eigvalsh_out =
    foreign
      "atg_linalg_eigvalsh_out"
      (gc_tensor @-> gc_tensor @-> string @-> returning raw_tensor)
  ;;

  let stubs_linalg_householder_product =
    foreign
      "atg_linalg_householder_product"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linalg_householder_product_out =
    foreign
      "atg_linalg_householder_product_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linalg_inv = foreign "atg_linalg_inv" (gc_tensor @-> returning raw_tensor)

  let stubs_linalg_inv_ex =
    foreign "atg_linalg_inv_ex" (ptr raw_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs_linalg_inv_ex_inverse =
    foreign
      "atg_linalg_inv_ex_inverse"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs_linalg_inv_out =
    foreign "atg_linalg_inv_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linalg_ldl_factor =
    foreign
      "atg_linalg_ldl_factor"
      (ptr raw_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs_linalg_ldl_factor_ex =
    foreign
      "atg_linalg_ldl_factor_ex"
      (ptr raw_tensor @-> gc_tensor @-> int @-> int @-> returning void)
  ;;

  let stubs_linalg_ldl_factor_ex_out =
    foreign
      "atg_linalg_ldl_factor_ex_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_linalg_ldl_factor_out =
    foreign
      "atg_linalg_ldl_factor_out"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs_linalg_ldl_solve =
    foreign
      "atg_linalg_ldl_solve"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_ldl_solve_out =
    foreign
      "atg_linalg_ldl_solve_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_linalg_lstsq =
    foreign
      "atg_linalg_lstsq"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> string
       @-> int
       @-> returning void)
  ;;

  let stubs_linalg_lstsq_out =
    foreign
      "atg_linalg_lstsq_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> string
       @-> int
       @-> returning void)
  ;;

  let stubs_linalg_lu =
    foreign "atg_linalg_lu" (ptr raw_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs_linalg_lu_factor =
    foreign
      "atg_linalg_lu_factor"
      (ptr raw_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs_linalg_lu_factor_ex =
    foreign
      "atg_linalg_lu_factor_ex"
      (ptr raw_tensor @-> gc_tensor @-> int @-> int @-> returning void)
  ;;

  let stubs_linalg_lu_factor_ex_out =
    foreign
      "atg_linalg_lu_factor_ex_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_linalg_lu_factor_out =
    foreign
      "atg_linalg_lu_factor_out"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs_linalg_lu_out =
    foreign
      "atg_linalg_lu_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning void)
  ;;

  let stubs_linalg_lu_solve =
    foreign
      "atg_linalg_lu_solve"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_lu_solve_out =
    foreign
      "atg_linalg_lu_solve_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_linalg_matmul =
    foreign "atg_linalg_matmul" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linalg_matmul_out =
    foreign
      "atg_linalg_matmul_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_exp =
    foreign "atg_linalg_matrix_exp" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_exp_out =
    foreign "atg_linalg_matrix_exp_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_power =
    foreign "atg_linalg_matrix_power" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_power_out =
    foreign
      "atg_linalg_matrix_power_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_rank =
    foreign
      "atg_linalg_matrix_rank"
      (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_rank_atol_rtol_float =
    foreign
      "atg_linalg_matrix_rank_atol_rtol_float"
      (gc_tensor @-> double @-> int @-> double @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_rank_atol_rtol_float_out =
    foreign
      "atg_linalg_matrix_rank_atol_rtol_float_out"
      (gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> double
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_rank_atol_rtol_tensor =
    foreign
      "atg_linalg_matrix_rank_atol_rtol_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_rank_atol_rtol_tensor_out =
    foreign
      "atg_linalg_matrix_rank_atol_rtol_tensor_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_rank_out =
    foreign
      "atg_linalg_matrix_rank_out"
      (gc_tensor @-> gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_rank_out_tol_tensor =
    foreign
      "atg_linalg_matrix_rank_out_tol_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_matrix_rank_tol_tensor =
    foreign
      "atg_linalg_matrix_rank_tol_tensor"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_multi_dot =
    foreign "atg_linalg_multi_dot" (ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_multi_dot_out =
    foreign
      "atg_linalg_multi_dot_out"
      (gc_tensor @-> ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_pinv =
    foreign "atg_linalg_pinv" (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_pinv_atol_rtol_float =
    foreign
      "atg_linalg_pinv_atol_rtol_float"
      (gc_tensor @-> double @-> int @-> double @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_pinv_atol_rtol_float_out =
    foreign
      "atg_linalg_pinv_atol_rtol_float_out"
      (gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> double
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_linalg_pinv_atol_rtol_tensor =
    foreign
      "atg_linalg_pinv_atol_rtol_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_pinv_atol_rtol_tensor_out =
    foreign
      "atg_linalg_pinv_atol_rtol_tensor_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_linalg_pinv_out =
    foreign
      "atg_linalg_pinv_out"
      (gc_tensor @-> gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_pinv_out_rcond_tensor =
    foreign
      "atg_linalg_pinv_out_rcond_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_pinv_rcond_tensor =
    foreign
      "atg_linalg_pinv_rcond_tensor"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_qr =
    foreign "atg_linalg_qr" (ptr raw_tensor @-> gc_tensor @-> string @-> returning void)
  ;;

  let stubs_linalg_qr_out =
    foreign
      "atg_linalg_qr_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> returning void)
  ;;

  let stubs_linalg_slogdet =
    foreign "atg_linalg_slogdet" (ptr raw_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs_linalg_slogdet_out =
    foreign
      "atg_linalg_slogdet_out"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs_linalg_solve =
    foreign "atg_linalg_solve" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_solve_ex =
    foreign
      "atg_linalg_solve_ex"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning void)
  ;;

  let stubs_linalg_solve_ex_out =
    foreign
      "atg_linalg_solve_ex_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_linalg_solve_out =
    foreign
      "atg_linalg_solve_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_solve_triangular =
    foreign
      "atg_linalg_solve_triangular"
      (gc_tensor @-> gc_tensor @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_solve_triangular_out =
    foreign
      "atg_linalg_solve_triangular_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_linalg_svd =
    foreign
      "atg_linalg_svd"
      (ptr raw_tensor @-> gc_tensor @-> int @-> string @-> int @-> returning void)
  ;;

  let stubs_linalg_svd_u =
    foreign
      "atg_linalg_svd_u"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> string
       @-> int
       @-> returning void)
  ;;
end

module C15 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_linalg_svdvals =
    foreign "atg_linalg_svdvals" (gc_tensor @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_svdvals_out =
    foreign
      "atg_linalg_svdvals_out"
      (gc_tensor @-> gc_tensor @-> string @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_tensorinv =
    foreign "atg_linalg_tensorinv" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linalg_tensorinv_out =
    foreign
      "atg_linalg_tensorinv_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linalg_tensorsolve =
    foreign
      "atg_linalg_tensorsolve"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_tensorsolve_out =
    foreign
      "atg_linalg_tensorsolve_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_linalg_vander =
    foreign "atg_linalg_vander" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_linalg_vecdot =
    foreign
      "atg_linalg_vecdot"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linalg_vecdot_out =
    foreign
      "atg_linalg_vecdot_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linear =
    foreign "atg_linear" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linear_out =
    foreign
      "atg_linear_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_linspace =
    foreign
      "atg_linspace"
      (scalar @-> scalar @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_linspace_out =
    foreign
      "atg_linspace_out"
      (gc_tensor @-> scalar @-> scalar @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linspace_scalar_tensor =
    foreign
      "atg_linspace_scalar_tensor"
      (scalar @-> gc_tensor @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_linspace_scalar_tensor_out =
    foreign
      "atg_linspace_scalar_tensor_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linspace_tensor_scalar =
    foreign
      "atg_linspace_tensor_scalar"
      (gc_tensor @-> scalar @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_linspace_tensor_scalar_out =
    foreign
      "atg_linspace_tensor_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_linspace_tensor_tensor =
    foreign
      "atg_linspace_tensor_tensor"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_linspace_tensor_tensor_out =
    foreign
      "atg_linspace_tensor_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_log = foreign "atg_log" (gc_tensor @-> returning raw_tensor)
  let stubs_log10 = foreign "atg_log10" (gc_tensor @-> returning raw_tensor)
  let stubs_log10_ = foreign "atg_log10_" (gc_tensor @-> returning raw_tensor)

  let stubs_log10_out =
    foreign "atg_log10_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_log1p = foreign "atg_log1p" (gc_tensor @-> returning raw_tensor)
  let stubs_log1p_ = foreign "atg_log1p_" (gc_tensor @-> returning raw_tensor)

  let stubs_log1p_out =
    foreign "atg_log1p_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_log2 = foreign "atg_log2" (gc_tensor @-> returning raw_tensor)
  let stubs_log2_ = foreign "atg_log2_" (gc_tensor @-> returning raw_tensor)

  let stubs_log2_out =
    foreign "atg_log2_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_log_ = foreign "atg_log_" (gc_tensor @-> returning raw_tensor)

  let stubs_log_normal =
    foreign "atg_log_normal" (gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_log_normal_ =
    foreign "atg_log_normal_" (gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_log_normal_out =
    foreign
      "atg_log_normal_out"
      (gc_tensor @-> gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_log_out =
    foreign "atg_log_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_log_sigmoid = foreign "atg_log_sigmoid" (gc_tensor @-> returning raw_tensor)

  let stubs_log_sigmoid_backward =
    foreign
      "atg_log_sigmoid_backward"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_log_sigmoid_backward_grad_input =
    foreign
      "atg_log_sigmoid_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_log_sigmoid_out =
    foreign "atg_log_sigmoid_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_log_softmax =
    foreign "atg_log_softmax" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_log_softmax_int_out =
    foreign
      "atg_log_softmax_int_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_logaddexp =
    foreign "atg_logaddexp" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logaddexp2 =
    foreign "atg_logaddexp2" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logaddexp2_out =
    foreign
      "atg_logaddexp2_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logaddexp_out =
    foreign
      "atg_logaddexp_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logcumsumexp =
    foreign "atg_logcumsumexp" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_logcumsumexp_out =
    foreign
      "atg_logcumsumexp_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_logdet = foreign "atg_logdet" (gc_tensor @-> returning raw_tensor)

  let stubs_logical_and =
    foreign "atg_logical_and" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logical_and_ =
    foreign "atg_logical_and_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logical_and_out =
    foreign
      "atg_logical_and_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logical_not = foreign "atg_logical_not" (gc_tensor @-> returning raw_tensor)
  let stubs_logical_not_ = foreign "atg_logical_not_" (gc_tensor @-> returning raw_tensor)

  let stubs_logical_not_out =
    foreign "atg_logical_not_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logical_or =
    foreign "atg_logical_or" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logical_or_ =
    foreign "atg_logical_or_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logical_or_out =
    foreign
      "atg_logical_or_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logical_xor =
    foreign "atg_logical_xor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logical_xor_ =
    foreign "atg_logical_xor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logical_xor_out =
    foreign
      "atg_logical_xor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_logit =
    foreign "atg_logit" (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_logit_ =
    foreign "atg_logit_" (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_logit_backward =
    foreign
      "atg_logit_backward"
      (gc_tensor @-> gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_logit_backward_grad_input =
    foreign
      "atg_logit_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_logit_out =
    foreign
      "atg_logit_out"
      (gc_tensor @-> gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_logspace =
    foreign
      "atg_logspace"
      (scalar @-> scalar @-> int64_t @-> double @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_logspace_out =
    foreign
      "atg_logspace_out"
      (gc_tensor @-> scalar @-> scalar @-> int64_t @-> double @-> returning raw_tensor)
  ;;

  let stubs_logspace_scalar_tensor =
    foreign
      "atg_logspace_scalar_tensor"
      (scalar
       @-> gc_tensor
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_logspace_scalar_tensor_out =
    foreign
      "atg_logspace_scalar_tensor_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> int64_t @-> double @-> returning raw_tensor)
  ;;

  let stubs_logspace_tensor_scalar =
    foreign
      "atg_logspace_tensor_scalar"
      (gc_tensor
       @-> scalar
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_logspace_tensor_scalar_out =
    foreign
      "atg_logspace_tensor_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> int64_t @-> double @-> returning raw_tensor)
  ;;

  let stubs_logspace_tensor_tensor =
    foreign
      "atg_logspace_tensor_tensor"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_logspace_tensor_tensor_out =
    foreign
      "atg_logspace_tensor_tensor_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs_logsumexp =
    foreign
      "atg_logsumexp"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_logsumexp_out =
    foreign
      "atg_logsumexp_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_lstm =
    foreign
      "atg_lstm"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_lstm_cell =
    foreign
      "atg_lstm_cell"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_lstm_data =
    foreign
      "atg_lstm_data"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_lstm_mps_backward =
    foreign
      "atg_lstm_mps_backward"
      (gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_lt = foreign "atg_lt" (gc_tensor @-> scalar @-> returning raw_tensor)
  let stubs_lt_ = foreign "atg_lt_" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_lt_scalar_out =
    foreign
      "atg_lt_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_lt_tensor =
    foreign "atg_lt_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_lt_tensor_ =
    foreign "atg_lt_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_lt_tensor_out =
    foreign
      "atg_lt_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_lu_solve =
    foreign "atg_lu_solve" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_lu_solve_out =
    foreign
      "atg_lu_solve_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_lu_unpack =
    foreign
      "atg_lu_unpack"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning void)
  ;;

  let stubs_lu_unpack_out =
    foreign
      "atg_lu_unpack_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_margin_ranking_loss =
    foreign
      "atg_margin_ranking_loss"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_masked_fill =
    foreign "atg_masked_fill" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_masked_fill_ =
    foreign
      "atg_masked_fill_"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_masked_fill_scalar_out =
    foreign
      "atg_masked_fill_scalar_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_masked_fill_tensor =
    foreign
      "atg_masked_fill_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_masked_fill_tensor_ =
    foreign
      "atg_masked_fill_tensor_"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_masked_fill_tensor_out =
    foreign
      "atg_masked_fill_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_masked_scatter =
    foreign
      "atg_masked_scatter"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_masked_scatter_ =
    foreign
      "atg_masked_scatter_"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_masked_scatter_backward =
    foreign
      "atg_masked_scatter_backward"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_masked_scatter_out =
    foreign
      "atg_masked_scatter_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_masked_select =
    foreign "atg_masked_select" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;
end

module C16 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_masked_select_backward =
    foreign
      "atg_masked_select_backward"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_masked_select_out =
    foreign
      "atg_masked_select_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_matmul =
    foreign "atg_matmul" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_matmul_out =
    foreign
      "atg_matmul_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_matrix_exp = foreign "atg_matrix_exp" (gc_tensor @-> returning raw_tensor)

  let stubs_matrix_exp_backward =
    foreign "atg_matrix_exp_backward" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_matrix_h = foreign "atg_matrix_h" (gc_tensor @-> returning raw_tensor)

  let stubs_matrix_power =
    foreign "atg_matrix_power" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_matrix_power_out =
    foreign
      "atg_matrix_power_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_max = foreign "atg_max" (gc_tensor @-> returning raw_tensor)

  let stubs_max_dim =
    foreign
      "atg_max_dim"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> int @-> returning void)
  ;;

  let stubs_max_dim_max =
    foreign
      "atg_max_dim_max"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_max_other =
    foreign "atg_max_other" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_max_out =
    foreign "atg_max_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_max_pool1d =
    foreign
      "atg_max_pool1d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_max_pool1d_with_indices =
    foreign
      "atg_max_pool1d_with_indices"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_max_pool2d =
    foreign
      "atg_max_pool2d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_max_pool2d_backward =
    foreign
      "atg_max_pool2d_backward"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_max_pool2d_backward_out =
    foreign
      "atg_max_pool2d_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_max_pool2d_with_indices =
    foreign
      "atg_max_pool2d_with_indices"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_max_pool2d_with_indices_backward =
    foreign
      "atg_max_pool2d_with_indices_backward"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_max_pool2d_with_indices_backward_grad_input =
    foreign
      "atg_max_pool2d_with_indices_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_max_pool2d_with_indices_out =
    foreign
      "atg_max_pool2d_with_indices_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_max_pool3d =
    foreign
      "atg_max_pool3d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_max_pool3d_with_indices =
    foreign
      "atg_max_pool3d_with_indices"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_max_pool3d_with_indices_backward =
    foreign
      "atg_max_pool3d_with_indices_backward"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_max_pool3d_with_indices_backward_grad_input =
    foreign
      "atg_max_pool3d_with_indices_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_max_pool3d_with_indices_out =
    foreign
      "atg_max_pool3d_with_indices_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_max_unary_out =
    foreign "atg_max_unary_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_max_unpool2d =
    foreign
      "atg_max_unpool2d"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_max_unpool2d_out =
    foreign
      "atg_max_unpool2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_max_unpool3d =
    foreign
      "atg_max_unpool3d"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_max_unpool3d_out =
    foreign
      "atg_max_unpool3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_maximum =
    foreign "atg_maximum" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_maximum_out =
    foreign
      "atg_maximum_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mean = foreign "atg_mean" (gc_tensor @-> int @-> returning raw_tensor)

  let stubs_mean_dim =
    foreign
      "atg_mean_dim"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_mean_dtype_out =
    foreign "atg_mean_dtype_out" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_mean_out =
    foreign
      "atg_mean_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_median = foreign "atg_median" (gc_tensor @-> returning raw_tensor)

  let stubs_median_dim =
    foreign
      "atg_median_dim"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> int @-> returning void)
  ;;

  let stubs_median_dim_values =
    foreign
      "atg_median_dim_values"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_median_out =
    foreign "atg_median_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_meshgrid =
    foreign "atg_meshgrid" (ptr gc_tensor @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs_meshgrid_indexing =
    foreign
      "atg_meshgrid_indexing"
      (ptr gc_tensor @-> int @-> string @-> returning (ptr raw_tensor))
  ;;

  let stubs_mh = foreign "atg_mh" (gc_tensor @-> returning raw_tensor)
  let stubs_min = foreign "atg_min" (gc_tensor @-> returning raw_tensor)

  let stubs_min_dim =
    foreign
      "atg_min_dim"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> int @-> returning void)
  ;;

  let stubs_min_dim_min =
    foreign
      "atg_min_dim_min"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_min_other =
    foreign "atg_min_other" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_min_out =
    foreign "atg_min_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_min_unary_out =
    foreign "atg_min_unary_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_minimum =
    foreign "atg_minimum" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_minimum_out =
    foreign
      "atg_minimum_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_miopen_batch_norm =
    foreign
      "atg_miopen_batch_norm"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs_miopen_batch_norm_backward =
    foreign
      "atg_miopen_batch_norm_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> returning void)
  ;;

  let stubs_miopen_batch_norm_backward_out =
    foreign
      "atg_miopen_batch_norm_backward_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> returning void)
  ;;

  let stubs_miopen_batch_norm_out =
    foreign
      "atg_miopen_batch_norm_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs_miopen_convolution =
    foreign
      "atg_miopen_convolution"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_miopen_convolution_add_relu =
    foreign
      "atg_miopen_convolution_add_relu"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_miopen_convolution_out =
    foreign
      "atg_miopen_convolution_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_miopen_convolution_relu =
    foreign
      "atg_miopen_convolution_relu"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_miopen_convolution_transpose =
    foreign
      "atg_miopen_convolution_transpose"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_miopen_convolution_transpose_out =
    foreign
      "atg_miopen_convolution_transpose_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_miopen_depthwise_convolution =
    foreign
      "atg_miopen_depthwise_convolution"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_miopen_depthwise_convolution_out =
    foreign
      "atg_miopen_depthwise_convolution_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_miopen_rnn =
    foreign
      "atg_miopen_rnn"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> double
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_miopen_rnn_out =
    foreign
      "atg_miopen_rnn_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> double
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_mish = foreign "atg_mish" (gc_tensor @-> returning raw_tensor)
  let stubs_mish_ = foreign "atg_mish_" (gc_tensor @-> returning raw_tensor)

  let stubs_mish_backward =
    foreign "atg_mish_backward" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mish_out =
    foreign "atg_mish_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_adaptive_avg_pool2d =
    foreign
      "atg_mkldnn_adaptive_avg_pool2d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_adaptive_avg_pool2d_backward =
    foreign
      "atg_mkldnn_adaptive_avg_pool2d_backward"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_adaptive_avg_pool2d_backward_out =
    foreign
      "atg_mkldnn_adaptive_avg_pool2d_backward_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_adaptive_avg_pool2d_out =
    foreign
      "atg_mkldnn_adaptive_avg_pool2d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_convolution =
    foreign
      "atg_mkldnn_convolution"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_convolution_out =
    foreign
      "atg_mkldnn_convolution_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_linear =
    foreign
      "atg_mkldnn_linear"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_linear_backward_input =
    foreign
      "atg_mkldnn_linear_backward_input"
      (ptr int64_t @-> int @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_linear_backward_input_out =
    foreign
      "atg_mkldnn_linear_backward_input_out"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_linear_backward_weights =
    foreign
      "atg_mkldnn_linear_backward_weights"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs_mkldnn_linear_backward_weights_out =
    foreign
      "atg_mkldnn_linear_backward_weights_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning void)
  ;;

  let stubs_mkldnn_linear_out =
    foreign
      "atg_mkldnn_linear_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_max_pool2d =
    foreign
      "atg_mkldnn_max_pool2d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_max_pool2d_backward =
    foreign
      "atg_mkldnn_max_pool2d_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_max_pool2d_backward_out =
    foreign
      "atg_mkldnn_max_pool2d_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_max_pool2d_out =
    foreign
      "atg_mkldnn_max_pool2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_max_pool3d =
    foreign
      "atg_mkldnn_max_pool3d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_max_pool3d_backward =
    foreign
      "atg_mkldnn_max_pool3d_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_max_pool3d_backward_out =
    foreign
      "atg_mkldnn_max_pool3d_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_max_pool3d_out =
    foreign
      "atg_mkldnn_max_pool3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_reorder_conv2d_weight =
    foreign
      "atg_mkldnn_reorder_conv2d_weight"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_reorder_conv2d_weight_out =
    foreign
      "atg_mkldnn_reorder_conv2d_weight_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_reorder_conv3d_weight =
    foreign
      "atg_mkldnn_reorder_conv3d_weight"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_reorder_conv3d_weight_out =
    foreign
      "atg_mkldnn_reorder_conv3d_weight_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_mkldnn_rnn_layer =
    foreign
      "atg_mkldnn_rnn_layer"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_mkldnn_rnn_layer_backward =
    foreign
      "atg_mkldnn_rnn_layer_backward"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_mkldnn_rnn_layer_backward_out =
    foreign
      "atg_mkldnn_rnn_layer_backward_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> gc_tensor
       @-> returning void)
  ;;

  let stubs_mkldnn_rnn_layer_out =
    foreign
      "atg_mkldnn_rnn_layer_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;
end

module C17 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_mm = foreign "atg_mm" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_mm_out =
    foreign "atg_mm_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mode =
    foreign
      "atg_mode"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> int @-> returning void)
  ;;

  let stubs_mode_values =
    foreign
      "atg_mode_values"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_moveaxis =
    foreign
      "atg_moveaxis"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_moveaxis_int =
    foreign "atg_moveaxis_int" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_movedim =
    foreign
      "atg_movedim"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_movedim_int =
    foreign "atg_movedim_int" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_mse_loss =
    foreign "atg_mse_loss" (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_mse_loss_backward =
    foreign
      "atg_mse_loss_backward"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_mse_loss_backward_grad_input =
    foreign
      "atg_mse_loss_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_mse_loss_out =
    foreign
      "atg_mse_loss_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_msort = foreign "atg_msort" (gc_tensor @-> returning raw_tensor)

  let stubs_msort_out =
    foreign "atg_msort_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mt = foreign "atg_mt" (gc_tensor @-> returning raw_tensor)
  let stubs_mul = foreign "atg_mul" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  let stubs_mul_ = foreign "atg_mul_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_mul_out =
    foreign "atg_mul_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mul_scalar =
    foreign "atg_mul_scalar" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_mul_scalar_ =
    foreign "atg_mul_scalar_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_mul_scalar_out =
    foreign
      "atg_mul_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_multi_margin_loss_backward =
    foreign
      "atg_multi_margin_loss_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_multi_margin_loss_backward_grad_input =
    foreign
      "atg_multi_margin_loss_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_multilabel_margin_loss =
    foreign
      "atg_multilabel_margin_loss"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_multilabel_margin_loss_backward =
    foreign
      "atg_multilabel_margin_loss_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_multilabel_margin_loss_backward_grad_input =
    foreign
      "atg_multilabel_margin_loss_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_multilabel_margin_loss_out =
    foreign
      "atg_multilabel_margin_loss_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_multinomial =
    foreign "atg_multinomial" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_multinomial_out =
    foreign
      "atg_multinomial_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_multiply =
    foreign "atg_multiply" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_multiply_ =
    foreign "atg_multiply_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_multiply_out =
    foreign
      "atg_multiply_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_multiply_scalar =
    foreign "atg_multiply_scalar" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_multiply_scalar_ =
    foreign "atg_multiply_scalar_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_mv = foreign "atg_mv" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_mv_out =
    foreign "atg_mv_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_mvlgamma =
    foreign "atg_mvlgamma" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_mvlgamma_ =
    foreign "atg_mvlgamma_" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_mvlgamma_out =
    foreign
      "atg_mvlgamma_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_nan_to_num =
    foreign
      "atg_nan_to_num"
      (gc_tensor
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_nan_to_num_ =
    foreign
      "atg_nan_to_num_"
      (gc_tensor
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_nan_to_num_out =
    foreign
      "atg_nan_to_num_out"
      (gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_nanmean =
    foreign
      "atg_nanmean"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_nanmean_out =
    foreign
      "atg_nanmean_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_nanmedian = foreign "atg_nanmedian" (gc_tensor @-> returning raw_tensor)

  let stubs_nanmedian_dim =
    foreign
      "atg_nanmedian_dim"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> int @-> returning void)
  ;;

  let stubs_nanmedian_dim_values =
    foreign
      "atg_nanmedian_dim_values"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_nanmedian_out =
    foreign "atg_nanmedian_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_nanquantile =
    foreign
      "atg_nanquantile"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_nanquantile_out =
    foreign
      "atg_nanquantile_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_nanquantile_scalar =
    foreign
      "atg_nanquantile_scalar"
      (gc_tensor
       @-> double
       @-> int64_t
       @-> int
       @-> int
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_nanquantile_scalar_out =
    foreign
      "atg_nanquantile_scalar_out"
      (gc_tensor
       @-> gc_tensor
       @-> double
       @-> int64_t
       @-> int
       @-> int
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_nansum =
    foreign
      "atg_nansum"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_nansum_out =
    foreign
      "atg_nansum_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_narrow =
    foreign
      "atg_narrow"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_narrow_copy =
    foreign
      "atg_narrow_copy"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_narrow_copy_out =
    foreign
      "atg_narrow_copy_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_narrow_tensor =
    foreign
      "atg_narrow_tensor"
      (gc_tensor @-> int64_t @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_native_batch_norm =
    foreign
      "atg_native_batch_norm"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs_native_batch_norm_out =
    foreign
      "atg_native_batch_norm_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> double
       @-> double
       @-> returning void)
  ;;

  let stubs_native_channel_shuffle =
    foreign "atg_native_channel_shuffle" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_native_dropout =
    foreign
      "atg_native_dropout"
      (ptr raw_tensor @-> gc_tensor @-> double @-> int @-> returning void)
  ;;

  let stubs_native_dropout_backward =
    foreign
      "atg_native_dropout_backward"
      (gc_tensor @-> gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs_native_dropout_backward_out =
    foreign
      "atg_native_dropout_backward_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs_native_dropout_out =
    foreign
      "atg_native_dropout_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> returning void)
  ;;

  let stubs_native_group_norm =
    foreign
      "atg_native_group_norm"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> double
       @-> returning void)
  ;;

  let stubs_native_group_norm_out =
    foreign
      "atg_native_group_norm_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> double
       @-> returning void)
  ;;

  let stubs_native_layer_norm =
    foreign
      "atg_native_layer_norm"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> returning void)
  ;;

  let stubs_native_layer_norm_out =
    foreign
      "atg_native_layer_norm_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> returning void)
  ;;

  let stubs_native_norm =
    foreign "atg_native_norm" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_native_norm_out =
    foreign
      "atg_native_norm_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_native_norm_scalaropt_dim_dtype =
    foreign
      "atg_native_norm_scalaropt_dim_dtype"
      (gc_tensor
       @-> scalar
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_native_norm_scalaropt_dim_dtype_out =
    foreign
      "atg_native_norm_scalaropt_dim_dtype_out"
      (gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_ne = foreign "atg_ne" (gc_tensor @-> scalar @-> returning raw_tensor)
  let stubs_ne_ = foreign "atg_ne_" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_ne_scalar_out =
    foreign
      "atg_ne_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_ne_tensor =
    foreign "atg_ne_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_ne_tensor_ =
    foreign "atg_ne_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_ne_tensor_out =
    foreign
      "atg_ne_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_neg = foreign "atg_neg" (gc_tensor @-> returning raw_tensor)
  let stubs_neg_ = foreign "atg_neg_" (gc_tensor @-> returning raw_tensor)

  let stubs_neg_out =
    foreign "atg_neg_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_negative = foreign "atg_negative" (gc_tensor @-> returning raw_tensor)
  let stubs_negative_ = foreign "atg_negative_" (gc_tensor @-> returning raw_tensor)

  let stubs_negative_out =
    foreign "atg_negative_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_nested_to_padded_tensor =
    foreign
      "atg_nested_to_padded_tensor"
      (gc_tensor @-> double @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_new_empty =
    foreign
      "atg_new_empty"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_new_empty_out =
    foreign
      "atg_new_empty_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_new_empty_strided =
    foreign
      "atg_new_empty_strided"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_new_empty_strided_out =
    foreign
      "atg_new_empty_strided_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_new_full =
    foreign
      "atg_new_full"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> scalar
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_new_full_out =
    foreign
      "atg_new_full_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_new_ones =
    foreign
      "atg_new_ones"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_new_ones_out =
    foreign
      "atg_new_ones_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_new_zeros =
    foreign
      "atg_new_zeros"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_new_zeros_out =
    foreign
      "atg_new_zeros_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_nextafter =
    foreign "atg_nextafter" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_nextafter_ =
    foreign "atg_nextafter_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_nextafter_out =
    foreign
      "atg_nextafter_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_nll_loss =
    foreign
      "atg_nll_loss"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;
end

module C18 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_nll_loss2d =
    foreign
      "atg_nll_loss2d"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_nll_loss2d_backward =
    foreign
      "atg_nll_loss2d_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_nll_loss2d_backward_grad_input =
    foreign
      "atg_nll_loss2d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_nll_loss2d_out =
    foreign
      "atg_nll_loss2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_nll_loss_backward =
    foreign
      "atg_nll_loss_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_nll_loss_backward_grad_input =
    foreign
      "atg_nll_loss_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_nll_loss_nd =
    foreign
      "atg_nll_loss_nd"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_nll_loss_out =
    foreign
      "atg_nll_loss_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_nonzero = foreign "atg_nonzero" (gc_tensor @-> returning raw_tensor)

  let stubs_nonzero_numpy =
    foreign "atg_nonzero_numpy" (gc_tensor @-> returning (ptr raw_tensor))
  ;;

  let stubs_nonzero_out =
    foreign "atg_nonzero_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_nonzero_static =
    foreign
      "atg_nonzero_static"
      (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_nonzero_static_out =
    foreign
      "atg_nonzero_static_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_norm = foreign "atg_norm" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_norm_dtype_out =
    foreign
      "atg_norm_dtype_out"
      (gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_norm_except_dim =
    foreign
      "atg_norm_except_dim"
      (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_norm_out =
    foreign
      "atg_norm_out"
      (gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_norm_scalar_out =
    foreign
      "atg_norm_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_norm_scalaropt_dim =
    foreign
      "atg_norm_scalaropt_dim"
      (gc_tensor @-> scalar @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_norm_scalaropt_dim_dtype =
    foreign
      "atg_norm_scalaropt_dim_dtype"
      (gc_tensor
       @-> scalar
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_norm_scalaropt_dtype =
    foreign
      "atg_norm_scalaropt_dtype"
      (gc_tensor @-> scalar @-> int @-> returning raw_tensor)
  ;;

  let stubs_norm_scalaropt_dtype_out =
    foreign
      "atg_norm_scalaropt_dtype_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> int @-> returning raw_tensor)
  ;;

  let stubs_normal_ =
    foreign "atg_normal_" (gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_normal_functional =
    foreign
      "atg_normal_functional"
      (gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_not_equal =
    foreign "atg_not_equal" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_not_equal_ =
    foreign "atg_not_equal_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_not_equal_scalar_out =
    foreign
      "atg_not_equal_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_not_equal_tensor =
    foreign "atg_not_equal_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_not_equal_tensor_ =
    foreign "atg_not_equal_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_not_equal_tensor_out =
    foreign
      "atg_not_equal_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_nuclear_norm =
    foreign "atg_nuclear_norm" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_nuclear_norm_dim =
    foreign
      "atg_nuclear_norm_dim"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_nuclear_norm_dim_out =
    foreign
      "atg_nuclear_norm_dim_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_nuclear_norm_out =
    foreign
      "atg_nuclear_norm_out"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_numpy_t = foreign "atg_numpy_t" (gc_tensor @-> returning raw_tensor)

  let stubs_one_hot =
    foreign "atg_one_hot" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_ones =
    foreign "atg_ones" (ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_ones_like = foreign "atg_ones_like" (gc_tensor @-> returning raw_tensor)

  let stubs_ones_like_out =
    foreign "atg_ones_like_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_ones_out =
    foreign "atg_ones_out" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_orgqr = foreign "atg_orgqr" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_orgqr_out =
    foreign
      "atg_orgqr_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_ormqr =
    foreign
      "atg_ormqr"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_ormqr_out =
    foreign
      "atg_ormqr_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_outer = foreign "atg_outer" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_outer_out =
    foreign
      "atg_outer_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_output_nr = foreign "atg_output_nr" (gc_tensor @-> returning int64_t)

  let stubs_pad =
    foreign
      "atg_pad"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> string
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_pad_sequence =
    foreign
      "atg_pad_sequence"
      (ptr gc_tensor @-> int @-> int @-> double @-> string @-> returning raw_tensor)
  ;;

  let stubs_pairwise_distance =
    foreign
      "atg_pairwise_distance"
      (gc_tensor @-> gc_tensor @-> double @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_pdist = foreign "atg_pdist" (gc_tensor @-> double @-> returning raw_tensor)

  let stubs_permute =
    foreign "atg_permute" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_permute_copy =
    foreign "atg_permute_copy" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_permute_copy_out =
    foreign
      "atg_permute_copy_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_pin_memory =
    foreign "atg_pin_memory" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_pinverse =
    foreign "atg_pinverse" (gc_tensor @-> double @-> returning raw_tensor)
  ;;

  let stubs_pixel_shuffle =
    foreign "atg_pixel_shuffle" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_pixel_shuffle_out =
    foreign
      "atg_pixel_shuffle_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_pixel_unshuffle =
    foreign "atg_pixel_unshuffle" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_pixel_unshuffle_out =
    foreign
      "atg_pixel_unshuffle_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_poisson = foreign "atg_poisson" (gc_tensor @-> returning raw_tensor)

  let stubs_poisson_nll_loss =
    foreign
      "atg_poisson_nll_loss"
      (gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> double
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_poisson_out =
    foreign "atg_poisson_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_polar = foreign "atg_polar" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_polar_out =
    foreign
      "atg_polar_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_polygamma =
    foreign "atg_polygamma" (int64_t @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_polygamma_ =
    foreign "atg_polygamma_" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_polygamma_out =
    foreign
      "atg_polygamma_out"
      (gc_tensor @-> int64_t @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_positive = foreign "atg_positive" (gc_tensor @-> returning raw_tensor)
  let stubs_pow = foreign "atg_pow" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  let stubs_pow_ = foreign "atg_pow_" (gc_tensor @-> scalar @-> returning raw_tensor)

  let stubs_pow_scalar =
    foreign "atg_pow_scalar" (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_pow_scalar_out =
    foreign
      "atg_pow_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_pow_tensor_ =
    foreign "atg_pow_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_pow_tensor_scalar =
    foreign "atg_pow_tensor_scalar" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_pow_tensor_scalar_out =
    foreign
      "atg_pow_tensor_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_pow_tensor_tensor_out =
    foreign
      "atg_pow_tensor_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_prelu = foreign "atg_prelu" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  let stubs_prod = foreign "atg_prod" (gc_tensor @-> int @-> returning raw_tensor)

  let stubs_prod_dim_int =
    foreign
      "atg_prod_dim_int"
      (gc_tensor @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_prod_int_out =
    foreign
      "atg_prod_int_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_prod_out =
    foreign "atg_prod_out" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_put =
    foreign
      "atg_put"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_put_ =
    foreign
      "atg_put_"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_put_out =
    foreign
      "atg_put_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_q_per_channel_axis =
    foreign "atg_q_per_channel_axis" (gc_tensor @-> returning int64_t)
  ;;

  let stubs_q_per_channel_scales =
    foreign "atg_q_per_channel_scales" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_q_per_channel_scales_out =
    foreign
      "atg_q_per_channel_scales_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_q_per_channel_zero_points =
    foreign "atg_q_per_channel_zero_points" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_q_per_channel_zero_points_out =
    foreign
      "atg_q_per_channel_zero_points_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_q_scale = foreign "atg_q_scale" (gc_tensor @-> returning double)
  let stubs_q_zero_point = foreign "atg_q_zero_point" (gc_tensor @-> returning int64_t)
  let stubs_qr = foreign "atg_qr" (ptr raw_tensor @-> gc_tensor @-> int @-> returning void)

  let stubs_qr_q =
    foreign
      "atg_qr_q"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs_quantile =
    foreign
      "atg_quantile"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_quantile_out =
    foreign
      "atg_quantile_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_quantile_scalar =
    foreign
      "atg_quantile_scalar"
      (gc_tensor
       @-> double
       @-> int64_t
       @-> int
       @-> int
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_quantile_scalar_out =
    foreign
      "atg_quantile_scalar_out"
      (gc_tensor
       @-> gc_tensor
       @-> double
       @-> int64_t
       @-> int
       @-> int
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_quantize_per_channel =
    foreign
      "atg_quantize_per_channel"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_quantize_per_channel_out =
    foreign
      "atg_quantize_per_channel_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;
end

module C19 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_quantize_per_tensor =
    foreign
      "atg_quantize_per_tensor"
      (gc_tensor @-> double @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_quantize_per_tensor_dynamic =
    foreign
      "atg_quantize_per_tensor_dynamic"
      (gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_quantize_per_tensor_dynamic_out =
    foreign
      "atg_quantize_per_tensor_dynamic_out"
      (gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_quantize_per_tensor_out =
    foreign
      "atg_quantize_per_tensor_out"
      (gc_tensor @-> gc_tensor @-> double @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_quantize_per_tensor_tensor_qparams =
    foreign
      "atg_quantize_per_tensor_tensor_qparams"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_quantize_per_tensor_tensor_qparams_out =
    foreign
      "atg_quantize_per_tensor_tensor_qparams_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_quantize_per_tensor_tensors =
    foreign
      "atg_quantize_per_tensor_tensors"
      (ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning (ptr raw_tensor))
  ;;

  let stubs_quantize_per_tensor_tensors_out =
    foreign
      "atg_quantize_per_tensor_tensors_out"
      (ptr gc_tensor
       @-> int
       @-> ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> returning void)
  ;;

  let stubs_quantized_batch_norm =
    foreign
      "atg_quantized_batch_norm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_quantized_batch_norm_out =
    foreign
      "atg_quantized_batch_norm_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_quantized_gru_cell =
    foreign
      "atg_quantized_gru_cell"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_quantized_lstm_cell =
    foreign
      "atg_quantized_lstm_cell"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> scalar
       @-> scalar
       @-> returning void)
  ;;

  let stubs_quantized_max_pool1d =
    foreign
      "atg_quantized_max_pool1d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_quantized_max_pool1d_out =
    foreign
      "atg_quantized_max_pool1d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_quantized_max_pool2d =
    foreign
      "atg_quantized_max_pool2d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_quantized_max_pool2d_out =
    foreign
      "atg_quantized_max_pool2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_quantized_max_pool3d =
    foreign
      "atg_quantized_max_pool3d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_quantized_max_pool3d_out =
    foreign
      "atg_quantized_max_pool3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_quantized_rnn_relu_cell =
    foreign
      "atg_quantized_rnn_relu_cell"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_quantized_rnn_tanh_cell =
    foreign
      "atg_quantized_rnn_tanh_cell"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_rad2deg = foreign "atg_rad2deg" (gc_tensor @-> returning raw_tensor)
  let stubs_rad2deg_ = foreign "atg_rad2deg_" (gc_tensor @-> returning raw_tensor)

  let stubs_rad2deg_out =
    foreign "atg_rad2deg_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_rand =
    foreign "atg_rand" (ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_rand_like = foreign "atg_rand_like" (gc_tensor @-> returning raw_tensor)

  let stubs_rand_like_out =
    foreign "atg_rand_like_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_rand_out =
    foreign "atg_rand_out" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_randint =
    foreign
      "atg_randint"
      (int64_t @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_randint_like =
    foreign "atg_randint_like" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_randint_like_low_dtype =
    foreign
      "atg_randint_like_low_dtype"
      (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_randint_like_low_dtype_out =
    foreign
      "atg_randint_like_low_dtype_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_randint_like_out =
    foreign
      "atg_randint_like_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_randint_low =
    foreign
      "atg_randint_low"
      (int64_t
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_randint_low_out =
    foreign
      "atg_randint_low_out"
      (gc_tensor @-> int64_t @-> int64_t @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_randint_out =
    foreign
      "atg_randint_out"
      (gc_tensor @-> int64_t @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_randn =
    foreign "atg_randn" (ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_randn_like = foreign "atg_randn_like" (gc_tensor @-> returning raw_tensor)

  let stubs_randn_like_out =
    foreign "atg_randn_like_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_randn_out =
    foreign "atg_randn_out" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_random = foreign "atg_random" (gc_tensor @-> returning raw_tensor)
  let stubs_random_ = foreign "atg_random_" (gc_tensor @-> returning raw_tensor)

  let stubs_random_from =
    foreign
      "atg_random_from"
      (gc_tensor @-> int64_t @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_random_from_ =
    foreign
      "atg_random_from_"
      (gc_tensor @-> int64_t @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_random_from_out =
    foreign
      "atg_random_from_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_random_out =
    foreign "atg_random_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_random_to =
    foreign "atg_random_to" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_random_to_ =
    foreign "atg_random_to_" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_random_to_out =
    foreign
      "atg_random_to_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_randperm =
    foreign "atg_randperm" (int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_randperm_out =
    foreign "atg_randperm_out" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_range =
    foreign "atg_range" (scalar @-> scalar @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_range_out =
    foreign
      "atg_range_out"
      (gc_tensor @-> scalar @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_range_out_ =
    foreign "atg_range_out_" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_range_step =
    foreign
      "atg_range_step"
      (scalar @-> scalar @-> scalar @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_ravel = foreign "atg_ravel" (gc_tensor @-> returning raw_tensor)
  let stubs_real = foreign "atg_real" (gc_tensor @-> returning raw_tensor)
  let stubs_reciprocal = foreign "atg_reciprocal" (gc_tensor @-> returning raw_tensor)
  let stubs_reciprocal_ = foreign "atg_reciprocal_" (gc_tensor @-> returning raw_tensor)

  let stubs_reciprocal_out =
    foreign "atg_reciprocal_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad1d =
    foreign
      "atg_reflection_pad1d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad1d_backward =
    foreign
      "atg_reflection_pad1d_backward"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad1d_backward_grad_input =
    foreign
      "atg_reflection_pad1d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad1d_out =
    foreign
      "atg_reflection_pad1d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad2d =
    foreign
      "atg_reflection_pad2d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad2d_backward =
    foreign
      "atg_reflection_pad2d_backward"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad2d_backward_grad_input =
    foreign
      "atg_reflection_pad2d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad2d_out =
    foreign
      "atg_reflection_pad2d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad3d =
    foreign
      "atg_reflection_pad3d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad3d_backward =
    foreign
      "atg_reflection_pad3d_backward"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad3d_backward_grad_input =
    foreign
      "atg_reflection_pad3d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_reflection_pad3d_out =
    foreign
      "atg_reflection_pad3d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_relu = foreign "atg_relu" (gc_tensor @-> returning raw_tensor)
  let stubs_relu6 = foreign "atg_relu6" (gc_tensor @-> returning raw_tensor)
  let stubs_relu6_ = foreign "atg_relu6_" (gc_tensor @-> returning raw_tensor)
  let stubs_relu_ = foreign "atg_relu_" (gc_tensor @-> returning raw_tensor)

  let stubs_relu_out =
    foreign "atg_relu_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_remainder =
    foreign "atg_remainder" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_remainder_ =
    foreign "atg_remainder_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_remainder_scalar_out =
    foreign
      "atg_remainder_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_remainder_scalar_tensor =
    foreign "atg_remainder_scalar_tensor" (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_remainder_scalar_tensor_out =
    foreign
      "atg_remainder_scalar_tensor_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_remainder_tensor =
    foreign "atg_remainder_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_remainder_tensor_ =
    foreign "atg_remainder_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_remainder_tensor_out =
    foreign
      "atg_remainder_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_renorm =
    foreign
      "atg_renorm"
      (gc_tensor @-> scalar @-> int64_t @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_renorm_ =
    foreign
      "atg_renorm_"
      (gc_tensor @-> scalar @-> int64_t @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_renorm_out =
    foreign
      "atg_renorm_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> int64_t @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_repeat =
    foreign "atg_repeat" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_repeat_interleave =
    foreign
      "atg_repeat_interleave"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_repeat_interleave_self_int =
    foreign
      "atg_repeat_interleave_self_int"
      (gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_repeat_interleave_self_tensor =
    foreign
      "atg_repeat_interleave_self_tensor"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_repeat_interleave_tensor_out =
    foreign
      "atg_repeat_interleave_tensor_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_repeat_out =
    foreign
      "atg_repeat_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_replication_pad1d =
    foreign
      "atg_replication_pad1d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_replication_pad1d_backward =
    foreign
      "atg_replication_pad1d_backward"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_replication_pad1d_backward_grad_input =
    foreign
      "atg_replication_pad1d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_replication_pad1d_out =
    foreign
      "atg_replication_pad1d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_replication_pad2d =
    foreign
      "atg_replication_pad2d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_replication_pad2d_backward =
    foreign
      "atg_replication_pad2d_backward"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_replication_pad2d_backward_grad_input =
    foreign
      "atg_replication_pad2d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;
end

module C20 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_replication_pad2d_out =
    foreign
      "atg_replication_pad2d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_replication_pad3d =
    foreign
      "atg_replication_pad3d"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_replication_pad3d_backward =
    foreign
      "atg_replication_pad3d_backward"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_replication_pad3d_backward_grad_input =
    foreign
      "atg_replication_pad3d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_replication_pad3d_out =
    foreign
      "atg_replication_pad3d_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_requires_grad_ =
    foreign "atg_requires_grad_" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_reshape =
    foreign "atg_reshape" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_reshape_as =
    foreign "atg_reshape_as" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_resize =
    foreign "atg_resize" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_resize_ =
    foreign "atg_resize_" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_resize_as =
    foreign "atg_resize_as" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_resize_as_ =
    foreign "atg_resize_as_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_resize_as_out =
    foreign
      "atg_resize_as_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_resize_as_sparse =
    foreign "atg_resize_as_sparse" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_resize_as_sparse_ =
    foreign "atg_resize_as_sparse_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_resize_as_sparse_out =
    foreign
      "atg_resize_as_sparse_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_resize_out =
    foreign
      "atg_resize_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_resolve_conj = foreign "atg_resolve_conj" (gc_tensor @-> returning raw_tensor)
  let stubs_resolve_neg = foreign "atg_resolve_neg" (gc_tensor @-> returning raw_tensor)
  let stubs_retains_grad = foreign "atg_retains_grad" (gc_tensor @-> returning bool)

  let stubs_rms_norm =
    foreign
      "atg_rms_norm"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_rnn_relu =
    foreign
      "atg_rnn_relu"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_rnn_relu_cell =
    foreign
      "atg_rnn_relu_cell"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_rnn_relu_data =
    foreign
      "atg_rnn_relu_data"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_rnn_tanh =
    foreign
      "atg_rnn_tanh"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_rnn_tanh_cell =
    foreign
      "atg_rnn_tanh_cell"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_rnn_tanh_data =
    foreign
      "atg_rnn_tanh_data"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> double
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_roll =
    foreign
      "atg_roll"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_roll_out =
    foreign
      "atg_roll_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_rot90 =
    foreign
      "atg_rot90"
      (gc_tensor @-> int64_t @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_rot90_out =
    foreign
      "atg_rot90_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_round = foreign "atg_round" (gc_tensor @-> returning raw_tensor)
  let stubs_round_ = foreign "atg_round_" (gc_tensor @-> returning raw_tensor)

  let stubs_round_decimals =
    foreign "atg_round_decimals" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_round_decimals_ =
    foreign "atg_round_decimals_" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_round_decimals_out =
    foreign
      "atg_round_decimals_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_round_out =
    foreign "atg_round_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_row_indices = foreign "atg_row_indices" (gc_tensor @-> returning raw_tensor)

  let stubs_row_indices_copy =
    foreign "atg_row_indices_copy" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_row_indices_copy_out =
    foreign "atg_row_indices_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_row_stack =
    foreign "atg_row_stack" (ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_row_stack_out =
    foreign
      "atg_row_stack_out"
      (gc_tensor @-> ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_rrelu =
    foreign "atg_rrelu" (gc_tensor @-> scalar @-> scalar @-> int @-> returning raw_tensor)
  ;;

  let stubs_rrelu_ =
    foreign "atg_rrelu_" (gc_tensor @-> scalar @-> scalar @-> int @-> returning raw_tensor)
  ;;

  let stubs_rrelu_with_noise =
    foreign
      "atg_rrelu_with_noise"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> int @-> returning raw_tensor)
  ;;

  let stubs_rrelu_with_noise_ =
    foreign
      "atg_rrelu_with_noise_"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> int @-> returning raw_tensor)
  ;;

  let stubs_rrelu_with_noise_backward =
    foreign
      "atg_rrelu_with_noise_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_rrelu_with_noise_backward_out =
    foreign
      "atg_rrelu_with_noise_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_rrelu_with_noise_functional =
    foreign
      "atg_rrelu_with_noise_functional"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> int
       @-> returning void)
  ;;

  let stubs_rrelu_with_noise_out =
    foreign
      "atg_rrelu_with_noise_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_rsqrt = foreign "atg_rsqrt" (gc_tensor @-> returning raw_tensor)
  let stubs_rsqrt_ = foreign "atg_rsqrt_" (gc_tensor @-> returning raw_tensor)

  let stubs_rsqrt_out =
    foreign "atg_rsqrt_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_rsub =
    foreign "atg_rsub" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_rsub_scalar =
    foreign "atg_rsub_scalar" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_rsub_scalar_out =
    foreign
      "atg_rsub_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_rsub_tensor_out =
    foreign
      "atg_rsub_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_scalar_tensor =
    foreign "atg_scalar_tensor" (scalar @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_scalar_tensor_out =
    foreign "atg_scalar_tensor_out" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_scaled_dot_product_attention =
    foreign
      "atg_scaled_dot_product_attention"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> int
       @-> double
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_scatter =
    foreign
      "atg_scatter"
      (gc_tensor @-> int64_t @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_scatter_ =
    foreign
      "atg_scatter_"
      (gc_tensor @-> int64_t @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_scatter_add =
    foreign
      "atg_scatter_add"
      (gc_tensor @-> int64_t @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_scatter_add_ =
    foreign
      "atg_scatter_add_"
      (gc_tensor @-> int64_t @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_scatter_add_out =
    foreign
      "atg_scatter_add_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_scatter_reduce =
    foreign
      "atg_scatter_reduce"
      (gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_scatter_reduce_ =
    foreign
      "atg_scatter_reduce_"
      (gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_scatter_reduce_out =
    foreign
      "atg_scatter_reduce_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_scatter_src_out =
    foreign
      "atg_scatter_src_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_scatter_value =
    foreign
      "atg_scatter_value"
      (gc_tensor @-> int64_t @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_scatter_value_ =
    foreign
      "atg_scatter_value_"
      (gc_tensor @-> int64_t @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_scatter_value_out =
    foreign
      "atg_scatter_value_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_scatter_value_reduce =
    foreign
      "atg_scatter_value_reduce"
      (gc_tensor @-> int64_t @-> gc_tensor @-> scalar @-> string @-> returning raw_tensor)
  ;;

  let stubs_scatter_value_reduce_ =
    foreign
      "atg_scatter_value_reduce_"
      (gc_tensor @-> int64_t @-> gc_tensor @-> scalar @-> string @-> returning raw_tensor)
  ;;

  let stubs_scatter_value_reduce_out =
    foreign
      "atg_scatter_value_reduce_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> scalar
       @-> string
       @-> returning raw_tensor)
  ;;

  let stubs_searchsorted =
    foreign
      "atg_searchsorted"
      (gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> string
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_searchsorted_scalar =
    foreign
      "atg_searchsorted_scalar"
      (gc_tensor
       @-> scalar
       @-> int
       @-> int
       @-> string
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_searchsorted_scalar_out =
    foreign
      "atg_searchsorted_scalar_out"
      (gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> int
       @-> int
       @-> string
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_searchsorted_tensor_out =
    foreign
      "atg_searchsorted_tensor_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> string
       @-> int
       @-> gc_tensor
       @-> returning raw_tensor)
  ;;

  let stubs_segment_reduce =
    foreign
      "atg_segment_reduce"
      (gc_tensor
       @-> string
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_segment_reduce_out =
    foreign
      "atg_segment_reduce_out"
      (gc_tensor
       @-> gc_tensor
       @-> string
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_select =
    foreign "atg_select" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_select_backward =
    foreign
      "atg_select_backward"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_select_backward_out =
    foreign
      "atg_select_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_select_copy =
    foreign "atg_select_copy" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_select_copy_int_out =
    foreign
      "atg_select_copy_int_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_select_scatter =
    foreign
      "atg_select_scatter"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_select_scatter_out =
    foreign
      "atg_select_scatter_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_selu = foreign "atg_selu" (gc_tensor @-> returning raw_tensor)
  let stubs_selu_ = foreign "atg_selu_" (gc_tensor @-> returning raw_tensor)
  let stubs_set = foreign "atg_set" (gc_tensor @-> returning raw_tensor)
  let stubs_set_ = foreign "atg_set_" (gc_tensor @-> returning raw_tensor)

  let stubs_set_out =
    foreign "atg_set_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_set_requires_grad =
    foreign "atg_set_requires_grad" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_set_source_tensor =
    foreign "atg_set_source_tensor" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_set_source_tensor_ =
    foreign "atg_set_source_tensor_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_set_source_tensor_out =
    foreign
      "atg_set_source_tensor_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_set_source_tensor_storage_offset_ =
    foreign
      "atg_set_source_tensor_storage_offset_"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_sgn = foreign "atg_sgn" (gc_tensor @-> returning raw_tensor)
  let stubs_sgn_ = foreign "atg_sgn_" (gc_tensor @-> returning raw_tensor)
end

module C21 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_sgn_out =
    foreign "atg_sgn_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_sigmoid = foreign "atg_sigmoid" (gc_tensor @-> returning raw_tensor)
  let stubs_sigmoid_ = foreign "atg_sigmoid_" (gc_tensor @-> returning raw_tensor)

  let stubs_sigmoid_backward =
    foreign "atg_sigmoid_backward" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_sigmoid_backward_grad_input =
    foreign
      "atg_sigmoid_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_sigmoid_out =
    foreign "atg_sigmoid_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_sign = foreign "atg_sign" (gc_tensor @-> returning raw_tensor)
  let stubs_sign_ = foreign "atg_sign_" (gc_tensor @-> returning raw_tensor)

  let stubs_sign_out =
    foreign "atg_sign_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_signbit = foreign "atg_signbit" (gc_tensor @-> returning raw_tensor)

  let stubs_signbit_out =
    foreign "atg_signbit_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_silu = foreign "atg_silu" (gc_tensor @-> returning raw_tensor)
  let stubs_silu_ = foreign "atg_silu_" (gc_tensor @-> returning raw_tensor)

  let stubs_silu_backward =
    foreign "atg_silu_backward" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_silu_backward_grad_input =
    foreign
      "atg_silu_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_silu_out =
    foreign "atg_silu_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_sin = foreign "atg_sin" (gc_tensor @-> returning raw_tensor)
  let stubs_sin_ = foreign "atg_sin_" (gc_tensor @-> returning raw_tensor)

  let stubs_sin_out =
    foreign "atg_sin_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_sinc = foreign "atg_sinc" (gc_tensor @-> returning raw_tensor)
  let stubs_sinc_ = foreign "atg_sinc_" (gc_tensor @-> returning raw_tensor)

  let stubs_sinc_out =
    foreign "atg_sinc_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_sinh = foreign "atg_sinh" (gc_tensor @-> returning raw_tensor)
  let stubs_sinh_ = foreign "atg_sinh_" (gc_tensor @-> returning raw_tensor)

  let stubs_sinh_out =
    foreign "atg_sinh_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_size = foreign "atg_size" (gc_tensor @-> int64_t @-> returning int64_t)

  let stubs_slice =
    foreign
      "atg_slice"
      (gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_slice_backward =
    foreign
      "atg_slice_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_slice_backward_out =
    foreign
      "atg_slice_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_slice_copy =
    foreign
      "atg_slice_copy"
      (gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_slice_copy_tensor_out =
    foreign
      "atg_slice_copy_tensor_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_slice_inverse =
    foreign
      "atg_slice_inverse"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_slice_scatter =
    foreign
      "atg_slice_scatter"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_slice_scatter_out =
    foreign
      "atg_slice_scatter_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_slogdet =
    foreign "atg_slogdet" (ptr raw_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs_slogdet_out =
    foreign
      "atg_slogdet_out"
      (ptr raw_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning void)
  ;;

  let stubs_slow_conv3d =
    foreign
      "atg_slow_conv3d"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_slow_conv3d_out =
    foreign
      "atg_slow_conv3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_slow_conv_dilated2d =
    foreign
      "atg_slow_conv_dilated2d"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_slow_conv_dilated2d_out =
    foreign
      "atg_slow_conv_dilated2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_slow_conv_dilated3d =
    foreign
      "atg_slow_conv_dilated3d"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_slow_conv_dilated3d_out =
    foreign
      "atg_slow_conv_dilated3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_slow_conv_transpose2d =
    foreign
      "atg_slow_conv_transpose2d"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_slow_conv_transpose2d_out =
    foreign
      "atg_slow_conv_transpose2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_slow_conv_transpose3d =
    foreign
      "atg_slow_conv_transpose3d"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_slow_conv_transpose3d_out =
    foreign
      "atg_slow_conv_transpose3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_smm = foreign "atg_smm" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_smooth_l1_loss =
    foreign
      "atg_smooth_l1_loss"
      (gc_tensor @-> gc_tensor @-> int64_t @-> double @-> returning raw_tensor)
  ;;

  let stubs_smooth_l1_loss_backward =
    foreign
      "atg_smooth_l1_loss_backward"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs_smooth_l1_loss_backward_grad_input =
    foreign
      "atg_smooth_l1_loss_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs_smooth_l1_loss_out =
    foreign
      "atg_smooth_l1_loss_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> double
       @-> returning raw_tensor)
  ;;

  let stubs_soft_margin_loss =
    foreign
      "atg_soft_margin_loss"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_soft_margin_loss_backward =
    foreign
      "atg_soft_margin_loss_backward"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_soft_margin_loss_backward_grad_input =
    foreign
      "atg_soft_margin_loss_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_soft_margin_loss_out =
    foreign
      "atg_soft_margin_loss_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_softmax =
    foreign "atg_softmax" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_softmax_int_out =
    foreign
      "atg_softmax_int_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_softplus =
    foreign "atg_softplus" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_softplus_backward =
    foreign
      "atg_softplus_backward"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_softplus_backward_grad_input =
    foreign
      "atg_softplus_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_softplus_out =
    foreign
      "atg_softplus_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_softshrink =
    foreign "atg_softshrink" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_softshrink_backward =
    foreign
      "atg_softshrink_backward"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_softshrink_backward_grad_input =
    foreign
      "atg_softshrink_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_softshrink_out =
    foreign
      "atg_softshrink_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_sort =
    foreign
      "atg_sort"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> int @-> returning void)
  ;;

  let stubs_sort_stable =
    foreign
      "atg_sort_stable"
      (ptr raw_tensor @-> gc_tensor @-> int @-> int64_t @-> int @-> returning void)
  ;;

  let stubs_sort_values =
    foreign
      "atg_sort_values"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_sort_values_stable =
    foreign
      "atg_sort_values_stable"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_sparse_bsc_tensor =
    foreign
      "atg_sparse_bsc_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_sparse_bsc_tensor_ccol_row_value_size =
    foreign
      "atg_sparse_bsc_tensor_ccol_row_value_size"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_sparse_bsr_tensor =
    foreign
      "atg_sparse_bsr_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_sparse_bsr_tensor_crow_col_value_size =
    foreign
      "atg_sparse_bsr_tensor_crow_col_value_size"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_sparse_compressed_tensor =
    foreign
      "atg_sparse_compressed_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_sparse_compressed_tensor_comp_plain_value_size =
    foreign
      "atg_sparse_compressed_tensor_comp_plain_value_size"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_sparse_coo_tensor =
    foreign
      "atg_sparse_coo_tensor"
      (ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_sparse_coo_tensor_indices =
    foreign
      "atg_sparse_coo_tensor_indices"
      (gc_tensor @-> gc_tensor @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_sparse_coo_tensor_indices_size =
    foreign
      "atg_sparse_coo_tensor_indices_size"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_sparse_coo_tensor_size_out =
    foreign
      "atg_sparse_coo_tensor_size_out"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_sparse_csc_tensor =
    foreign
      "atg_sparse_csc_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_sparse_csc_tensor_ccol_row_value_size =
    foreign
      "atg_sparse_csc_tensor_ccol_row_value_size"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_sparse_csr_tensor =
    foreign
      "atg_sparse_csr_tensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_sparse_csr_tensor_crow_col_value_size =
    foreign
      "atg_sparse_csr_tensor_crow_col_value_size"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_sparse_dim = foreign "atg_sparse_dim" (gc_tensor @-> returning int64_t)

  let stubs_sparse_mask =
    foreign "atg_sparse_mask" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_sparse_mask_out =
    foreign
      "atg_sparse_mask_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_sparse_resize =
    foreign
      "atg_sparse_resize"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_sparse_resize_ =
    foreign
      "atg_sparse_resize_"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_sparse_resize_and_clear =
    foreign
      "atg_sparse_resize_and_clear"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_sparse_resize_and_clear_ =
    foreign
      "atg_sparse_resize_and_clear_"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_sparse_resize_and_clear_out =
    foreign
      "atg_sparse_resize_and_clear_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_sparse_resize_out =
    foreign
      "atg_sparse_resize_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_sparse_sampled_addmm =
    foreign
      "atg_sparse_sampled_addmm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_sparse_sampled_addmm_out =
    foreign
      "atg_sparse_sampled_addmm_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_special_airy_ai =
    foreign "atg_special_airy_ai" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_airy_ai_out =
    foreign "atg_special_airy_ai_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_bessel_j0 =
    foreign "atg_special_bessel_j0" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_bessel_j0_out =
    foreign "atg_special_bessel_j0_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_bessel_j1 =
    foreign "atg_special_bessel_j1" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_bessel_j1_out =
    foreign "atg_special_bessel_j1_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;
end

module C22 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_special_bessel_y0 =
    foreign "atg_special_bessel_y0" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_bessel_y0_out =
    foreign "atg_special_bessel_y0_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_bessel_y1 =
    foreign "atg_special_bessel_y1" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_bessel_y1_out =
    foreign "atg_special_bessel_y1_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_t =
    foreign
      "atg_special_chebyshev_polynomial_t"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_t_n_scalar =
    foreign
      "atg_special_chebyshev_polynomial_t_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_t_n_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_t_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_t_out =
    foreign
      "atg_special_chebyshev_polynomial_t_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_t_x_scalar =
    foreign
      "atg_special_chebyshev_polynomial_t_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_t_x_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_t_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_u =
    foreign
      "atg_special_chebyshev_polynomial_u"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_u_n_scalar =
    foreign
      "atg_special_chebyshev_polynomial_u_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_u_n_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_u_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_u_out =
    foreign
      "atg_special_chebyshev_polynomial_u_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_u_x_scalar =
    foreign
      "atg_special_chebyshev_polynomial_u_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_u_x_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_u_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_v =
    foreign
      "atg_special_chebyshev_polynomial_v"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_v_n_scalar =
    foreign
      "atg_special_chebyshev_polynomial_v_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_v_n_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_v_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_v_out =
    foreign
      "atg_special_chebyshev_polynomial_v_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_v_x_scalar =
    foreign
      "atg_special_chebyshev_polynomial_v_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_v_x_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_v_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_w =
    foreign
      "atg_special_chebyshev_polynomial_w"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_w_n_scalar =
    foreign
      "atg_special_chebyshev_polynomial_w_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_w_n_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_w_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_w_out =
    foreign
      "atg_special_chebyshev_polynomial_w_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_w_x_scalar =
    foreign
      "atg_special_chebyshev_polynomial_w_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_chebyshev_polynomial_w_x_scalar_out =
    foreign
      "atg_special_chebyshev_polynomial_w_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_digamma =
    foreign "atg_special_digamma" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_digamma_out =
    foreign "atg_special_digamma_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_entr = foreign "atg_special_entr" (gc_tensor @-> returning raw_tensor)

  let stubs_special_entr_out =
    foreign "atg_special_entr_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_erf = foreign "atg_special_erf" (gc_tensor @-> returning raw_tensor)

  let stubs_special_erf_out =
    foreign "atg_special_erf_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_erfc = foreign "atg_special_erfc" (gc_tensor @-> returning raw_tensor)

  let stubs_special_erfc_out =
    foreign "atg_special_erfc_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_erfcx =
    foreign "atg_special_erfcx" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_erfcx_out =
    foreign "atg_special_erfcx_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_erfinv =
    foreign "atg_special_erfinv" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_erfinv_out =
    foreign "atg_special_erfinv_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_exp2 = foreign "atg_special_exp2" (gc_tensor @-> returning raw_tensor)

  let stubs_special_exp2_out =
    foreign "atg_special_exp2_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_expit =
    foreign "atg_special_expit" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_expit_out =
    foreign "atg_special_expit_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_expm1 =
    foreign "atg_special_expm1" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_expm1_out =
    foreign "atg_special_expm1_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_gammainc =
    foreign "atg_special_gammainc" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_gammainc_out =
    foreign
      "atg_special_gammainc_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_gammaincc =
    foreign "atg_special_gammaincc" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_gammaincc_out =
    foreign
      "atg_special_gammaincc_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_gammaln =
    foreign "atg_special_gammaln" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_gammaln_out =
    foreign "atg_special_gammaln_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_h =
    foreign
      "atg_special_hermite_polynomial_h"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_h_n_scalar =
    foreign
      "atg_special_hermite_polynomial_h_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_h_n_scalar_out =
    foreign
      "atg_special_hermite_polynomial_h_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_h_out =
    foreign
      "atg_special_hermite_polynomial_h_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_h_x_scalar =
    foreign
      "atg_special_hermite_polynomial_h_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_h_x_scalar_out =
    foreign
      "atg_special_hermite_polynomial_h_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_he =
    foreign
      "atg_special_hermite_polynomial_he"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_he_n_scalar =
    foreign
      "atg_special_hermite_polynomial_he_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_he_n_scalar_out =
    foreign
      "atg_special_hermite_polynomial_he_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_he_out =
    foreign
      "atg_special_hermite_polynomial_he_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_he_x_scalar =
    foreign
      "atg_special_hermite_polynomial_he_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_hermite_polynomial_he_x_scalar_out =
    foreign
      "atg_special_hermite_polynomial_he_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_i0 = foreign "atg_special_i0" (gc_tensor @-> returning raw_tensor)

  let stubs_special_i0_out =
    foreign "atg_special_i0_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_i0e = foreign "atg_special_i0e" (gc_tensor @-> returning raw_tensor)

  let stubs_special_i0e_out =
    foreign "atg_special_i0e_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_i1 = foreign "atg_special_i1" (gc_tensor @-> returning raw_tensor)

  let stubs_special_i1_out =
    foreign "atg_special_i1_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_i1e = foreign "atg_special_i1e" (gc_tensor @-> returning raw_tensor)

  let stubs_special_i1e_out =
    foreign "atg_special_i1e_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_laguerre_polynomial_l =
    foreign
      "atg_special_laguerre_polynomial_l"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_laguerre_polynomial_l_n_scalar =
    foreign
      "atg_special_laguerre_polynomial_l_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_laguerre_polynomial_l_n_scalar_out =
    foreign
      "atg_special_laguerre_polynomial_l_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_laguerre_polynomial_l_out =
    foreign
      "atg_special_laguerre_polynomial_l_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_laguerre_polynomial_l_x_scalar =
    foreign
      "atg_special_laguerre_polynomial_l_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_laguerre_polynomial_l_x_scalar_out =
    foreign
      "atg_special_laguerre_polynomial_l_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_legendre_polynomial_p =
    foreign
      "atg_special_legendre_polynomial_p"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_legendre_polynomial_p_n_scalar =
    foreign
      "atg_special_legendre_polynomial_p_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_legendre_polynomial_p_n_scalar_out =
    foreign
      "atg_special_legendre_polynomial_p_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_legendre_polynomial_p_out =
    foreign
      "atg_special_legendre_polynomial_p_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_legendre_polynomial_p_x_scalar =
    foreign
      "atg_special_legendre_polynomial_p_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_legendre_polynomial_p_x_scalar_out =
    foreign
      "atg_special_legendre_polynomial_p_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_log1p =
    foreign "atg_special_log1p" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_log1p_out =
    foreign "atg_special_log1p_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_log_ndtr =
    foreign "atg_special_log_ndtr" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_log_ndtr_out =
    foreign "atg_special_log_ndtr_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_log_softmax =
    foreign
      "atg_special_log_softmax"
      (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_special_logit =
    foreign "atg_special_logit" (gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_special_logit_out =
    foreign
      "atg_special_logit_out"
      (gc_tensor @-> gc_tensor @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_special_logsumexp =
    foreign
      "atg_special_logsumexp"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_special_logsumexp_out =
    foreign
      "atg_special_logsumexp_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_special_modified_bessel_i0 =
    foreign "atg_special_modified_bessel_i0" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_modified_bessel_i0_out =
    foreign
      "atg_special_modified_bessel_i0_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_modified_bessel_i1 =
    foreign "atg_special_modified_bessel_i1" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_modified_bessel_i1_out =
    foreign
      "atg_special_modified_bessel_i1_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_modified_bessel_k0 =
    foreign "atg_special_modified_bessel_k0" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_modified_bessel_k0_out =
    foreign
      "atg_special_modified_bessel_k0_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_modified_bessel_k1 =
    foreign "atg_special_modified_bessel_k1" (gc_tensor @-> returning raw_tensor)
  ;;
end

module C23 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_special_modified_bessel_k1_out =
    foreign
      "atg_special_modified_bessel_k1_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_multigammaln =
    foreign "atg_special_multigammaln" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_special_multigammaln_out =
    foreign
      "atg_special_multigammaln_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_special_ndtr = foreign "atg_special_ndtr" (gc_tensor @-> returning raw_tensor)

  let stubs_special_ndtr_out =
    foreign "atg_special_ndtr_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_ndtri =
    foreign "atg_special_ndtri" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_ndtri_out =
    foreign "atg_special_ndtri_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_polygamma =
    foreign "atg_special_polygamma" (int64_t @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_polygamma_out =
    foreign
      "atg_special_polygamma_out"
      (gc_tensor @-> int64_t @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_psi = foreign "atg_special_psi" (gc_tensor @-> returning raw_tensor)

  let stubs_special_psi_out =
    foreign "atg_special_psi_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_round =
    foreign "atg_special_round" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_special_round_out =
    foreign
      "atg_special_round_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_special_scaled_modified_bessel_k0 =
    foreign "atg_special_scaled_modified_bessel_k0" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_scaled_modified_bessel_k0_out =
    foreign
      "atg_special_scaled_modified_bessel_k0_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_scaled_modified_bessel_k1 =
    foreign "atg_special_scaled_modified_bessel_k1" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_scaled_modified_bessel_k1_out =
    foreign
      "atg_special_scaled_modified_bessel_k1_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_t =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_t_n_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_t_n_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_t_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_t_x_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_t_x_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_t_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_u =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_u_n_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_u_n_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_u_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_u_x_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_u_x_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_u_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_v =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_v_n_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_v_n_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_v_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_v_x_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_v_x_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_v_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_w =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_w_n_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w_n_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_w_n_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w_n_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_w_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_w_x_scalar =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w_x_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_shifted_chebyshev_polynomial_w_x_scalar_out =
    foreign
      "atg_special_shifted_chebyshev_polynomial_w_x_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_sinc = foreign "atg_special_sinc" (gc_tensor @-> returning raw_tensor)

  let stubs_special_sinc_out =
    foreign "atg_special_sinc_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_softmax =
    foreign "atg_special_softmax" (gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_special_spherical_bessel_j0 =
    foreign "atg_special_spherical_bessel_j0" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_spherical_bessel_j0_out =
    foreign
      "atg_special_spherical_bessel_j0_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_xlog1py =
    foreign "atg_special_xlog1py" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_xlog1py_other_scalar =
    foreign
      "atg_special_xlog1py_other_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_xlog1py_other_scalar_out =
    foreign
      "atg_special_xlog1py_other_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_xlog1py_out =
    foreign
      "atg_special_xlog1py_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_xlog1py_self_scalar =
    foreign
      "atg_special_xlog1py_self_scalar"
      (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_xlog1py_self_scalar_out =
    foreign
      "atg_special_xlog1py_self_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_xlogy =
    foreign "atg_special_xlogy" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_xlogy_other_scalar =
    foreign
      "atg_special_xlogy_other_scalar"
      (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_xlogy_other_scalar_out =
    foreign
      "atg_special_xlogy_other_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_xlogy_out =
    foreign
      "atg_special_xlogy_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_xlogy_self_scalar =
    foreign "atg_special_xlogy_self_scalar" (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_xlogy_self_scalar_out =
    foreign
      "atg_special_xlogy_self_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_zeta =
    foreign "atg_special_zeta" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_zeta_other_scalar =
    foreign "atg_special_zeta_other_scalar" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_zeta_other_scalar_out =
    foreign
      "atg_special_zeta_other_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_special_zeta_out =
    foreign
      "atg_special_zeta_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_zeta_self_scalar =
    foreign "atg_special_zeta_self_scalar" (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_special_zeta_self_scalar_out =
    foreign
      "atg_special_zeta_self_scalar_out"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_split =
    foreign "atg_split" (gc_tensor @-> int64_t @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_split_copy =
    foreign
      "atg_split_copy"
      (gc_tensor @-> int64_t @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_split_copy_tensor_out =
    foreign
      "atg_split_copy_tensor_out"
      (ptr gc_tensor @-> int @-> gc_tensor @-> int64_t @-> int64_t @-> returning void)
  ;;

  let stubs_split_sizes =
    foreign
      "atg_split_sizes"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_split_with_sizes =
    foreign
      "atg_split_with_sizes"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_split_with_sizes_copy =
    foreign
      "atg_split_with_sizes_copy"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_split_with_sizes_copy_out =
    foreign
      "atg_split_with_sizes_copy_out"
      (ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_sqrt = foreign "atg_sqrt" (gc_tensor @-> returning raw_tensor)
  let stubs_sqrt_ = foreign "atg_sqrt_" (gc_tensor @-> returning raw_tensor)

  let stubs_sqrt_out =
    foreign "atg_sqrt_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_square = foreign "atg_square" (gc_tensor @-> returning raw_tensor)
  let stubs_square_ = foreign "atg_square_" (gc_tensor @-> returning raw_tensor)

  let stubs_square_out =
    foreign "atg_square_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_squeeze = foreign "atg_squeeze" (gc_tensor @-> returning raw_tensor)
  let stubs_squeeze_ = foreign "atg_squeeze_" (gc_tensor @-> returning raw_tensor)
  let stubs_squeeze_copy = foreign "atg_squeeze_copy" (gc_tensor @-> returning raw_tensor)

  let stubs_squeeze_copy_dim =
    foreign "atg_squeeze_copy_dim" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_squeeze_copy_dim_out =
    foreign
      "atg_squeeze_copy_dim_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_squeeze_copy_dims =
    foreign
      "atg_squeeze_copy_dims"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_squeeze_copy_dims_out =
    foreign
      "atg_squeeze_copy_dims_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_squeeze_copy_out =
    foreign "atg_squeeze_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_squeeze_dim =
    foreign "atg_squeeze_dim" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_squeeze_dim_ =
    foreign "atg_squeeze_dim_" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_squeeze_dims =
    foreign "atg_squeeze_dims" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_squeeze_dims_ =
    foreign
      "atg_squeeze_dims_"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_sspaddmm =
    foreign
      "atg_sspaddmm"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_sspaddmm_out =
    foreign
      "atg_sspaddmm_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> scalar
       @-> scalar
       @-> returning raw_tensor)
  ;;

  let stubs_stack =
    foreign "atg_stack" (ptr gc_tensor @-> int @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_stack_out =
    foreign
      "atg_stack_out"
      (gc_tensor @-> ptr gc_tensor @-> int @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_std = foreign "atg_std" (gc_tensor @-> int @-> returning raw_tensor)

  let stubs_std_correction =
    foreign
      "atg_std_correction"
      (gc_tensor @-> ptr int64_t @-> int @-> scalar @-> int @-> returning raw_tensor)
  ;;

  let stubs_std_correction_out =
    foreign
      "atg_std_correction_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> scalar
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_std_dim =
    foreign
      "atg_std_dim"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_std_mean =
    foreign "atg_std_mean" (ptr raw_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs_std_mean_correction =
    foreign
      "atg_std_mean_correction"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> scalar
       @-> int
       @-> returning void)
  ;;

  let stubs_std_mean_correction_out =
    foreign
      "atg_std_mean_correction_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> scalar
       @-> int
       @-> returning void)
  ;;
end

module C24 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_std_mean_dim =
    foreign
      "atg_std_mean_dim"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_std_out =
    foreign
      "atg_std_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_stft =
    foreign
      "atg_stft"
      (gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> int
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_stft_center =
    foreign
      "atg_stft_center"
      (gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int64_t
       @-> int
       @-> gc_tensor
       @-> int
       @-> string
       @-> int
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_stride = foreign "atg_stride" (gc_tensor @-> int64_t @-> returning int64_t)

  let stubs_sub =
    foreign "atg_sub" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_sub_ =
    foreign "atg_sub_" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_sub_out =
    foreign
      "atg_sub_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_sub_scalar =
    foreign "atg_sub_scalar" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_sub_scalar_ =
    foreign "atg_sub_scalar_" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_sub_scalar_out =
    foreign
      "atg_sub_scalar_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_subtract =
    foreign "atg_subtract" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_subtract_ =
    foreign "atg_subtract_" (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_subtract_out =
    foreign
      "atg_subtract_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_subtract_scalar =
    foreign
      "atg_subtract_scalar"
      (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_subtract_scalar_ =
    foreign
      "atg_subtract_scalar_"
      (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_sum = foreign "atg_sum" (gc_tensor @-> int @-> returning raw_tensor)

  let stubs_sum_dim_intlist =
    foreign
      "atg_sum_dim_intlist"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_sum_intlist_out =
    foreign
      "atg_sum_intlist_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_sum_out =
    foreign "atg_sum_out" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_sum_to_size =
    foreign "atg_sum_to_size" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_svd =
    foreign "atg_svd" (ptr raw_tensor @-> gc_tensor @-> int @-> int @-> returning void)
  ;;

  let stubs_svd_u =
    foreign
      "atg_svd_u"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_swapaxes =
    foreign "atg_swapaxes" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_swapaxes_ =
    foreign "atg_swapaxes_" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_swapdims =
    foreign "atg_swapdims" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_swapdims_ =
    foreign "atg_swapdims_" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_tr = foreign "atg_t" (gc_tensor @-> returning raw_tensor)
  let stubs_t_ = foreign "atg_t_" (gc_tensor @-> returning raw_tensor)
  let stubs_t_copy = foreign "atg_t_copy" (gc_tensor @-> returning raw_tensor)

  let stubs_t_copy_out =
    foreign "atg_t_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_take = foreign "atg_take" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_take_along_dim =
    foreign
      "atg_take_along_dim"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_take_along_dim_out =
    foreign
      "atg_take_along_dim_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_take_out =
    foreign "atg_take_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_tan = foreign "atg_tan" (gc_tensor @-> returning raw_tensor)
  let stubs_tan_ = foreign "atg_tan_" (gc_tensor @-> returning raw_tensor)

  let stubs_tan_out =
    foreign "atg_tan_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_tanh = foreign "atg_tanh" (gc_tensor @-> returning raw_tensor)
  let stubs_tanh_ = foreign "atg_tanh_" (gc_tensor @-> returning raw_tensor)

  let stubs_tanh_backward =
    foreign "atg_tanh_backward" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_tanh_backward_grad_input =
    foreign
      "atg_tanh_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_tanh_out =
    foreign "atg_tanh_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_tensor_split =
    foreign
      "atg_tensor_split"
      (gc_tensor @-> int64_t @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_tensor_split_indices =
    foreign
      "atg_tensor_split_indices"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_tensor_split_tensor_indices_or_sections =
    foreign
      "atg_tensor_split_tensor_indices_or_sections"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_tensordot =
    foreign
      "atg_tensordot"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_tensordot_out =
    foreign
      "atg_tensordot_out"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_threshold =
    foreign "atg_threshold" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_threshold_ =
    foreign "atg_threshold_" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_threshold_backward =
    foreign
      "atg_threshold_backward"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_threshold_backward_grad_input =
    foreign
      "atg_threshold_backward_grad_input"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_threshold_out =
    foreign
      "atg_threshold_out"
      (gc_tensor @-> gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_tile =
    foreign "atg_tile" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_to_ = foreign "atg_to" (gc_tensor @-> int @-> returning raw_tensor)

  let stubs_to_dense =
    foreign "atg_to_dense" (gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_to_dense_backward =
    foreign
      "atg_to_dense_backward"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_to_device =
    foreign
      "atg_to_device"
      (gc_tensor @-> int @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_to_dtype =
    foreign "atg_to_dtype" (gc_tensor @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_to_dtype_layout =
    foreign
      "atg_to_dtype_layout"
      (gc_tensor @-> int @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_to_mkldnn =
    foreign "atg_to_mkldnn" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_to_mkldnn_backward =
    foreign "atg_to_mkldnn_backward" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_to_mkldnn_out =
    foreign "atg_to_mkldnn_out" (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_to_other =
    foreign
      "atg_to_other"
      (gc_tensor @-> gc_tensor @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_to_padded_tensor =
    foreign
      "atg_to_padded_tensor"
      (gc_tensor @-> double @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_to_padded_tensor_out =
    foreign
      "atg_to_padded_tensor_out"
      (gc_tensor @-> gc_tensor @-> double @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_topk =
    foreign
      "atg_topk"
      (ptr raw_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_topk_values =
    foreign
      "atg_topk_values"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_totype = foreign "atg_totype" (gc_tensor @-> int @-> returning raw_tensor)
  let stubs_trace = foreign "atg_trace" (gc_tensor @-> returning raw_tensor)

  let stubs_trace_backward =
    foreign
      "atg_trace_backward"
      (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_trace_out =
    foreign "atg_trace_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_transpose =
    foreign "atg_transpose" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_transpose_ =
    foreign "atg_transpose_" (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_transpose_copy =
    foreign
      "atg_transpose_copy"
      (gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_transpose_copy_int_out =
    foreign
      "atg_transpose_copy_int_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_trapezoid =
    foreign "atg_trapezoid" (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_trapezoid_dx =
    foreign "atg_trapezoid_dx" (gc_tensor @-> scalar @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_trapz =
    foreign "atg_trapz" (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_trapz_dx =
    foreign "atg_trapz_dx" (gc_tensor @-> double @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_triangular_solve =
    foreign
      "atg_triangular_solve"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_triangular_solve_x =
    foreign
      "atg_triangular_solve_x"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_tril = foreign "atg_tril" (gc_tensor @-> int64_t @-> returning raw_tensor)
  let stubs_tril_ = foreign "atg_tril_" (gc_tensor @-> int64_t @-> returning raw_tensor)

  let stubs_tril_indices =
    foreign
      "atg_tril_indices"
      (int64_t @-> int64_t @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_tril_indices_out =
    foreign
      "atg_tril_indices_out"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_tril_out =
    foreign "atg_tril_out" (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_triplet_margin_loss =
    foreign
      "atg_triplet_margin_loss"
      (gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> double
       @-> double
       @-> double
       @-> int
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_triu = foreign "atg_triu" (gc_tensor @-> int64_t @-> returning raw_tensor)
  let stubs_triu_ = foreign "atg_triu_" (gc_tensor @-> int64_t @-> returning raw_tensor)

  let stubs_triu_indices =
    foreign
      "atg_triu_indices"
      (int64_t @-> int64_t @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_triu_indices_out =
    foreign
      "atg_triu_indices_out"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_triu_out =
    foreign "atg_triu_out" (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_true_divide =
    foreign "atg_true_divide" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_true_divide_ =
    foreign "atg_true_divide_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_true_divide_out =
    foreign
      "atg_true_divide_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_true_divide_scalar =
    foreign "atg_true_divide_scalar" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_true_divide_scalar_ =
    foreign "atg_true_divide_scalar_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_trunc = foreign "atg_trunc" (gc_tensor @-> returning raw_tensor)
  let stubs_trunc_ = foreign "atg_trunc_" (gc_tensor @-> returning raw_tensor)
end

module C25 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_trunc_out =
    foreign "atg_trunc_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_type_as =
    foreign "atg_type_as" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_unbind =
    foreign "atg_unbind" (gc_tensor @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_unbind_copy =
    foreign "atg_unbind_copy" (gc_tensor @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_unbind_copy_int_out =
    foreign
      "atg_unbind_copy_int_out"
      (ptr gc_tensor @-> int @-> gc_tensor @-> int64_t @-> returning void)
  ;;

  let stubs_unflatten =
    foreign
      "atg_unflatten"
      (gc_tensor @-> int64_t @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_unflatten_dense_tensors =
    foreign
      "atg_unflatten_dense_tensors"
      (gc_tensor @-> ptr gc_tensor @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs_unfold =
    foreign
      "atg_unfold"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_unfold_backward =
    foreign
      "atg_unfold_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_unfold_backward_out =
    foreign
      "atg_unfold_backward_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_unfold_copy =
    foreign
      "atg_unfold_copy"
      (gc_tensor @-> int64_t @-> int64_t @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_unfold_copy_out =
    foreign
      "atg_unfold_copy_out"
      (gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int64_t
       @-> int64_t
       @-> returning raw_tensor)
  ;;

  let stubs_uniform =
    foreign "atg_uniform" (gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_uniform_ =
    foreign "atg_uniform_" (gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_uniform_out =
    foreign
      "atg_uniform_out"
      (gc_tensor @-> gc_tensor @-> double @-> double @-> returning raw_tensor)
  ;;

  let stubs_unique_consecutive =
    foreign
      "atg_unique_consecutive"
      (ptr raw_tensor @-> gc_tensor @-> int @-> int @-> int64_t @-> int @-> returning void)
  ;;

  let stubs_unique_consecutive_out =
    foreign
      "atg_unique_consecutive_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int
       @-> int
       @-> int64_t
       @-> int
       @-> returning void)
  ;;

  let stubs_unique_dim =
    foreign
      "atg_unique_dim"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> int @-> int @-> int @-> returning void)
  ;;

  let stubs_unique_dim_consecutive =
    foreign
      "atg_unique_dim_consecutive"
      (ptr raw_tensor @-> gc_tensor @-> int64_t @-> int @-> int @-> returning void)
  ;;

  let stubs_unique_dim_consecutive_out =
    foreign
      "atg_unique_dim_consecutive_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_unique_dim_out =
    foreign
      "atg_unique_dim_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> int64_t
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_unsafe_chunk =
    foreign
      "atg_unsafe_chunk"
      (gc_tensor @-> int64_t @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_unsafe_split =
    foreign
      "atg_unsafe_split"
      (gc_tensor @-> int64_t @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_unsafe_split_tensor_out =
    foreign
      "atg_unsafe_split_tensor_out"
      (ptr gc_tensor @-> int @-> gc_tensor @-> int64_t @-> int64_t @-> returning void)
  ;;

  let stubs_unsafe_split_with_sizes =
    foreign
      "atg_unsafe_split_with_sizes"
      (gc_tensor @-> ptr int64_t @-> int @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_unsafe_split_with_sizes_out =
    foreign
      "atg_unsafe_split_with_sizes_out"
      (ptr gc_tensor
       @-> int
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int64_t
       @-> returning void)
  ;;

  let stubs_unsqueeze =
    foreign "atg_unsqueeze" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_unsqueeze_ =
    foreign "atg_unsqueeze_" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_unsqueeze_copy =
    foreign "atg_unsqueeze_copy" (gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_unsqueeze_copy_out =
    foreign
      "atg_unsqueeze_copy_out"
      (gc_tensor @-> gc_tensor @-> int64_t @-> returning raw_tensor)
  ;;

  let stubs_upsample_bicubic2d =
    foreign
      "atg_upsample_bicubic2d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_bicubic2d_backward =
    foreign
      "atg_upsample_bicubic2d_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_bicubic2d_backward_grad_input =
    foreign
      "atg_upsample_bicubic2d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_bicubic2d_out =
    foreign
      "atg_upsample_bicubic2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_bicubic2d_vec =
    foreign
      "atg_upsample_bicubic2d_vec"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_bilinear2d =
    foreign
      "atg_upsample_bilinear2d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_bilinear2d_backward =
    foreign
      "atg_upsample_bilinear2d_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_bilinear2d_backward_grad_input =
    foreign
      "atg_upsample_bilinear2d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_bilinear2d_out =
    foreign
      "atg_upsample_bilinear2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_bilinear2d_vec =
    foreign
      "atg_upsample_bilinear2d_vec"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_bilinear2d_vec_out =
    foreign
      "atg_upsample_bilinear2d_vec_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_linear1d =
    foreign
      "atg_upsample_linear1d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_linear1d_backward =
    foreign
      "atg_upsample_linear1d_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_linear1d_backward_grad_input =
    foreign
      "atg_upsample_linear1d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_linear1d_out =
    foreign
      "atg_upsample_linear1d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_linear1d_vec =
    foreign
      "atg_upsample_linear1d_vec"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest1d =
    foreign
      "atg_upsample_nearest1d"
      (gc_tensor @-> ptr int64_t @-> int @-> double @-> int @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest1d_backward =
    foreign
      "atg_upsample_nearest1d_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest1d_backward_grad_input =
    foreign
      "atg_upsample_nearest1d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest1d_out =
    foreign
      "atg_upsample_nearest1d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest1d_vec =
    foreign
      "atg_upsample_nearest1d_vec"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest2d =
    foreign
      "atg_upsample_nearest2d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest2d_backward =
    foreign
      "atg_upsample_nearest2d_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest2d_backward_grad_input =
    foreign
      "atg_upsample_nearest2d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest2d_out =
    foreign
      "atg_upsample_nearest2d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest2d_vec =
    foreign
      "atg_upsample_nearest2d_vec"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest2d_vec_out =
    foreign
      "atg_upsample_nearest2d_vec_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest3d =
    foreign
      "atg_upsample_nearest3d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest3d_backward =
    foreign
      "atg_upsample_nearest3d_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest3d_backward_grad_input =
    foreign
      "atg_upsample_nearest3d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest3d_out =
    foreign
      "atg_upsample_nearest3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_nearest3d_vec =
    foreign
      "atg_upsample_nearest3d_vec"
      (gc_tensor @-> ptr int64_t @-> int @-> ptr double @-> int @-> returning raw_tensor)
  ;;

  let stubs_upsample_trilinear3d =
    foreign
      "atg_upsample_trilinear3d"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_trilinear3d_backward =
    foreign
      "atg_upsample_trilinear3d_backward"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_trilinear3d_backward_grad_input =
    foreign
      "atg_upsample_trilinear3d_backward_grad_input"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_trilinear3d_out =
    foreign
      "atg_upsample_trilinear3d_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_upsample_trilinear3d_vec =
    foreign
      "atg_upsample_trilinear3d_vec"
      (gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> ptr double
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_value_selecting_reduction_backward =
    foreign
      "atg_value_selecting_reduction_backward"
      (gc_tensor
       @-> int64_t
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_values = foreign "atg_values" (gc_tensor @-> returning raw_tensor)
  let stubs_values_copy = foreign "atg_values_copy" (gc_tensor @-> returning raw_tensor)

  let stubs_values_copy_out =
    foreign "atg_values_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_vander =
    foreign "atg_vander" (gc_tensor @-> int64_t @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_var = foreign "atg_var" (gc_tensor @-> int @-> returning raw_tensor)

  let stubs_var_correction =
    foreign
      "atg_var_correction"
      (gc_tensor @-> ptr int64_t @-> int @-> scalar @-> int @-> returning raw_tensor)
  ;;

  let stubs_var_correction_out =
    foreign
      "atg_var_correction_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> scalar
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_var_dim =
    foreign
      "atg_var_dim"
      (gc_tensor @-> ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_var_mean =
    foreign "atg_var_mean" (ptr raw_tensor @-> gc_tensor @-> int @-> returning void)
  ;;

  let stubs_var_mean_correction =
    foreign
      "atg_var_mean_correction"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> scalar
       @-> int
       @-> returning void)
  ;;

  let stubs_var_mean_correction_out =
    foreign
      "atg_var_mean_correction_out"
      (ptr raw_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> scalar
       @-> int
       @-> returning void)
  ;;

  let stubs_var_mean_dim =
    foreign
      "atg_var_mean_dim"
      (ptr raw_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning void)
  ;;

  let stubs_var_out =
    foreign
      "atg_var_out"
      (gc_tensor
       @-> gc_tensor
       @-> ptr int64_t
       @-> int
       @-> int
       @-> int
       @-> returning raw_tensor)
  ;;

  let stubs_vdot = foreign "atg_vdot" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_vdot_out =
    foreign "atg_vdot_out" (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_view =
    foreign "atg_view" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_view_as =
    foreign "atg_view_as" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_view_as_complex =
    foreign "atg_view_as_complex" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_view_as_complex_copy =
    foreign "atg_view_as_complex_copy" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_view_as_complex_copy_out =
    foreign
      "atg_view_as_complex_copy_out"
      (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_view_as_real = foreign "atg_view_as_real" (gc_tensor @-> returning raw_tensor)

  let stubs_view_as_real_copy =
    foreign "atg_view_as_real_copy" (gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_view_as_real_copy_out =
    foreign "atg_view_as_real_copy_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_view_copy =
    foreign "atg_view_copy" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_view_copy_dtype =
    foreign "atg_view_copy_dtype" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_view_copy_dtype_out =
    foreign
      "atg_view_copy_dtype_out"
      (gc_tensor @-> gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_view_copy_out =
    foreign
      "atg_view_copy_out"
      (gc_tensor @-> gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;

  let stubs_view_dtype =
    foreign "atg_view_dtype" (gc_tensor @-> int @-> returning raw_tensor)
  ;;

  let stubs_vsplit =
    foreign "atg_vsplit" (gc_tensor @-> int64_t @-> returning (ptr raw_tensor))
  ;;

  let stubs_vsplit_array =
    foreign
      "atg_vsplit_array"
      (gc_tensor @-> ptr int64_t @-> int @-> returning (ptr raw_tensor))
  ;;

  let stubs_vstack = foreign "atg_vstack" (ptr gc_tensor @-> int @-> returning raw_tensor)

  let stubs_vstack_out =
    foreign "atg_vstack_out" (gc_tensor @-> ptr gc_tensor @-> int @-> returning raw_tensor)
  ;;
end

module C26 (F : Cstubs.FOREIGN) = struct
  open F
  open Type_defs

  let stubs_where = foreign "atg_where" (gc_tensor @-> returning (ptr raw_tensor))

  let stubs_where_scalar =
    foreign "atg_where_scalar" (gc_tensor @-> scalar @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_where_scalarother =
    foreign
      "atg_where_scalarother"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_where_scalarself =
    foreign
      "atg_where_scalarself"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_where_self =
    foreign
      "atg_where_self"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_where_self_out =
    foreign
      "atg_where_self_out"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_xlogy = foreign "atg_xlogy" (gc_tensor @-> gc_tensor @-> returning raw_tensor)

  let stubs_xlogy_ =
    foreign "atg_xlogy_" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_xlogy_outscalar_other =
    foreign
      "atg_xlogy_outscalar_other"
      (gc_tensor @-> gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_xlogy_outscalar_self =
    foreign
      "atg_xlogy_outscalar_self"
      (gc_tensor @-> scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_xlogy_outtensor =
    foreign
      "atg_xlogy_outtensor"
      (gc_tensor @-> gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_xlogy_scalar_other =
    foreign "atg_xlogy_scalar_other" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_xlogy_scalar_other_ =
    foreign "atg_xlogy_scalar_other_" (gc_tensor @-> scalar @-> returning raw_tensor)
  ;;

  let stubs_xlogy_scalar_self =
    foreign "atg_xlogy_scalar_self" (scalar @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_zero = foreign "atg_zero" (gc_tensor @-> returning raw_tensor)
  let stubs_zero_ = foreign "atg_zero_" (gc_tensor @-> returning raw_tensor)

  let stubs_zero_out =
    foreign "atg_zero_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_zeros =
    foreign "atg_zeros" (ptr int64_t @-> int @-> int @-> int @-> returning raw_tensor)
  ;;

  let stubs_zeros_like = foreign "atg_zeros_like" (gc_tensor @-> returning raw_tensor)

  let stubs_zeros_like_out =
    foreign "atg_zeros_like_out" (gc_tensor @-> gc_tensor @-> returning raw_tensor)
  ;;

  let stubs_zeros_out =
    foreign "atg_zeros_out" (gc_tensor @-> ptr int64_t @-> int @-> returning raw_tensor)
  ;;
end

module C (F : Cstubs.FOREIGN) = struct
  include C0 (F)
  include C1 (F)
  include C2 (F)
  include C3 (F)
  include C4 (F)
  include C5 (F)
  include C6 (F)
  include C7 (F)
  include C8 (F)
  include C9 (F)
  include C10 (F)
  include C11 (F)
  include C12 (F)
  include C13 (F)
  include C14 (F)
  include C15 (F)
  include C16 (F)
  include C17 (F)
  include C18 (F)
  include C19 (F)
  include C20 (F)
  include C21 (F)
  include C22 (F)
  include C23 (F)
  include C24 (F)
  include C25 (F)
  include C26 (F)
end
